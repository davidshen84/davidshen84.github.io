(self.webpackChunkblog=self.webpackChunkblog||[]).push([[522],{92522:(ae,we,B)=>{"use strict";B.r(we),B.d(we,{TfjsModule:()=>MW});var ie={};B.r(ie),B.d(ie,{assertParamsValid:()=>Ac,computeFlatOffset:()=>Oc,computeOutShape:()=>gf,getNormalizedAxes:()=>wf,isSliceContinous:()=>Rc,maskToAxes:()=>nl,parseSliceParams:()=>sl,sliceInfo:()=>Fc,startForAxis:()=>kf,startIndicesWithElidedDims:()=>vf,stopForAxis:()=>If,stopIndicesWithElidedDims:()=>Nf,stridesForAxis:()=>Cf,stridesWithElidedDims:()=>yf});var We={};B.r(We),B.d(We,{collectGatherOpShapeInfo:()=>Mh,computeOutShape:()=>dm,segOpComputeOptimalWindowSize:()=>hm});var q={};B.r(q),B.d(q,{ERF_A1:()=>Dh,ERF_A2:()=>Ah,ERF_A3:()=>Rh,ERF_A4:()=>Oh,ERF_A5:()=>Fh,ERF_P:()=>Eh,PARALLELIZE_THRESHOLD:()=>Ih,SELU_SCALE:()=>Cl,SELU_SCALEALPHA:()=>Nl,applyActivation:()=>gl,assertAndGetBroadcastShape:()=>qe,assertAxesAreInnerMostDims:()=>qt,assertParamsConsistent:()=>kh,assignToTypedArray:()=>lm,axesAreInnerMostDims:()=>Kc,calculateShapes:()=>fa,castTensor:()=>MC,combineLocations:()=>Rf,complexWithEvenIndex:()=>am,complexWithOddIndex:()=>im,computeConv2DInfo:()=>Bt,computeConv3DInfo:()=>ws,computeDefaultPad:()=>zc,computeDilation2DInfo:()=>oa,computeOptimalWindowSize:()=>vl,computeOutAndReduceShapes:()=>Wt,computeOutShape:()=>cs,computePool2DInfo:()=>Nn,computePool3DInfo:()=>os,convertConv2DDataFormat:()=>as,eitherStridesOrDilationsAreOne:()=>St,expandShapeToKeepDim:()=>$t,exponent:()=>cm,exponents:()=>um,fromStringArrayToUint8:()=>pm,fromUint8ToStringArray:()=>zh,getAxesPermutation:()=>_t,getBroadcastDims:()=>ia,getComplexWithIndex:()=>Ph,getFusedBiasGradient:()=>ml,getFusedDyActivation:()=>fl,getImageCenter:()=>Sh,getInnerMostAxes:()=>Rt,getPermuted:()=>da,getReductionAxes:()=>Ft,getReshaped:()=>ha,getReshapedPermuted:()=>pa,getSliceBeginCoords:()=>Th,getSliceSize:()=>$h,getUndoAxesPermutation:()=>Sr,log:()=>LC,mergeRealAndImagArrays:()=>hs,prepareAndValidate:()=>_h,prepareSplitSize:()=>Lh,reshapeTensor:()=>zC,segment_util:()=>We,shouldFuse:()=>yl,slice_util:()=>ie,splitRealAndImagArrays:()=>om,tupleValuesAreOne:()=>vs,upcastType:()=>fn,validateInput:()=>PC,validateUpdateShape:()=>rm,warn:()=>Dr});var ze={};B.r(ze),B.d(ze,{addImpl:()=>Ry,bincountImpl:()=>Zd,bincountReduceImpl:()=>zy,ceilImpl:()=>Vy,concatImpl:()=>By,expImpl:()=>Hy,expm1Impl:()=>Ky,floorImpl:()=>Zy,gatherV2Impl:()=>Yy,greaterImpl:()=>Jy,lessImpl:()=>Qy,linSpaceImpl:()=>ex,logImpl:()=>tx,maxImpl:()=>nx,maximumImpl:()=>rx,minimumImpl:()=>ox,multiplyImpl:()=>Yd,negImpl:()=>ix,notEqualImpl:()=>lx,prodImpl:()=>dx,rangeImpl:()=>px,rsqrtImpl:()=>fx,simpleAbsImpl:()=>Fy,sliceImpl:()=>My,squaredDifferenceImpl:()=>yx,stridedSliceImpl:()=>xx,subImpl:()=>qy,tileImpl:()=>bx,topKImpl:()=>wx,transposeImpl:()=>qd,uniqueImpl:()=>vx});var ye=B(36895),be=B(69170),A=B(15861);class _{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class D{decComplexRef(t){}time(t){return b("time")}read(t){return b("read")}readSync(t){return b("readSync")}numDataIds(){return b("numDataIds")}disposeData(t){return b("disposeData")}write(t,e,s){return b("write")}move(t,e,s,r){return b("move")}memory(){return b("memory")}floatPrecision(){return b("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,s,r){return b("batchMatMul")}fusedBatchMatMul({}){return b("fusedBatchMatMul")}slice(t,e,s){return b("slice")}stridedSlice(t,e,s,r){return b("stridedSlice")}unstack(t,e){return b("unstack")}reverse(t,e){return b("reverse")}concat(t,e){return b("concat")}neg(t){return b("neg")}add(t,e){return b("add")}addN(t){return b("addN")}subtract(t,e){return b("subtract")}multiply(t,e){return b("multiply")}realDivide(t,e){return b("realDivide")}floorDiv(t,e){return b("floorDiv")}sum(t,e){return b("sum")}prod(t,e){return b("prod")}unsortedSegmentSum(t,e,s){return b("unsortedSegmentSum")}argMin(t,e){return b("argMin")}argMax(t,e){return b("argMax")}equal(t,e){return b("equal")}notEqual(t,e){return b("notEqual")}less(t,e){return b("less")}lessEqual(t,e){return b("lessEqual")}greater(t,e){return b("greater")}greaterEqual(t,e){return b("greaterEqual")}logicalNot(t){return b("logicalNot")}logicalAnd(t,e){return b("logicalAnd")}logicalOr(t,e){return b("logicalOr")}where(t){return b("where")}select(t,e,s){return b("select")}topk(t,e,s){return b("topk")}min(t,e){return b("min")}minimum(t,e){return b("minimum")}mod(t,e){return b("mod")}max(t,e){return b("max")}maximum(t,e){return b("maximum")}all(t,e){return b("all")}any(t,e){return b("any")}squaredDifference(t,e){return b("squaredDifference")}ceil(t){return b("ceil")}floor(t){return b("floor")}round(t){return b("round")}sign(t){return b("sign")}isNaN(t){return b("isNaN")}isInf(t){return b("isInf")}isFinite(t){return b("isFinite")}pow(t,e){return b("pow")}exp(t){return b("exp")}expm1(t){return b("expm1")}softmax(t,e){return b("softmax")}log(t){return b("log")}log1p(t){return b("log1p")}sqrt(t){return b("sqrt")}rsqrt(t){return b("rsqrt")}square(t){return b("square")}reciprocal(t){return b("reciprocal")}relu(t){return b("relu")}relu6(t){return b("relu6")}prelu(t,e){return b("prelu")}elu(t){return b("elu")}eluDer(t,e){return b("eluDer")}selu(t){return b("selu")}int(t){return b("int")}clip(t,e,s){return b("clip")}abs(t){return b("abs")}complexAbs(t){return b("complexAbs")}sigmoid(t){return b("sigmoid")}softplus(t){return b("softplus")}sin(t){return b("sin")}cos(t){return b("cos")}tan(t){return b("tan")}asin(t){return b("asin")}acos(t){return b("acos")}atan(t){return b("atan")}atan2(t,e){return b("atan2")}sinh(t){return b("sinh")}cosh(t){return b("cosh")}tanh(t){return b("tanh")}asinh(t){return b("asinh")}acosh(t){return b("acosh")}atanh(t){return b("atanh")}erf(t){return b("erf")}step(t,e){return b("step")}fusedConv2d({}){return b("fusedConv2d")}conv2d(t,e,s){return b("conv2d")}conv2dDerInput(t,e,s){return b("conv2dDerInput")}conv2dDerFilter(t,e,s){return b("conv2dDerFilter")}fusedDepthwiseConv2D({}){return b("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,s){return b("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,s){return b("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,s){return b("depthwiseConv2DDerFilter")}conv3d(t,e,s){return b("conv3d")}conv3dDerInput(t,e,s){return b("conv3dDerInput")}conv3dDerFilter(t,e,s){return b("conv3dDerFilter")}maxPool(t,e){return b("maxPool")}maxPoolBackprop(t,e,s,r){return b("maxPoolBackprop")}avgPool(t,e){return b("avgPool")}avgPoolBackprop(t,e,s){return b("avgPoolBackprop")}avgPool3d(t,e){return b("avgPool3d")}avgPool3dBackprop(t,e,s){return b("avgPool3dBackprop")}maxPool3d(t,e){return b("maxPool3d")}maxPool3dBackprop(t,e,s,r){return b("maxPool3dBackprop")}reshape(t,e){return b("reshape")}cast(t,e){return b("cast")}tile(t,e){return b("tile")}pad(t,e,s){return b("pad")}transpose(t,e){return b("transpose")}gather(t,e,s,r=0){return b("gather")}gatherND(t,e){return b("gatherND")}scatterND(t,e,s){return b("scatterND")}batchToSpaceND(t,e,s){return b("batchToSpaceND")}spaceToBatchND(t,e,s){return b("spaceToBatchND")}resizeBilinear(t,e,s,r,o){return b("resizeBilinear")}resizeBilinearBackprop(t,e,s){return b("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,s,r,o){return b("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,s){return b("resizeNearestNeighborBackprop")}batchNorm(t,e,s,r,o,a){return b("batchNorm")}localResponseNormalization4D(t,e,s,r,o){return b("localResponseNormalization4D")}LRNGrad(t,e,s,r,o,a,i){return b("LRNGrad")}multinomial(t,e,s,r){return b("multinomial")}oneHot(t,e,s,r){return b("oneHot")}cumsum(t,e,s,r){return b("cumsum")}nonMaxSuppression(t,e,s,r,o){return b("nonMaxSuppression")}fft(t){return b("fft")}ifft(t){return b("ifft")}complex(t,e){return b("complex")}real(t){return b("real")}imag(t){return b("imag")}cropAndResize(t,e,s,r,o,a){return b("cropAndResize")}depthToSpace(t,e,s){return b("depthToSpace")}split(t,e,s){return b("split")}sparseToDense(t,e,s,r){return b("sparseToDense")}diag(t){return b("diag")}fill(t,e,s){return b("fill")}onesLike(t){return b("onesLike")}zerosLike(t){return b("zerosLike")}linspace(t,e,s){return b("linspace")}dispose(){return b("dispose")}}function b(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function $(n){let t=n.length,e=0,s=0;for(;t>0;)s=Math.random()*t|0,t--,e=n[t],n[t]=n[s],n[s]=e}function M(n,t,e){return Math.max(n,Math.min(t,e))}function G(n){return n%2==0?n:n+1}function k(n,t){if(!n)throw new Error("string"==typeof t?t:t())}function Le(n,t,e=""){k(he(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function ue(n){k(null!=n,()=>"The input to the tensor constructor must be a non-null value.")}function ce(n,t=[],e=!1){if(null==t&&(t=[]),Array.isArray(n)||Gn(n)&&!e)for(let s=0;s<n.length;++s)ce(n[s],t,e);else t.push(n);return t}function U(n){if(0===n.length)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function he(n,t){if(n===t)return!0;if(null==n||null==t||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Te(n){return n%1==0}function Ge(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function He(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function ot(n,t=(s=>0),e){return new Promise((s,r)=>{let o=0;const a=()=>{if(n())return void s();o++;const i=t(o);null!=e&&o>=e?r():setTimeout(a,i)};a()})}function Jt(n,t){let e=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)e*=n[o];else if(-1===n[o]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(-1===s){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(0===e)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function $e(n,t){const e=t.length;return k((n=null==n?t.map((s,r)=>r):[].concat(n)).every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),k(n.every(s=>Te(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function zs(n,t){const e=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||r?null:$e(t,n).sort();let a=0;for(let i=0;i<n.length;++i){if(null!=o){if(o[a]===i&&1!==n[i])throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(null==o[a]||o[a]>i)&&1===n[i]&&(e.push(n[i]),s.push(i)),o[a]<=i&&a++}1!==n[i]&&(e.push(n[i]),s.push(i))}return{newShape:e,keptDims:s}}function Qt(n,t){let e=null;if(null==n||"float32"===n)e=new Float32Array(t);else if("int32"===n)e=new Int32Array(t);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);e=new Uint8Array(t)}return e}function hr(n,t){let e=null;if(null==n||"float32"===n)e=new Float32Array(t);else if("int32"===n)e=new Int32Array(t);else if("bool"===n)e=new Uint8Array(t);else{if("string"!==n)throw new Error(`Unknown data type ${n}`);e=new Array(t)}return e}function vu(n,t){return!("complex64"===t||"float32"===t&&"complex64"!==n||"int32"===t&&"float32"!==n&&"complex64"!==n||"bool"===t&&"bool"===n)}function Gn(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array}function vp(n){if("float32"===n||"int32"===n)return 4;if("complex64"===n)return 8;if("bool"===n)return 1;throw new Error(`Unknown dtype ${n}`)}function to(n){return"string"==typeof n||n instanceof String}function Nu(n){return"number"==typeof n}function no(n){return Array.isArray(n)?no(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array?"int32":Nu(n)?"float32":to(n)?"string":function jb(n){return"boolean"==typeof n}(n)?"bool":"float32"}function Cu(n){return!!(n&&n.constructor&&n.call&&n.apply)}function ku(n,t){for(let e=t;e<n;++e)if(n%e==0)return e;return n}function Fe(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Np(n,t,e){const s=new Array;if(1===t.length){const r=t[0];for(let o=0;o<r;o++)s[o]=e[n+o]}else{const r=t[0],o=t.slice(1),a=o.reduce((i,l)=>i*l);for(let i=0;i<r;i++)s[i]=Np(n+i*a,o,e)}return s}function On(n,t){if(0===n.length)return t[0];const e=n.reduce((s,r)=>s*r);if(0===e)return[];if(e!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}.`);return Np(0,n,t)}function Cp(n,t){const e=en(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function en(n,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t)return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function kp(n,t){const e=n.reduce((s,r)=>s*r,1);if(null==t||"float32"===t)return On(n,new Float32Array(e));if("int32"===t)return On(n,new Int32Array(e));if("bool"===t)return On(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Ip(n){n.forEach(t=>{k(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Un(n,t,e){if(0===t)return 0;if(1===t)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function so(n,t,e){if(0===t)return[];if(1===t)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function Sp(n){return n&&n.then&&"function"==typeof n.then}const Tp="tfjsflags";class Kb{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},null!=this.urlFlags[t]){const r=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}getAsync(t){var e=this;return(0,A.Z)(function*(){return t in e.flags||(e.flags[t]=yield e.evaluateFlag(t)),e.flags[t]})()}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Sp(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=function qb(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(function Xb(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}(t,s[0],s[1]),s.join("="))),t}(this.global.location.search);Tp in t&&t[Tp].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=function Zb(n,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${n}.`)}(r,o)})}}function te(){return $p}let Iu,$p=null;function _p(){if(null==Iu){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else{if(!(typeof self<"u"))throw new Error("Could not find a global object");n=self}Iu=n}return Iu}function Ep(n,t){const e=function Jb(){const n=_p();return null==n._tfGlobals&&(n._tfGlobals=new Map),n._tfGlobals}();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Va="Abs",ro="Acos",oo="Acosh",dr="Add",Su="AddN",Ba="ArgMax",Wa="ArgMin",ao="Asin",lo="Asinh",uo="Atan",co="Atanh",ho="Atan2",Ga="AvgPool",_u="AvgPoolGrad",Ua="AvgPool3D",Eu="AvgPool3DGrad",Ha="BatchMatMul",ja="BatchToSpaceND",Dp="Bincount",po="Cast",fo="Ceil",mo="ClipByValue",Du="Complex",Ka="ComplexAbs",qa="Concat",Xa="Conv2D",Au="Conv2DBackpropFilter",Za="Conv2DBackpropInput",Ya="Conv3D",Ru="Conv3DBackpropFilterV2",Ou="Conv3DBackpropInputV2",go="Cos",yo="Cosh",Ja="Cumsum",Fu="CropAndResize",Ap="DenseBincount",Pu="DepthToSpace",Qa="DepthwiseConv2dNative",Lu="DepthwiseConv2dNativeBackpropFilter",Mu="DepthwiseConv2dNativeBackpropInput",ei="Dilation2D",zu="Dilation2DBackpropInput",Vu="Dilation2DBackpropFilter",xo="RealDiv",bo="Elu",Bu="EluGrad",wo="Erf",ti="Equal",vo="Exp",ni="ExpandDims",No="Expm1",Gu="Fill",Uu="FlipLeftRight",Co="Floor",ko="FloorDiv",si="FusedBatchNorm",ri="GatherV2",Op="GatherNd",oi="Greater",Io="GreaterEqual",ai="Identity",Hu="IFFT",ju="Imag",So="IsFinite",To="IsInf",$o="IsNan",ii="LeakyRelu",li="Less",ui="LessEqual",Fp="LinSpace",_o="Log",Eo="Log1p",ci="LogicalAnd",hi="LogicalNot",di="LogicalOr",pi="LRN",Ku="LRNGrad",fi="Max",Do="Maximum",mi="MaxPool",qu="MaxPoolGrad",gi="MaxPool3D",Xu="MaxPool3DGrad",Pp="MaxPoolWithArgmax",yi="Mean",xi="Min",Ao="Minimum",bi="MirrorPad",Ro="Mod",Lp="Multinomial",Oo="Multiply",wi="Neg",vi="NotEqual",Zu="NonMaxSuppressionV3",Yu="NonMaxSuppressionV4",Ju="NonMaxSuppressionV5",Ni="OnesLike",Ci="OneHot",ki="Pack",Ii="PadV2",Fo="Pow",Si="Prelu",Qu="Prod",ec="Range",tc="Real",Po="Reciprocal",Lo="Relu",Ti="Reshape",$i="ResizeNearestNeighbor",nc="ResizeNearestNeighborGrad",_i="ResizeBilinear",sc="ResizeBilinearGrad",Mo="Relu6",Ei="Reverse",zo="Round",Vo="Rsqrt",Mp="ScatterNd",Di="Select",Bo="Selu",Ai="Slice",Wo="Sin",Go="Sinh",Uo="Sign",Ho="Sigmoid",jo="Softplus",Ko="Sqrt",Ri="Sum",Oi="SpaceToBatchND",Fi="SplitV",Pi="Softmax",qo="SquaredDifference",rc="Square",Xo="Sub",zp="SparseToDense",oc="StridedSlice",Zo="Tan",Yo="Tanh",Jo="Tile",ac="TopK",Li="Transpose",ic="Unique",Mi="Unpack",zi="UnsortedSegmentSum",Vi="ZerosLike",Qo="Step",lc="RotateWithOffset",Bi="_FusedMatMul",Wi="FusedConv2D",Gi="FusedDepthwiseConv2D",pr=Ep("kernelRegistry",()=>new Map),ea=Ep("gradRegistry",()=>new Map);function Vp(n){return ea.get(n)}function uc(n){const t=pr.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[o,a]=r,[i]=o.split("_");i===n&&e.push(a)}return e}function cc(n){const{kernelName:t,backendName:e}=n,s=hc(t,e);pr.has(s)&&console.warn(`The kernel '${t}' for backend '${e}' is already registered`),pr.set(s,n)}function s0(n){const{kernelName:t}=n;ea.has(t)&&te().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),ea.set(t,n)}function hc(n,t){return`${t}_${n}`}class r0{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new a0)}profileKernel(t,e,s){let r;const a=this.backendTimer.time(()=>{r=s()});if(te().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<r.length;l++){const u=r[l];u.data().then(c=>{o0(c,u.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>null!=l.getExtraProfileInfo?l.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:o,extraInfo:a}=t;s.forEach(i=>{Promise.all([i.data(),r,a]).then(l=>{this.logger.logKernelProfile(e,i,l[0],l[1],o,l[2])})})}}function o0(n,t,e){if("float32"!==t)return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class a0{logKernelProfile(t,e,s,r,o,a){const i="number"==typeof r?He(`${r}ms`,9):r.error,l=He(t,25),u=e.rank,c=e.size,h=He(e.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(null!=f){const m=f.shape||e.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}\t%c${i}\t%c${u}D ${h}\t%c${c}\t%c${d}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function u0(n,t,e,s){const r=Fe(t),o=function c0(n,t,e,s){const r=U(t),o=s[s.length-1],a=new Array(o).fill(0),i=t.length,l="complex64"===e?sa(n):n;if(i>1)for(let u=0;u<r/o;u++){const c=u*o;for(let h=0;h<o;h++)a[h]=Math.max(a[h],na(l[c+h],0,e).length)}return a}(n,t,e,r),a=t.length,i=Ui(n,t,e,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(u=>"    "+u).join("\n")),l.join("\n")}function na(n,t,e){let s;return s=Array.isArray(n)?`${parseFloat(n[0].toFixed(7))} + ${parseFloat(n[1].toFixed(7))}j`:to(n)?`'${n}'`:"bool"===e?Wp(n):parseFloat(n.toFixed(7)).toString(),He(s,t)}function Wp(n){return 0===n?"false":"true"}function Ui(n,t,e,s,r,o=!0){const a="complex64"===e?2:1,i=t[0],l=t.length;if(0===l)return"complex64"===e?[na(sa(n)[0],0,e)]:"bool"===e?[Wp(n[0])]:[n[0].toString()];if(1===l){if(i>20){let y=Array.from(n.slice(0,3*a)),x=Array.from(n.slice((i-3)*a,i*a));return"complex64"===e&&(y=sa(y),x=sa(x)),["["+y.map((C,w)=>na(C,r[w],e)).join(", ")+", ..., "+x.map((C,w)=>na(C,r[i-3+w],e)).join(", ")+"]"]}return["["+("complex64"===e?sa(n):Array.from(n)).map((g,y)=>na(g,r[y],e)).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*a,d=[];if(i>20){for(let m=0;m<3;m++){const g=m*h;d.push(...Ui(n.slice(g,g+h),u,e,c,r,!1))}d.push("...");for(let m=i-3;m<i;m++){const g=m*h;d.push(...Ui(n.slice(g,g+h),u,e,c,r,m===i-1))}}else for(let m=0;m<i;m++){const g=m*h;d.push(...Ui(n.slice(g,g+h),u,e,c,r,m===i-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<l;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function sa(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}function ys(n,t){return"string"===t?ra(n):Vs([n],t)}function Vs(n,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ce(n)),te().getBool("DEBUG")&&function Gb(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}(n,t),function h0(n,t){return n instanceof Float32Array&&"float32"===t||n instanceof Int32Array&&"int32"===t||n instanceof Uint8Array&&"bool"===t}(n,t))return n;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)0!==Math.round(n[s])&&(e[s]=1);return e}throw new Error(`Unknown data type ${t}`)}function wn(){return te().platform.now()}function ra(n,t="utf-8"){return t=t||"utf-8",te().platform.encode(n,t)}function fr(n,t="utf-8"){return t=t||"utf-8",te().platform.decode(n,t)}class tn{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=U(t),null!=s){const r=s.length;k(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||hr(e,this.size),this.strides=Fe(t)}set(t,...e){0===e.length&&(e=[0]),k(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e])throw new Error(`Requested out of range element at ${t}.   Buffer shape=${this.shape}`);e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Hn().makeTensor(this.values,this.shape,this.dtype)}}let Hn=null,mr=null,Gp=null;class W{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=U(t),this.strides=Fe(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var t=this;return(0,A.Z)(function*(){const e=yield t.data();return mr.buffer(t.shape,t.dtype,e)})()}bufferSync(){return mr.buffer(this.shape,this.dtype,this.dataSync())}array(){var t=this;return(0,A.Z)(function*(){const e=yield t.data();return On(t.shape,e)})()}arraySync(){return On(this.shape,this.dataSync())}data(){var t=this;return(0,A.Z)(function*(){t.throwIfDisposed();const e=Hn().read(t.dataId);if("string"===t.dtype){const s=yield e;try{return s.map(r=>fr(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})()}dataSync(){this.throwIfDisposed();const t=Hn().readSync(this.dataId);if("string"===this.dtype)try{return t.map(e=>fr(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){var t=this;return(0,A.Z)(function*(){t.throwIfDisposed();const e=yield Hn().read(t.dataId);return"string"===t.dtype?e:new Uint8Array(e.buffer)})()}dispose(){this.isDisposed||(Hn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return mr.print(this,t)}clone(){return this.throwIfDisposed(),mr.clone(this)}toString(t=!1){return u0(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),mr.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),Hn().makeVariable(this,t,e,s)}}Object.defineProperty(W,Symbol.hasInstance,{value:n=>!!n&&null!=n.data&&null!=n.dataSync&&null!=n.throwIfDisposed});class Hi extends W{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!he(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Hn().disposeTensor(this),this.dataId=t.dataId,Hn().incRef(this,null)}dispose(){Hn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Hi,Symbol.hasInstance,{value:n=>n instanceof W&&null!=n.assign&&n.assign instanceof Function});var ji=(()=>{return(n=ji||(ji={})).float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64",ji;var n})(),Ki=(()=>{return(n=Ki||(Ki={})).float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64",Ki;var n})(),qi=(()=>{return(n=qi||(qi={})).float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64",qi;var n})(),Xi=(()=>{return(n=Xi||(Xi={})).float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64",Xi;var n})();const m0={float32:qi,int32:ji,bool:Ki,complex64:Xi};function fn(n,t){if("string"===n||"string"===t){if("string"===n&&"string"===t)return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return m0[n][t]}function pc(n){return fn(n,"int32")}function It(n,t){if(n.dtype===t.dtype)return[n,t];const e=fn(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function Up(n){const t=[];return Hp(n,t,new Set),t}function Hp(n,t,e){if(null==n)return;if(n instanceof W)return void t.push(n);if(!function g0(n){return Array.isArray(n)||"object"==typeof n}(n))return;const s=n;for(const r in s){const o=s[r];e.has(o)||(e.add(o),Hp(o,t,e))}}class jp{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}let y0=(()=>{class n{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new jp}ready(){var e=this;return(0,A.Z)(function*(){if(null!=e.pendingBackendInit)return e.pendingBackendInit.then(()=>{});if(null!=e.backendInstance)return;const s=e.getSortedBackends();for(let r=0;r<s.length;r++){const o=s[r];if(yield e.initializeBackend(o).success)return void(yield e.setBackend(o))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:s}=this.initializeBackendsAndReturnBest();if(s)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:s}=this.initializeBackend(e);if(s)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,s,r=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:s,priority:r},!0)}setBackend(e){var s=this;return(0,A.Z)(function*(){if(null==s.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(s.backendName=e,null==s.registry[e]){s.backendInstance=null;const{success:r,asyncInit:o}=s.initializeBackend(e);if(!(o?yield r:r))return!1}return s.backendInstance=s.registry[e],s.setupRegisteredKernels(),s.profiler=new r0(s.backendInstance),!0})()}setupRegisteredKernels(){uc(this.backendName).forEach(s=>{null!=s.setupFunc&&s.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){uc(e).forEach(r=>{null!=r.disposeFunc&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const s=this.registryFactory[e];if(null==s)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=s.factory();if(!r||r instanceof D||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const o=++this.pendingBackendInitId,a=r.then(i=>!(o<this.pendingBackendInitId||(this.registry[e]=i,this.pendingBackendInit=null,0))).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(i.stack||i.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(r){return console.warn(`Initialization of backend ${e} failed`),console.warn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,s)=>this.registryFactory[s].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let s=0;s<e.length;s++){const r=e[s],{success:o,asyncInit:a}=this.initializeBackend(r);if(a||o)return{name:r,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,s){const r=this.state.tensorInfo.get(s),o=r.backend,a=this.readSync(s);o.disposeData(s),r.backend=e,e.move(s,a,r.shape,r.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,s){let o,r=null;if(null==s){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");s=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof s)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(o),()=>(o=s(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,s,r){e();try{const o=r();return s(),o}catch(o){throw s(),o}}nextTensorId(){return n.nextTensorId++}nextVariableId(){return n.nextVariableId++}clone(e){const s=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype);return this.addTapeNode(this.state.activeScope.name,{x:e},[s],i=>({x:()=>{const l="float32";return L.runKernelFunc(h=>h.cast(i,l),{x:i},null,po,{dtype:l})}}),[],{}),s}runKernel(e,s,r,o,a){return this.runKernelFunc(null,s,null,e,r,o,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,s,r){const o=this.backend.numDataIds();let a=0;r.forEach(u=>{a+="complex64"===u.dtype?3:1});const l=o-s-a-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e,s,r,o,a,i,l){let u,c=[];const h=this.isTapeOn();null==o&&(o=null!=this.state.activeScope?this.state.activeScope.name:"");const d=this.state.numBytes,p=this.state.numTensors;let f;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const m=function n0(n,t){const e=hc(n,t);return pr.get(e)}(o,this.backendName);let g,y;if(null!=m)f=()=>{const x=this.backend.numDataIds();g=m.kernelFunc({inputs:s,attrs:a,backend:this.backend});const C=Array.isArray(g)?g:[g];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(o,x,C);const w=C.map(N=>{if(null!=N.rank)return N;const{dataId:S,shape:I,dtype:E}=N;return this.makeTensorFromDataId(S,I,E)});if(h){let N=this.getTensorsForGradient(o,s,w);if(null==N){null==l&&(l=[]);const S=w.filter((I,E)=>l[E]);N=(i||[]).slice().concat(S)}c=this.saveTensorsForBackwardMode(N)}return w};else{if(null==e)throw new Error(`Error running ${o}: Neither modular kernel nor forward func passed`);const x=C=>{!h||(c=C.map(w=>this.keep(this.clone(w))))};f=()=>{const C=this.backend.numDataIds();g=this.tidy(()=>e(this.backend,x));const w=Array.isArray(g)?g:[g];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(o,C,w),w}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(y=this.profiler.profileKernel(o,s,()=>f()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(y),u=y.outputs):u=f()}),h&&this.addTapeNode(o,s,u,r,c,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:o,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(s).map(x=>null!=s[x]?s[x].shape:null),outputShapes:u.map(x=>x.shape),kernelTimeMs:y.timeMs,extraInfo:y.extraInfo}),Array.isArray(g)?u:u[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,s,r){const o=Vp(e);if(null!=o){const a=o.inputsToSave||[],i=o.outputsToSave||[];let l;o.saveAllInputs?(k(Array.isArray(s),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(s).map(c=>s[c])):l=a.map(c=>s[c]);const u=r.filter((c,h)=>i[h]);return l.concat(u)}return null}makeTensor(e,s,r,o){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");o=o||this.backend;let a=e;"string"===(r=r||"float32")&&to(e[0])&&(a=e.map(u=>ra(u)));const i=o.write(a,s,r),l=new W(s,r,i,this.nextTensorId());if(this.incRef(l,o),"string"===r){const u=this.state.tensorInfo.get(i),c=function Hb(n){if(null==n)return 0;let t=0;return n.forEach(e=>t+=e.length),t}(a);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(e,s,r,o){const a=new W(s,r=r||"float32",e,this.nextTensorId());return this.incRef(a,o),a}makeVariable(e,s=!0,r,o){r=r||this.nextVariableId().toString(),null!=o&&o!==e.dtype&&(e=e.cast(o));const a=new Hi(e,s,r,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(e,s){const r=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===r){this.state.numDataBuffers++;let o=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(o=e.size*vp(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:s||this.backend,dtype:e.dtype,shape:e.shape,bytes:o,refCount:0}),this.state.numBytes+=o}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof Hi||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const s=this.state.tensorInfo.get(e.dataId);s.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=s.bytes),this.state.numDataBuffers--,s.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(s.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){var s=this;return(0,A.Z)(function*(){s.state.profiling=!0;const r=s.state.numBytes,o=s.state.numTensors;s.state.activeProfile.kernels=[],s.state.activeProfile.result=yield e(),s.state.profiling=!1,s.state.activeProfile.peakBytes=Math.max(...s.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),s.state.activeProfile.newBytes=s.state.numBytes-r,s.state.activeProfile.newTensors=s.state.numTensors-o;for(const a of s.state.activeProfile.kernels)a.kernelTimeMs=yield a.kernelTimeMs,a.extraInfo=yield a.extraInfo;return s.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,s,r,o,a,i){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:s,outputs:r,saved:a},u=Vp(e);null!=u&&(o=u.gradFunc),null!=o&&(l.gradient=c=>(c=c.map((h,d)=>{if(null==h){const p=r[d],f=en(p.size,p.dtype);return this.makeTensor(f,p.shape,p.dtype)}return h}),o(c.length>1?c:c[0],a,i))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const s={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(s.name=e),this.state.scopeStack.push(s),this.state.activeScope=s}endScope(e){const s=Up(e),r=new Set(s.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){const i=this.state.activeScope.track[a];!i.kept&&!r.has(i.id)&&i.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],s.forEach(a=>{!a.kept&&a.scopeId===o.id&&this.track(a)})}gradients(e,s,r,o=!1){if(k(s.length>0,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));k(a instanceof W,()=>"The result y returned by f() must be a tensor.");const i=function i0(n,t,e){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],c=u.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const o={};o[e.id]=!0;const a={};for(let l=n.length-1;l>=0;l--){const u=n[l],c=u.inputs;for(let h=0;h<u.outputs.length;h++)if(o[u.outputs[h].id]){for(const d in c)o[c[d].id]=!0,a[u.id]=!0;break}}const i=[];for(let l=0;l<n.length;l++){const u=n[l];if(r[u.id]&&a[u.id]){const c={};for(const d in u.inputs){const p=u.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},u);h.inputs=c,h.outputs=u.outputs,i.push(h)}}return i}(this.state.activeTape,s,a);if(!o&&0===i.length&&s.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[a.id]=r??function x0(n){const t=Cp(U(n),"float32");return L.makeTensor(t,n,"float32")}(a.shape),function l0(n,t,e,s){for(let r=t.length-1;r>=0;r--){const o=t[r],a=[];if(o.outputs.forEach(l=>{const u=n[l.id];a.push(null!=u?u:null)}),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const l in o.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);const u=e(()=>i[l]());if("float32"!==u.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const c=o.inputs[l];if(!he(u.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(null==n[c.id])n[c.id]=u;else{const h=n[c.id];n[c.id]=s(h,u),h.dispose()}}}}(l,i,c=>this.tidy(c),b0);const u=s.map(c=>l[c.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(c=>{for(const h of c.saved)h.dispose()}),this.state.activeTape=null),{value:a,grads:u}})}customGrad(e){return k(Cu(e),()=>"The f passed in customGrad(f) must be a function."),(...s)=>{let r;k(s.every(a=>a instanceof W),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const o={};return s.forEach((a,i)=>{o[i]=a}),this.runKernelFunc((a,i)=>(r=e(...s,i),k(r.value instanceof W,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),k(Cu(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),o,(a,i)=>{const l=r.gradFunc(a,i),u=Array.isArray(l)?l:[l];k(u.length===s.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),k(u.every(h=>h instanceof W),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const c={};return u.forEach((h,d)=>{c[d]=()=>h}),c})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}time(e){var s=this;return(0,A.Z)(function*(){const r=wn(),o=yield s.backend.time(e);return o.wallMs=wn()-r,o})()}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new jp;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return n.nextTensorId=0,n.nextVariableId=0,n})();function Kp(){const n=_p();if(null==n._tfengine){const t=new Kb(n);n._tfengine=new y0(t)}return function Yb(n){$p=n}(n._tfengine.ENV),function d0(n){Hn=n}(()=>n._tfengine),n._tfengine}const L=Kp();function b0(n,t){return L.runKernel(dr,{a:n,b:t})}function qp(){return typeof window<"u"&&null!=window.document||typeof WorkerGlobalScope<"u"}const jn=te();function Zi(n,t){let e=n;if(Gn(n))return"string"===t?[]:[n.length];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||Gn(e)&&"string"!==t;)s.push(e.length),e=e[0];return Array.isArray(n)&&te().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Xp(n,s,[]),s}function Xp(n,t,e){if(e=e||[],!Array.isArray(n)&&!Gn(n))return void k(0===t.length,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);k(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),k(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)Xp(n[r],s,e.concat(r))}function Zp(n,t,e,s){if("string_or_numeric"!==n){if(null==n)throw new Error("Expected dtype cannot be null.");if("numeric"!==n&&n!==t||"numeric"===n&&"string"===t)throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function T(n,t,e,s="numeric"){if(n instanceof W)return Zp(s,n.dtype,t,e),n;let r=no(n);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Zp(s,r,t,e),null==n||!Gn(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${null==n?"null":n.constructor.name}'`);const o=Zi(n,r);!Gn(n)&&!Array.isArray(n)&&(n=[n]);const i="string"!==r?Vs(n,r):ce(n,[],!0);return L.makeTensor(i,o,r)}function Yp(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>T(o,`${t}[${a}]`,e,s))}function O(n){const t=Object.keys(n);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e+="__op";const r=(...o)=>{L.startScope(e);try{const a=s(...o);return Sp(a)&&console.error("Cannot return a Promise inside of tidy."),L.endScope(a),a}catch(a){throw L.endScope(null),a}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}jn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),jn.registerFlag("IS_BROWSER",()=>qp()),jn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),jn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),jn.registerFlag("PROD",()=>!1),jn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>jn.getBool("DEBUG")),jn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),jn.registerFlag("IS_TEST",()=>!1),jn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);const gr=O({complex_:function C0(n,t){const e=T(n,"real","complex"),s=T(t,"imag","complex");return Le(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`),L.runKernel(Du,{real:e,imag:s})}});function Yi(n,t,e,s){if(null==s&&(s=no(n)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Gn(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ip(t);const r=U(t),o=U(e);k(r===o,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<e.length;++a){const i=e[a],l=a!==e.length-1||i!==U(t.slice(a));k(e[a]===t[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Gn(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n="string"!==s?Vs(n,s):ce(n,[],!0),L.makeTensor(n,t,s)}function Jp(n,t){return gc.apply(this,arguments)}function gc(){return gc=(0,A.Z)(function*(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const i=r[a],l=Array.isArray(n)?n[a].tensor:n[i];if("float32"!==l.dtype&&"int32"!==l.dtype&&"bool"!==l.dtype&&"string"!==l.dtype&&"complex64"!==l.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);const u={name:i,shape:l.shape,dtype:l.dtype};if("string"===l.dtype){const c=new Promise(function(){var h=(0,A.Z)(function*(d){const p=yield l.bytes(),f=p.reduce((y,x)=>y+x.length,0)+4*p.length,m=new Uint8Array(f);let g=0;for(let y=0;y<p.length;y++){const x=p[y],C=new Uint8Array(new Uint32Array([x.length]).buffer);m.set(C,g),g+=4,m.set(x,g),g+=x.length}d(m)});return function(d){return h.apply(this,arguments)}}());s.push(c)}else s.push(l.data());null!=t&&(u.group=t),e.push(u)}return{data:I0(yield Promise.all(s)),specs:e}}),gc.apply(this,arguments)}function I0(n){if(null===n)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(o=>{if(t+=o.byteLength,e.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const yc=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Qp(n){return yc?Buffer.byteLength(n):new Blob([n]).size}function xc(n){if(1===n.length)return n[0];let t=0;n.forEach(r=>{t+=r.byteLength});const e=new Uint8Array(t);let s=0;return n.forEach(r=>{e.set(new Uint8Array(r),s),s+=r.byteLength}),e.buffer}function Qi(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==n.modelTopology?0:Qp(JSON.stringify(n.modelTopology)),weightSpecsBytes:null==n.weightSpecs?0:Qp(JSON.stringify(n.weightSpecs)),weightDataBytes:null==n.weightData?0:n.weightData.byteLength}}class Nt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Nt.instance&&(Nt.instance=new Nt),Nt.instance}static registerSaveRouter(t){Nt.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Nt.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Nt.getHandlers(t,"save")}static getLoadHandlers(t,e){return Nt.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return("load"===e?Nt.getInstance().loadRouters:Nt.getInstance().saveRouters).forEach(a=>{const i=a(t,s);null!==i&&r.push(i)}),r}}const el="tensorflowjs",Bs="models_store",xs="model_info_store";function vc(){if(!te().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Nc(n){const t=n.result;t.createObjectStore(Bs,{keyPath:"modelPath"}),t.createObjectStore(xs,{keyPath:"modelPath"})}let yr=(()=>{class n{constructor(e){if(this.indexedDB=vc(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){var s=this;return(0,A.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return s.databaseAction(s.modelPath,e)})()}load(){var e=this;return(0,A.Z)(function*(){return e.databaseAction(e.modelPath)})()}databaseAction(e,s){return new Promise((r,o)=>{const a=this.indexedDB.open(el,1);a.onupgradeneeded=()=>Nc(a),a.onsuccess=()=>{const i=a.result;if(null==s){const l=i.transaction(Bs,"readonly"),c=l.objectStore(Bs).get(this.modelPath);c.onsuccess=()=>{if(null==c.result)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=h=>(i.close(),o(c.error)),l.oncomplete=()=>i.close()}else{const l=Qi(s),u=i.transaction(xs,"readwrite");let c=u.objectStore(xs);const h=c.put({modelPath:this.modelPath,modelArtifactsInfo:l});let d;h.onsuccess=()=>{d=i.transaction(Bs,"readwrite");const f=d.objectStore(Bs).put({modelPath:this.modelPath,modelArtifacts:s,modelArtifactsInfo:l});f.onsuccess=()=>r({modelArtifactsInfo:l}),f.onerror=m=>{c=u.objectStore(xs);const g=c.delete(this.modelPath);g.onsuccess=()=>(i.close(),o(f.error)),g.onerror=y=>(i.close(),o(f.error))}},h.onerror=p=>(i.close(),o(h.error)),u.oncomplete=()=>{null==d?i.close():d.oncomplete=()=>i.close()}}},a.onerror=i=>o(a.error)})}}return n.URL_SCHEME="indexeddb://",n})();const nf=n=>te().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(yr.URL_SCHEME)?function R0(n){return new yr(n)}(n.slice(yr.URL_SCHEME.length)):null;Nt.registerSaveRouter(nf),Nt.registerLoadRouter(nf);class F0{constructor(){this.indexedDB=vc()}listModels(){var t=this;return(0,A.Z)(function*(){return new Promise((e,s)=>{const r=t.indexedDB.open(el,1);r.onupgradeneeded=()=>Nc(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(xs,"readonly"),l=a.objectStore(xs).getAll();l.onsuccess=()=>{const u={};for(const c of l.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},l.onerror=u=>(o.close(),s(l.error)),a.oncomplete=()=>o.close()},r.onerror=o=>s(r.error)})})()}removeModel(t){var e=this;return(0,A.Z)(function*(){return t=function O0(n){return n.startsWith(yr.URL_SCHEME)?n.slice(yr.URL_SCHEME.length):n}(t),new Promise((s,r)=>{const o=e.indexedDB.open(el,1);o.onupgradeneeded=()=>Nc(o),o.onsuccess=()=>{const a=o.result,i=a.transaction(xs,"readwrite"),l=i.objectStore(xs),u=l.get(t);let c;u.onsuccess=()=>{if(null==u.result)return a.close(),r(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const h=l.delete(t),d=()=>{c=a.transaction(Bs,"readwrite");const f=c.objectStore(Bs).delete(t);f.onsuccess=()=>s(u.result.modelArtifactsInfo),f.onerror=m=>r(u.error)};h.onsuccess=d,h.onerror=p=>(d(),a.close(),r(u.error))}},u.onerror=h=>(a.close(),r(u.error)),i.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}},o.onerror=a=>r(o.error)})})()}}const Kn="/",Ws="tensorflowjs_models",sf="info",P0="model_topology",L0="weight_specs",M0="weight_data",z0="model_metadata";function rf(n){return{info:[Ws,n,sf].join(Kn),topology:[Ws,n,P0].join(Kn),weightSpecs:[Ws,n,L0].join(Kn),weightData:[Ws,n,M0].join(Kn),modelMetadata:[Ws,n,z0].join(Kn)}}function of(n){const t=n.split(Kn);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Kn)}let xr=(()=>{class n{constructor(e){if(!te().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=rf(this.modelPath)}save(e){var s=this;return(0,A.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const r=JSON.stringify(e.modelTopology),o=JSON.stringify(e.weightSpecs),a=Qi(e);try{s.LS.setItem(s.keys.info,JSON.stringify(a)),s.LS.setItem(s.keys.topology,r),s.LS.setItem(s.keys.weightSpecs,o),s.LS.setItem(s.keys.weightData,function S0(n){if(yc)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}(e.weightData));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(i.signature=e.signature),null!=e.userDefinedMetadata&&(i.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(i.modelInitializer=e.modelInitializer),s.LS.setItem(s.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch{throw s.LS.removeItem(s.keys.info),s.LS.removeItem(s.keys.topology),s.LS.removeItem(s.keys.weightSpecs),s.LS.removeItem(s.keys.weightData),s.LS.removeItem(s.keys.modelMetadata),new Error(`Failed to save model '${s.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}})()}load(){var e=this;return(0,A.Z)(function*(){const s=JSON.parse(e.LS.getItem(e.keys.info));if(null==s)throw new Error(`In local storage, there is no model with name '${e.modelPath}'`);if("JSON"!==s.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const r={},o=JSON.parse(e.LS.getItem(e.keys.topology));if(null==o)throw new Error(`In local storage, the topology of model '${e.modelPath}' is missing.`);r.modelTopology=o;const a=JSON.parse(e.LS.getItem(e.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${e.modelPath}' are missing.`);r.weightSpecs=a;const i=e.LS.getItem(e.keys.modelMetadata);if(null!=i){const u=JSON.parse(i);r.format=u.format,r.generatedBy=u.generatedBy,r.convertedBy=u.convertedBy,null!=u.signature&&(r.signature=u.signature),null!=u.userDefinedMetadata&&(r.userDefinedMetadata=u.userDefinedMetadata),null!=u.modelInitializer&&(r.modelInitializer=u.modelInitializer)}const l=e.LS.getItem(e.keys.weightData);if(null==l)throw new Error(`In local storage, the binary weight values of model '${e.modelPath}' are missing.`);return r.weightData=function T0(n){if(yc){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}(l),r})()}}return n.URL_SCHEME="localstorage://",n})();const af=n=>te().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(xr.URL_SCHEME)?function B0(n){return new xr(n)}(n.slice(xr.URL_SCHEME.length)):null;Nt.registerSaveRouter(af),Nt.registerLoadRouter(af);class W0{constructor(){k(te().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),k(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var t=this;return(0,A.Z)(function*(){const e={},s=Ws+Kn,r=Kn+sf;for(let o=0;o<t.LS.length;++o){const a=t.LS.key(o);a.startsWith(s)&&a.endsWith(r)&&(e[of(a)]=JSON.parse(t.LS.getItem(a)))}return e})()}removeModel(t){var e=this;return(0,A.Z)(function*(){const s=rf(t=function V0(n){return n.startsWith(xr.URL_SCHEME)?n.slice(xr.URL_SCHEME.length):n}(t));if(null==e.LS.getItem(s.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(e.LS.getItem(s.info));return e.LS.removeItem(s.info),e.LS.removeItem(s.topology),e.LS.removeItem(s.weightSpecs),e.LS.removeItem(s.weightData),r})()}}class un{constructor(){this.managers={}}static getInstance(){return null==un.instance&&(un.instance=new un),un.instance}static registerManager(t,e){k(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),k(t.length>0,()=>"scheme must not be an empty string.");const s=un.getInstance();k(null==s.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class G0{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(te().get("IS_BROWSER")){te().setPlatform("browser",new G0);try{un.registerManager(xr.URL_SCHEME,new W0)}catch{}try{un.registerManager(yr.URL_SCHEME,new F0)}catch{}}let wr;function Ke(n,t="float32",e){return t=t||"float32",Ip(n),new tn(n,t,e)}te().get("IS_NODE")&&te().setPlatform("node",new class H0{constructor(){this.util=B(48628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=te().global.fetch?te().global.fetch(t,e):(null==wr&&(wr=B(75410)),wr(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Ie=O({cast_:function j0(n,t){const e=T(n,"x","cast");if(!function Ub(n){return"bool"===n||"complex64"===n||"float32"===n||"int32"===n||"string"===n}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==e.dtype||"string"!==t&&"string"===e.dtype)throw new Error("Only strings can be casted to strings");return L.runKernel(po,{x:e},{dtype:t})}}),vr=O({clone_:function K0(n){const e={x:T(n,"x","clone","string_or_numeric")};return L.runKernel(ai,e)}});function uf(n){return new Promise(t=>setTimeout(t)).then(n)}Kp(),function p0(n){mr=n}({buffer:Ke,cast:Ie,clone:vr,print:function q0(n,t=!1){console.log(n.toString(t))}});let $c=(()=>{class n{constructor(e){if(!te().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(n.URL_SCHEME)&&(e=e.slice(n.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}save(e){var s=this;return(0,A.Z)(function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const r=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./"+s.weightDataFileName],weights:e.weightSpecs}]};null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer);const i=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),l=s.jsonAnchor??document.createElement("a");if(l.download=s.modelTopologyFileName,l.href=i,yield uf(()=>l.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const u=s.weightDataAnchor??document.createElement("a");u.download=s.weightDataFileName,u.href=r,yield uf(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Qi(e)}}})()}}return n.URL_SCHEME="downloads://",n})();function cf(n,t,e,s){(function a(l){k(null!=l&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")})(n),function i(l,u){k(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),k(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),k(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}(e=e??0,s=s??1);let r=0;return Promise.all(n.map(l=>(l.then(u=>{const c=e+ ++r/n.length*(s-e);return t(c),u}),l)))}function hf(n,t){return _c.apply(this,arguments)}function _c(){return(_c=(0,A.Z)(function*(n,t){null==t&&(t={});const e=t.fetchFunc??te().platform.fetch,s=n.map(h=>e(h,t.requestInit,{isBinary:!0})),i=(null==t.onProgress?yield Promise.all(s):yield cf(s,t.onProgress,0,.5)).map(h=>h.arrayBuffer());return null==t.onProgress?yield Promise.all(i):yield cf(i,t.onProgress,.5,1)})).apply(this,arguments)}Nt.registerSaveRouter(n=>te().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith($c.URL_SCHEME)?function ew(n="model"){return new $c(n)}(n.slice($c.URL_SCHEME.length)):null);let df=(()=>{class n{constructor(e,s){if(this.DEFAULT_METHOD="POST",null==s&&(s={}),this.weightPathPrefix=s.weightPathPrefix,this.onProgress=s.onProgress,this.weightUrlConverter=s.weightUrlConverter,null!=s.fetchFunc?(k("function"==typeof s.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=s.fetchFunc):this.fetch=te().platform.fetch,k(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&k(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=s.requestInit&&null!=s.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=s.requestInit||{}}save(e){var s=this;return(0,A.Z)(function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const r=Object.assign({method:s.DEFAULT_METHOD},s.requestInit);r.body=new FormData;const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:[{paths:["./model.weights.bin"],weights:e.weightSpecs}]};null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),r.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData&&r.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const i=yield s.fetch(s.path,r);if(i.ok)return{modelArtifactsInfo:Qi(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)})()}load(){var e=this;return(0,A.Z)(function*(){const s=yield e.fetch(e.path,e.requestInit);if(!s.ok)throw new Error(`Request to ${e.path} failed with status code ${s.status}. Please verify this URL points to the model JSON of the model to load.`);let r;try{r=yield s.json()}catch{let y=`Failed to parse model JSON of response from ${e.path}.`;throw e.path.endsWith(".pb")?y+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":y+=" Please make sure the server is serving valid JSON for this request.",new Error(y)}const o=r.modelTopology,a=r.weightsManifest,i=r.generatedBy,l=r.convertedBy,u=r.format,c=r.signature,h=r.userDefinedMetadata;if(null==o&&null==a)throw new Error(`The JSON from HTTP path ${e.path} contains neither model topology or manifest for weights.`);let d,p;null!=a&&([d,p]=yield e.loadWeights(a));const f={modelTopology:o,weightSpecs:d,weightData:p,generatedBy:i,convertedBy:l,format:u};null!=c&&(f.signature=c),null!=h&&(f.userDefinedMetadata=h);const m=r.modelInitializer;return m&&(f.modelInitializer=m),f})()}loadWeights(e){var s=this;return(0,A.Z)(function*(){const r=Array.isArray(s.path)?s.path[1]:s.path,[o,a]=function rw(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?");return[n.substring(0,t)+"/",e>t?n.substring(e):""]}(r),i=s.weightPathPrefix||o,l=[];for(const d of e)l.push(...d.weights);const u=[],c=[];for(const d of e)for(const p of d.paths)null!=s.weightUrlConverter?c.push(s.weightUrlConverter(p)):u.push(i+p+a);return s.weightUrlConverter&&u.push(...yield Promise.all(c)),[l,xc(yield hf(u,{requestInit:s.requestInit,fetchFunc:s.fetch,onProgress:s.onProgress}))]})()}}return n.URL_SCHEME_REGEX=/^https?:\/\//,n})();function pf(n){return null!=n.match(df.URL_SCHEME_REGEX)}const ff=(n,t)=>{if(typeof fetch>"u"&&(null==t||null==t.fetchFunc))return null;{let e=!0;if(e=Array.isArray(n)?n.every(s=>pf(s)):pf(n),e)return function mf(n,t){return new df(n,t)}(n,t)}return null};function Ac(n,t,e){const s=n.shape.length;k(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),k(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)k(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function nl(n){const t=[];let e=0;for(;n>0;)1&n&&t.push(e),n/=2,e++;return t}function gf(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function yf(n,t,e,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<e;o++)0===o?r[t]=1:(r.splice(t,0,1),r.pop());return r}function xf(n,t,e){return e<=n?e:e-(t-1)}function bf(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function wf(n,t,e,s,r,o,a,i,l){const u=n.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&e>0){const p=t[0],f=e+1;c=vf(a,p,f,s,n),h=Nf(i,p,f,r,n),d=yf(o,p,f,n)}else for(let p=0;p<u;p++)c[p]=kf(a,s,o,n,p,l),h[p]=If(i,r,o,n,p,l),d[p]=Cf(o,p,l);return{begin:c,end:h,strides:d}}function vf(n,t,e,s,r){const o=[...r],a=bf(e,t);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const l=xf(t,e,i);let u=s[l];n&1<<l&&(u=0),o[i]=u}return o}function Nf(n,t,e,s,r){const o=[...r],a=bf(e,t);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const l=xf(t,e,i);let u=s[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),o[i]=u}for(let i=0;i<o.length;i++){const l=r[i];o[i]<0&&(o[i]+=l),o[i]=M(0,o[i],r[i])}return o}function Cf(n,t,e){let s=n[t];return(e&1<<t||null==s)&&(s=1),s}function kf(n,t,e,s,r,o){let a=t[r];(n&1<<r||o&1<<r||null==a)&&(a=(e[r]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=M(0,a,l-1),a}function If(n,t,e,s,r,o){let a=t[r];const i=e[r]||1;(n&1<<r||o&1<<r||null==a)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=i>0?M(0,a,l):M(-1,a,l-1),a}function Rc(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function Oc(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function sl(n,t,e){let s;const r=n.shape.length;let o;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach(a=>{k(-1!==a,()=>"slice() does not support negative begin indexing.")}),o=null==e?new Array(r).fill(-1):"number"==typeof e?[e,...new Array(r-1).fill(-1)]:e.length<r?e.concat(new Array(r-e.length).fill(-1)):e,o=o.map((a,i)=>a>=0?a:(k(-1===a,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,o]}function Fc(n,t,e,s,r,o,a,i,l){let u=t.slice(),c=e.slice(),h=s;null==s&&(h=new Array(u.length));const d=nl(a);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=n.length-u.length,f=nl(i),m=n.slice();f.forEach(I=>{u[I]=0,c[I]=1,m.splice(I,0,1)});const{begin:g,end:y,strides:x}=wf(m,d,p,u,c,h,r,o,a);u=g,c=y,h=x;const C=nl(l);C.forEach(I=>{c[I]=u[I]+1,h[I]=1});const w=gf(u,c,h),N=w.filter((I,E)=>-1===C.indexOf(E));return{nonStrided:h.every(I=>1===I),$begin:u,$end:c,$strides:h,size:w,newShape:m,outShape:N}}Nt.registerSaveRouter(ff),Nt.registerLoadRouter(ff);class Nr{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class vn{constructor(){this.classNameMap={}}static getMap(){return null==vn.instance&&(vn.instance=new vn),vn.instance}static register(t){vn.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function re(n){k(null!=n.className,()=>"Class being registered does not have the static className property defined."),k("string"==typeof n.className,()=>"className is required to be a string, but got type "+typeof n.className),k(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),vn.register(n)}function Vt(n){te().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Cr(){return L}function Pc(){return L.memory()}function H(n,t){return L.tidy(n,t)}function je(n){Up(n).forEach(e=>e.dispose())}function qn(n){return L.keep(n)}function Sf(n,t,e=1){return L.registerBackend(n,t,e)}function rs(n){return L.customGrad(n)}function Oe(n,t){if((Gn(n)&&"string"!==t||Array.isArray(n))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Gn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Yi(n,[],[],t)}!function f0(n){Gp=n}(Vt);class bs extends Nr{minimize(t,e=!1,s){const{value:r,grads:o}=this.computeGradients(t,s);if(null!=s){const a=s.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return je(o),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function lw(n,t){k(Cu(n),()=>"The f passed in variableGrads(f) must be a function"),k(null==t||Array.isArray(t)&&t.every(u=>u instanceof Hi),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=null!=t;if(!e){t=[];for(const u in L.registeredVariables)t.push(L.registeredVariables[u])}const s=e?t.filter(u=>!u.trainable):null,r=t.length;k((t=t.filter(u=>u.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const{value:a,grads:i}=L.gradients(n,t,null,!0);k(i.some(u=>null!=u),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),k(0===a.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return t.forEach((u,c)=>{null!=i[c]&&(l[u.name]=i[c])}),s?.forEach(u=>l[u.name]=null),{value:a,grads:l}}(t,e)}dispose(){null!=this.iterations_&&je(this.iterations_)}saveIterations(){var t=this;return(0,A.Z)(function*(){return null==t.iterations_&&(t.iterations_=0),{name:"iter",tensor:Oe(t.iterations_,"int32")}})()}getWeights(){return(0,A.Z)(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(t){var e=this;return(0,A.Z)(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${e.getClassName()}`)})()}extractIterations(t){var e=this;return(0,A.Z)(function*(){return e.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})()}}Object.defineProperty(bs,Symbol.hasInstance,{value:n=>null!=n.minimize&&null!=n.computeGradients&&null!=n.applyGradients});const jt=O({abs_:function uw(n){const t=T(n,"x","abs");return L.runKernel("complex64"===t.dtype?Ka:Va,{x:t})}}),de=O({add_:function cw(n,t){let e=T(n,"a","add"),s=T(t,"b","add");return[e,s]=It(e,s),L.runKernel(dr,{a:e,b:s})}}),Tf=O({all_:function hw(n,t=null,e=!1){const r={x:T(n,"x","all","bool")};return L.runKernel("All",r,{axis:t,keepDims:e})}}),Lc=O({any_:function dw(n,t=null,e=!1){const r={x:T(n,"x","any","bool")};return L.runKernel("Any",r,{axis:t,keepDims:e})}}),Mc=O({argMax_:function pw(n,t=0){const s={x:T(n,"x","argMax")};return L.runKernel(Ba,s,{axis:t})}});function oa(n,t,e,s,r="NHWC",o){return Bt(n,[...t,n[3]],e,o,s,null,null,as(r))}function Nn(n,t,e,s,r,o,a="channelsLast"){const[i,l]=ol(t);let u;if("channelsLast"===a)u=[i,l,n[3],n[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[i,l,n[1],n[1]]}return Bt(n,u,e,s,r,o,!1,a)}function os(n,t,e,s,r,o,a="NDHWC"){const[i,l,u]=Vc(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[i,l,u,n[4],n[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[i,l,u,n[1],n[1]]}return ws(n,c,e,s,r,!1,h,o)}function Bt(n,t,e,s,r,o,a=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h]=n;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,c]=n}const[d,p,,f]=t,[m,g]=ol(e),[y,x]=ol(s),C=kr(d,y),w=kr(p,x),{padInfo:N,outHeight:S,outWidth:I}=function gw(n,t,e,s,r,o,a,i,l){let u,c,h;if("number"==typeof n){u={top:n,bottom:n,left:n,right:n,type:0===n?"VALID":"NUMBER"};const p=function fw(n,t,e,s,r){null==s&&(s=zc(n,t,e));const a=n[1];return[Gs((n[0]-t+2*s)/e+1,r),Gs((a-t+2*s)/e+1,r)]}([t,e],o,s,n,i);c=p[0],h=p[1]}else if("same"===n){c=Math.ceil(t/s),h=Math.ceil(e/r);const d=Math.max(0,(c-1)*s+o-t),p=Math.max(0,(h-1)*r+a-e),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2);u={top:f,bottom:m,left:g,right:p-g,type:"SAME"}}else if("valid"===n)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-o+1)/s),h=Math.ceil((e-a+1)/r);else{if("object"!=typeof n)throw Error(`Unknown padding parameter: ${n}`);{const d="channelsLast"===l?n[1][0]:n[2][0],p="channelsLast"===l?n[1][1]:n[2][1],f="channelsLast"===l?n[2][0]:n[3][0],m="channelsLast"===l?n[2][1]:n[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Gs((t-o+d+p)/s+1,i),h=Gs((e-a+f+m)/r+1,i)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,C,w,o,i),E=a?f*h:f;let R;return"channelsFirst"===i?R=[l,E,S,I]:"channelsLast"===i&&(R=[l,S,I,E]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:S,outWidth:I,outChannels:E,padInfo:N,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:C,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:x,inShape:n,outShape:R,filterShape:t}}function ws(n,t,e,s,r,o=!1,a="channelsLast",i){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=n;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=n}const[p,f,m,,g]=t,[y,x,C]=Vc(e),[w,N,S]=Vc(s),I=kr(p,w),E=kr(f,N),R=kr(m,S),{padInfo:z,outDepth:K,outHeight:J,outWidth:Y}=function yw(n,t,e,s,r,o,a,i,l,u,c){let h,d,p,f;if("number"==typeof n){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:0===n?"VALID":"NUMBER"};const g=function mw(n,t,e,s,r,o){null==r&&(r=zc(n,t,s));const i=n[1],l=n[2];return[Gs((n[0]-t+2*r)/s+1,o),Gs((i-t+2*r)/s+1,o),Gs((l-t+2*r)/s+1,o),e]}([t,e,s,1],i,1,r,n,c);d=g[0],p=g[1],f=g[2]}else if("same"===n){d=Math.ceil(t/r),p=Math.ceil(e/o),f=Math.ceil(s/a);const m=(d-1)*r+i-t,g=(p-1)*o+l-e,y=(f-1)*a+u-s,x=Math.floor(m/2),C=m-x,w=Math.floor(g/2),N=g-w,S=Math.floor(y/2);h={top:w,bottom:N,left:S,right:y-S,front:x,back:C,type:"SAME"}}else{if("valid"!==n)throw Error(`Unknown padding parameter: ${n}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/r),p=Math.ceil((e-l+1)/o),f=Math.ceil((s-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,y,x,C,I,E,R,i),Q=o?g*d:g;let Z;return"channelsFirst"===a?Z=[l,Q,K,J,Y]:"channelsLast"===a&&(Z=[l,K,J,Y,Q]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:K,outHeight:J,outWidth:Y,outChannels:Q,padInfo:z,strideDepth:y,strideHeight:x,strideWidth:C,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:w,dilationHeight:N,dilationWidth:S,inShape:n,outShape:Z,filterShape:t}}function zc(n,t,e,s=1){const r=kr(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function ol(n){return"number"==typeof n?[n,n,n]:2===n.length?[n[0],n[1],1]:n}function Vc(n){return"number"==typeof n?[n,n,n]:n}function kr(n,t){return t<=1?n:n+(n-1)*(t-1)}function Gs(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function vs(n){const[t,e,s]=ol(n);return 1===t&&1===e&&1===s}function St(n,t){return vs(n)||vs(t)}function as(n){if("NHWC"===n)return"channelsLast";if("NCHW"===n)return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}const j=O({reshape_:function xw(n,t){const s={x:T(n,"x","reshape","string_or_numeric")};return L.runKernel(Ti,s,{shape:t})}}),Bc=O({avgPool_:function bw(n,t,e,s,r){const o=T(n,"x","avgPool","float32");k(St(e,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`);let i=o,l=!1;3===o.rank&&(l=!0,i=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=r&&k(Te(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let h=L.runKernel(Ga,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r});return h=Ie(h,o.dtype),l?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),vw=O({avgPool3d_:function ww(n,t,e,s,r,o="NDHWC",a){null==a?a=[1,1,1]:Vt("dilations is deprecated, this field will be gone in v3.0.0.");const i=T(n,"x","avgPool3d","float32");let l=i,u=!1;4===i.rank&&(u=!0,l=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(5===l.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),k("NDHWC"===o,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),k(St(e,a),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),null!=r&&k(Te(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);let d=L.runKernel(Ua,{x:l},{filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o,dilations:a});return d=Ie(d,l.dtype),u?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function Nw(n){let t;return t=0===n.rank||1===n.rank?j(n,[1,1,1,n.size]):2===n.rank?j(n,[1,1,n.shape[0],n.shape[1]]):3===n.rank?j(n,[1,n.shape[0],n.shape[1],n.shape[2]]):n,t}const al=O({batchNorm_:function Cw(n,t,e,s,r,o){null==o&&(o=.001);const a=T(n,"x","batchNorm"),i=T(t,"mean","batchNorm"),l=T(e,"variance","batchNorm");let u,c;null!=r&&(u=T(r,"scale","batchNorm")),null!=s&&(c=T(s,"offset","batchNorm")),k(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(null==c||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(null==u||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:Nw(a),scale:u,offset:c,mean:i,variance:l},f=L.runKernel(si,d,{varianceEpsilon:o});return j(f,a.shape)}}),Iw=O({batchNorm2d_:function kw(n,t,e,s,r,o){const a=T(n,"x","batchNorm"),i=T(t,"mean","batchNorm"),l=T(e,"variance","batchNorm");let u,c;return null!=r&&(u=T(r,"scale","batchNorm")),null!=s&&(c=T(s,"offset","batchNorm")),k(2===a.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),k(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),k(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&k(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&k(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),al(a,i,l,c,u,o)}}),Tw=O({batchNorm3d_:function Sw(n,t,e,s,r,o){const a=T(n,"x","batchNorm"),i=T(t,"mean","batchNorm"),l=T(e,"variance","batchNorm");let u,c;return null!=r&&(u=T(r,"scale","batchNorm")),null!=s&&(c=T(s,"offset","batchNorm")),k(3===a.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),k(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),k(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&k(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&k(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),al(a,i,l,c,u,o)}}),_w=O({batchNorm4d_:function $w(n,t,e,s,r,o){const a=T(n,"x","batchNorm"),i=T(t,"mean","batchNorm"),l=T(e,"variance","batchNorm");let u,c;return null!=r&&(u=T(r,"scale","batchNorm")),null!=s&&(c=T(s,"offset","batchNorm")),k(4===a.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),k(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),k(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&k(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&k(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),al(a,i,l,c,u,o)}}),mn=O({clipByValue_:function Ew(n,t,e){const s=T(n,"x","clipByValue");return k(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),L.runKernel(mo,{x:s},{clipValueMin:t,clipValueMax:e})}}),Kt=O({concat_:function Dw(n,t=0){k(n.length>=1,()=>"Pass at least one tensor to concat");const e=Yp(n,"tensors","concat","string_or_numeric");return"complex64"===e[0].dtype&&e.forEach(o=>{if("complex64"!==o.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${o.dtype}. `)}),1===e.length?vr(e[0]):L.runKernel(qa,e,{axis:t})}}),Rw=O({concat1d_:function Aw(n){return Kt(n,0)}}),Fw=O({concat2d_:function Ow(n,t){return Kt(n,t)}}),Lw=O({concat3d_:function Pw(n,t){return Kt(n,t)}}),zw=O({concat4d_:function Mw(n,t){return Kt(n,t)}}),Us=O({conv2d_:function Vw(n,t,e,s,r="NHWC",o=[1,1],a){const i=T(n,"x","conv2d"),l=T(t,"filter","conv2d");let u=i,c=!1;3===i.rank&&(c=!0,u=j(i,[1,i.shape[0],i.shape[1],i.shape[2]])),k(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),k(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),null!=a&&k(Te(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const h="NHWC"===r?u.shape[3]:u.shape[1];k(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),k(St(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const f=L.runKernel(Xa,{x:u,filter:l},{strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a});return c?j(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),$f=O({conv1d_:function Bw(n,t,e,s,r="NWC",o=1,a){const i=T(n,"x","conv1d"),l=T(t,"filter","conv1d");let u=i,c=!1;2===i.rank&&(c=!0,u=j(i,[1,i.shape[0],i.shape[1]])),k(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),k(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),null!=a&&k(Te(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),k(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),k(St(e,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${o}'`),k("NWC"===r,()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=j(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=j(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Us(d,h,[1,e],s,"NHWC",[1,o],a);return j(g,c?[g.shape[2],g.shape[3]]:[g.shape[0],g.shape[2],g.shape[3]])}}),Wc=O({conv2DBackpropInput_:function Ww(n,t,e,s,r,o="NHWC",a){k(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,l=t,u=!1;3===t.rank&&(u=!0,l=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,n[0],n[1],n[2]]),k(4===i.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),k(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),k(4===e.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const c="NHWC"===o?i[3]:i[1],h="NHWC"===o?l.shape[3]:l.shape[1];k(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),k(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),null!=a&&k(Te(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const f=L.runKernel(Za,{dy:l,filter:e},{strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:i});return u?j(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),_f=O({conv2dTranspose_:function Gw(n,t,e,s,r,o){const a=T(n,"x","conv2dTranspose"),i=T(t,"filter","conv2dTranspose");return Wc(e,a,i,s,r,"NHWC",o)}}),Hw=O({conv3d_:function Uw(n,t,e,s,r="NDHWC",o=[1,1,1]){const a=T(n,"x","conv3d"),i=T(t,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=j(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),k(5===i.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),k(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),k(St(e,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),k("NDHWC"===r,()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const d=L.runKernel(Ya,{x:l,filter:i},{strides:e,pad:s,dataFormat:r,dilations:o});return u?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),aa=O({depthwiseConv2d_:function jw(n,t,e,s,r="NHWC",o=[1,1],a){const i=T(n,"x","depthwiseConv2d"),l=T(t,"filter","depthwiseConv2d");let u=i,c=!1;3===i.rank&&(c=!0,u=j(i,[1,i.shape[0],i.shape[1],i.shape[2]])),k(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),k(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),k(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),null!=a&&k(Te(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const p=L.runKernel(Qa,{x:u,filter:l},{strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a});return c?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Ef=O({floorDiv_:function Kw(n,t){let e=T(n,"a","floorDiv"),s=T(t,"b","floorDiv");return[e,s]=It(e,s),L.runKernel(ko,{a:e,b:s})}}),Ae=O({div_:function qw(n,t){let e=T(n,"a","div"),s=T(t,"b","div");return[e,s]=It(e,s),"int32"===e.dtype&&"int32"===s.dtype?Ef(e,s):L.runKernel(xo,{a:e,b:s},{})}}),il=O({elu_:function Xw(n){const e={x:T(n,"x","elu")};return L.runKernel(bo,e)}});function ia(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const o=e-1-r,a=n[o]||1;(t[t.length-1-r]||1)>1&&1===a&&s.unshift(o)}return s}function Ft(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],o=t.length-s-1,a=t[o];(null==r||1===r&&a>1)&&e.unshift(o)}return e}function qe(n,t){const e=[],s=Math.max(n.length,t.length);for(let r=0;r<s;r++){let o=n[n.length-r-1];null==o&&(o=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===o)e.unshift(a);else if(1===a)e.unshift(o);else{if(o!==a)throw Error(`Operands could not be broadcast together with shapes ${n} and ${t}.`);e.unshift(o)}}return e}const Hs=O({equal_:function Zw(n,t){let e=T(n,"a","equal"),s=T(t,"b","equal");return[e,s]=It(e,s),qe(e.shape,s.shape),L.runKernel(ti,{a:e,b:s})}}),Fn=O({expandDims_:function Yw(n,t=0){const e=T(n,"x","expandDims","string_or_numeric");return k(t<=e.rank,()=>"Axis must be <= rank of the tensor"),L.runKernel(ni,{input:e},{dim:t})}}),Ir=O({tile_:function Jw(n,t){const e=T(n,"x","tile","string_or_numeric");return k(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`),L.runKernel(Jo,{x:e},{reps:t})}}),Df=O({eye_:function Qw(n,t,e,s="float32"){null==t&&(t=n);const r=Ke([n,t],s),o=n<=t?n:t;for(let i=0;i<o;++i)r.set(1,i,i);const a=j(r.toTensor(),[n,t]);if(null==e)return a;if(1===e.length)return Ir(Fn(a,0),[e[0],1,1]);if(2===e.length)return Ir(Fn(Fn(a,0),0),[e[0],e[1],1,1]);if(3===e.length)return Ir(Fn(Fn(Fn(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}});function Gc(n,t,e){return L.runKernel(Gu,{},{shape:n,value:t,dtype:e})}const ll=O({floor_:function ev(n){const e={x:T(n,"x","floor")};return L.runKernel(Co,e)}}),Uc=O({gather_:function tv(n,t,e=0,s=0){const r=T(n,"x","gather"),o=T(t,"indices","gather","int32");return L.runKernel(ri,{x:r,indices:o},{axis:e,batchDims:s})}}),Xn=O({greater_:function nv(n,t){let e=T(n,"a","greater"),s=T(t,"b","greater");return[e,s]=It(e,s),qe(e.shape,s.shape),L.runKernel(oi,{a:e,b:s})}}),js=O({greaterEqual_:function sv(n,t){let e=T(n,"a","greaterEqual"),s=T(t,"b","greaterEqual");return[e,s]=It(e,s),qe(e.shape,s.shape),L.runKernel(Io,{a:e,b:s})}}),Hc=O({leakyRelu_:function rv(n,t=.2){const s={x:T(n,"x","leakyRelu")};return L.runKernel(ii,s,{alpha:t})}}),Cn=O({log_:function ov(n){const e={x:T(n,"x","log")};return L.runKernel(_o,e)}}),Pn=O({exp_:function av(n){const e={x:T(n,"x","exp")};return L.runKernel(vo,e)}}),Ln=O({max_:function iv(n,t=null,e=!1){const r={x:T(n,"x","max")};return L.runKernel(fi,r,{reductionIndices:t,keepDims:e})}}),V=O({mul_:function lv(n,t){let e=T(n,"a","mul"),s=T(t,"b","mul");return[e,s]=It(e,s),L.runKernel(Oo,{a:e,b:s})}}),Se=O({sub_:function uv(n,t){let e=T(n,"a","sub"),s=T(t,"b","sub");return[e,s]=It(e,s),L.runKernel(Xo,{a:e,b:s})}}),Re=O({sum_:function cv(n,t=null,e=!1){let s=T(n,"x","sum");return"bool"===s.dtype&&(s=Ie(s,"int32")),L.runKernel(Ri,{x:s},{axis:t,keepDims:e})}}),Af=O({logSoftmax_:function hv(n,t=-1){const e=T(n,"logits","logSoftmax");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return rs((r,o)=>{const i=Ln(r,t,!0),l=Se(r,i),u=Se(Ie(l,"float32"),Cn(Re(Pn(l),t,!0)));return o([u]),{value:u,gradFunc:(h,d)=>{const[p]=d,m=Pn(p);return Se(h,V(Re(h,t,!0),m))}}})(e)}}),is=O({logicalAnd_:function dv(n,t){const e=T(n,"a","logicalAnd","bool"),s=T(t,"b","logicalAnd","bool");return qe(e.shape,s.shape),L.runKernel(ci,{a:e,b:s})}}),jc=O({maxPool_:function pv(n,t,e,s,r){const o=T(n,"x","maxPool");let i=o,l=!1;3===o.rank&&(l=!0,i=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),k(St(e,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`),null!=r&&k(Te(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const h=L.runKernel(mi,{x:i},{filterSize:t,strides:e,pad:s,dimRoundingMode:r});return l?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),mv=O({maxPool3d_:function fv(n,t=[1,1,1],e,s,r,o="NDHWC",a){null==a?a=[1,1,1]:Vt("dilations is deprecated, this field will be gone in v3.0.0.");const i=T(n,"x","maxPool3d");let l=i,u=!1;4===i.rank&&(u=!0,l=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(5===l.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),k("NDHWC"===o,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),k(St(e,a),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),null!=r&&k(Te(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const d=L.runKernel(gi,{x:l},{filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o,dilations:a});return u?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ls=O({maximum_:function gv(n,t){let e=T(n,"a","maximum"),s=T(t,"b","maximum");return[e,s]=It(e,s),"bool"===e.dtype&&(e=Ie(e,"int32"),s=Ie(s,"int32")),qe(e.shape,s.shape),L.runKernel(Do,{a:e,b:s})}}),Tt=O({mean_:function yv(n,t=null,e=!1){const r={x:T(n,"x","mean")};return L.runKernel(yi,r,{axis:t,keepDims:e})}}),ul=O({min_:function xv(n,t=null,e=!1){const r={x:T(n,"x","min")};return L.runKernel(xi,r,{axis:t,keepDims:e})}}),la=O({minimum_:function bv(n,t){let e=T(n,"a","minimum"),s=T(t,"b","minimum");return[e,s]=It(e,s),"bool"===e.dtype&&(e=Ie(e,"int32"),s=Ie(s,"int32")),qe(e.shape,s.shape),L.runKernel(Ao,{a:e,b:s})}});function Kc(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function Rf(n,t,e){const s=n.length+t.length,r=[];let o=0,a=0;for(let i=0;i<s;i++)-1===e.indexOf(i)?r.push(n[o++]):r.push(t[a++]);return r}function Wt(n,t){const e=[],s=n.length;for(let o=0;o<s;o++)-1===t.indexOf(o)&&e.push(n[o]);return[e,t.map(o=>n[o])]}function $t(n,t){return Rf(n,t.map(s=>1),t)}function qt(n,t,e){k(Kc(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function _t(n,t){if(Kc(n,t))return null;const e=[];for(let s=0;s<t;++s)-1===n.indexOf(s)&&e.push(s);return n.forEach(s=>e.push(s)),e}function Sr(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function Rt(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}const pt=O({square_:function wv(n){const t=T(n,"x","square");return L.runKernel("Square",{x:t},{})}}),qc=O({moments_:function vv(n,t=null,e=!1){const s=$e(t,(n=T(n,"x","moments")).shape),r=Tt(n,s,e);let o=r.shape;e||(o=$t(r.shape,s));const a=pt(Se(Ie(n,"float32"),j(r,o)));return{mean:r,variance:Tt(a,s,e)}}}),Et=O({neg_:function Nv(n){const e={x:T(n,"x","neg")};return L.runKernel(wi,e)}}),Tr=O({notEqual_:function Cv(n,t){let e=T(n,"a","notEqual"),s=T(t,"b","notEqual");return[e,s]=It(e,s),qe(e.shape,s.shape),L.runKernel(vi,{a:e,b:s})}}),Of=O({oneHot_:function kv(n,t,e=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:T(n,"indices","oneHot","int32")};return L.runKernel(Ci,o,{depth:t,onValue:e,offValue:s})}});function Pt(n,t="float32"){if("complex64"===t){const s=Pt(n,"float32"),r=Pt(n,"float32");return gr(s,r)}const e=en(U(n),t);return L.makeTensor(e,n,t)}function Ns(n,t="float32"){if("complex64"===t){const s=Ns(n,"float32"),r=Pt(n,"float32");return gr(s,r)}const e=Cp(U(n),t);return L.makeTensor(e,n,t)}const kn=O({onesLike_:function Iv(n){const e={x:T(n,"x","onesLike")};return L.runKernel(Ni,e)}}),Xc=O({pad_:function Sv(n,t,e=0){const s=T(n,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return L.runKernel(Ii,{x:s},{paddings:t,constantValue:e})}}),Zc=O({prelu_:function Tv(n,t){const e=T(n,"x","prelu"),s=T(t,"alpha","prelu");return L.runKernel(Si,{x:e,alpha:s})}});var Ff=B(94349);class Yc{constructor(t,e,s,r,o){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=o||Math.random();this.random=Ff.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,o,a;do{r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class $v{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=s,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Ff.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Rv=O({randomNormal_:function Av(n,t=0,e=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const o=new Yc(t,e,s,!1,r),a=Ke(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),cl=O({randomUniform_:function Ov(n,t=0,e=1,s="float32",r){const o=Ke(n,s),a=new $v(t,e,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),Cs=O({relu_:function Fv(n){const e={x:T(n,"x","relu")};return L.runKernel(Lo,e)}}),Ks=O({reverse_:function Pv(n,t){const s={x:T(n,"x","reverse")};return L.runKernel(Ei,s,{dims:t})}}),Pf=O({selu_:function Lv(n){const e={x:T(n,"x","selu")};return L.runKernel(Bo,e)}}),Lf=O({separableConv2d_:function Mv(n,t,e,s,r,o=[1,1],a="NHWC"){const i=T(n,"x","separableConv2d"),l=T(t,"depthwiseFilter","separableConv2d"),u=T(e,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=j(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");k(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),k(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),k(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),k(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),k(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];k(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=aa(c,l,s,r,a,o),g=Us(f,u,1,"valid",a);return h?j(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),ua=O({sigmoid_:function zv(n){const e={x:T(n,"x","sigmoid")};return L.runKernel(Ho,e)}}),at=O({slice_:function Vv(n,t,e){const s=T(n,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");return L.runKernel(Ai,{x:s},{begin:t,size:e})}}),Qc=O({slice1d_:function Bv(n,t,e){const s=T(n,"x","slice1d");return k(1===s.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),at(s,[t],[e])}}),Mf=O({slice2d_:function Wv(n,t,e){const s=T(n,"x","slice2d");return k(2===s.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),at(s,t,e)}}),eh=O({slice3d_:function Gv(n,t,e){const s=T(n,"x","slice3d");return k(3===s.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),at(s,t,e)}}),hl=O({slice4d_:function Uv(n,t,e){const s=T(n,"x","slice4d");return k(4===s.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),at(s,t,e)}}),th=O({softmax_:function Hv(n,t=-1){const e=T(n,"logits","softmax","float32");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);return L.runKernel(Pi,{logits:e},{dim:t})}}),dl=O({softplus_:function jv(n){const e={x:T(n,"x","softplus")};return L.runKernel(jo,e)}}),In=O({split_:function Kv(n,t,e=0){const r={x:T(n,"x","split")};return L.runKernel(Fi,r,{numOrSizeSplits:t,axis:e})}}),nn=O({sqrt_:function qv(n){const e={x:T(n,"x","sqrt")};return L.runKernel(Ko,e)}}),nh=O({squeeze_:function Xv(n,t){const e=T(n,"x","squeeze");return j(e,zs(e.shape,t).newShape)}}),qs=O({stack_:function Zv(n,t=0){const e=Yp(n,"tensors","stack","string_or_numeric");return k(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&k(t<=e[0].rank,()=>"Axis must be <= rank of the tensor"),L.runKernel(ki,e,{axis:t})}}),zf=O({tanh_:function Yv(n){const e={x:T(n,"x","tanh")};return L.runKernel(Yo,e)}});function Sn(n,t){ue(n);const e=Zi(n,t);if(1!==e.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Yi(n,null,e,t)}const Vf=O({truncatedNormal_:function Jv(n,t=0,e=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const o=new Yc(t,e,s,!0,r),a=Ke(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),$r=O({unstack_:function Qv(n,t=0){const e=T(n,"x","unstack","string_or_numeric");return k(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`),L.runKernel(Mi,{value:e},{axis:t})}});function sh(n,t=!0,e,s){return L.makeVariable(n,t,e,s)}const rh=O({broadcastTo_:function eN(n,t){let e=T(n,"broadcastTo","x");const s=e.shape;if(t.some(u=>!(u>0)||u%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=j(e,u)}const r=e.shape,o=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])o[u]=1;else if(1!==e.shape[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);return 0===o.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length?vr(e):L.runKernel(Jo,{x:e},{reps:o})}}),Tn=O({where_:function tN(n,t,e){const s=T(t,"a","where"),r=T(e,"b","where"),o=T(n,"condition","where","bool"),a=qe(s.shape,r.shape),i=rh(s,a),l=rh(r,a);return 1===o.rank&&k(o.shape[0]===s.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==o.rank&&Le(o.shape,l.shape,"Error in where: "),L.runKernel(Di,{condition:o,t:i,e:l})}}),Ye=O({zerosLike_:function nN(n){const e={x:T(n,"x","zerosLike")};return L.runKernel(Vi,e)}}),it=O({transpose_:function sN(n,t){const e=T(n,"x","transpose");return null==t&&(t=e.shape.map((o,a)=>a).reverse()),k(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of perm ${t}.`),t.forEach(o=>{k(o>=0&&o<e.rank,()=>`All entries in 'perm' must be between 0 and ${e.rank-1} but got ${t}`)}),e.rank<=1?e.clone():L.runKernel(Li,{x:e},{perm:t})}}),aN=O({dropout_:function oN(n,t,e,s){const r=T(n,"x","dropout");if(k("float32"===r.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),k(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return n instanceof W?r.clone():r;const o=function rN(n,t){if(null==t)return n.shape.slice();if(he(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)e.push(null==t[s]&&null!=n.shape[s]?n.shape[s]:t[s]);return e}return t}(r,e),a=1-t,i=Ae(ll(de(cl(o,0,1,"float32",s),a)),a);return V(r,i)}}),Bf=O({imag_:function iN(n){const e={input:T(n,"input","imag")};return L.runKernel(ju,e)}}),oh=O({real_:function lN(n){const e={input:T(n,"input","real")};return L.runKernel(tc,e)}}),ah=O({fft_:function uN(n){return k("complex64"===n.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`),L.runKernel("FFT",{input:n})}}),ih=O({rfft_:function cN(n,t){k("float32"===n.dtype,()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(null!=t&&t<e){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=t,r=at(n,f,m),e=t}else if(null!=t&&t>e){const f=n.shape.map(m=>m);f[n.shape.length-1]=t-e,r=Kt([n,Pt(f)],n.shape.length-1),e=t}else r=n;const o=Ye(r),a=j(gr(r,o),[s,e]),i=ah(a),l=Math.floor(e/2)+1,u=oh(i),c=Bf(i),h=In(u,[l,e-l],u.shape.length-1),d=In(c,[l,e-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,j(gr(h[0],d[0]),p)}}),pl=O({ifft_:function hN(n){return k("complex64"===n.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`),L.runKernel(Hu,{input:n})}}),Wf=O({irfft_:function dN(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=j(n,[e,t]);s=pl(r)}else{const r=[e,2*(t-1)],o=j(oh(n),[e,t]),a=j(Bf(n),[e,t]),i=Ks(at(o,[0,1],[e,t-2]),1),l=V(Ks(at(a,[0,1],[e,t-2]),1),Oe(-1)),u=Kt([o,i],1),c=Kt([a,l],1),h=j(gr(u,c),[r[0],r[1]]);s=pl(h)}if(s=oh(s),3===n.rank&&0!==n.shape[0]){const r=s,o=n.shape[0];s=j(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}}),lh=O({conv2DBackpropFilter_:function pN(n,t,e,s,r,o="NHWC",a){let i=n;3===n.rank&&(i=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;3===l.rank&&(l=j(t,[1,t.shape[0],t.shape[1],t.shape[2]])),k(4===i.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),k(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),k(4===e.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const u="NHWC"===o?i.shape[3]:i.shape[1],c="NHWC"===o?l.shape[3]:l.shape[1];return k(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),k(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),null!=a&&k(Te(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`),L.runKernel(Au,{x:i,dy:l},{strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:e})}}),Gf=O({relu6_:function fN(n){const e={x:T(n,"x","relu6")};return L.runKernel(Mo,e)}}),ca=O({step_:function mN(n,t=0){const s={x:T(n,"x","step")};return L.runKernel(Qo,s,{alpha:t})}});function fl(n,t,e){if(null==e||"linear"===e)return n;if("relu"===e)return V(n,ca(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function ml(n,t){let e=t;const s=Ft(n.shape,t.shape);return s.length>0&&(e=Re(e,s)),j(e,n.shape)}function gl(n,t,e,s){if("linear"===t)return n;if("relu"===t)return Cs(n);if("elu"===t)return il(n);if("relu6"===t)return Gf(n);if("prelu"===t)return Zc(n,e);if("leakyrelu"===t)return Hc(n,s);throw new Error(`Unknown fused activation ${t}.`)}const yl=(n,t)=>!(n>0)||"linear"===t,yN=O({fusedConv2d_:function gN({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===yl(L.state.gradientDepth,l=l||"linear")){let N=Us(n,t,e,s,r,o,a);return null!=i&&(N=de(N,i)),gl(N,l,u,c)}const h=T(n,"x","conv2d"),d=T(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=j(h,[1,h.shape[0],h.shape[1],h.shape[2]])),k(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),k(4===d.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),null!=a&&k(Te(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),k(p.shape[3]===d.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`),k(St(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),k("NHWC"===r,()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);const m=Bt(p.shape,d.shape,e,o,s,a);let g,y;null!=i&&(g=T(i,"bias","fused conv2d"),[g]=It(g,h),qe(m.outShape,g.shape)),null!=u&&(y=T(u,"prelu weights","fused conv2d"));const x=(N,S)=>{const[I,E,R,z]=S,K=fl(N,R,l);k(vs(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const Q=[Wc(E.shape,K,I,e,s),lh(E,K,I.shape,e,s)];if(null!=z){const Z=ml(z,K);Q.push(Z)}return Q},C={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return null==i?rs((S,I,E)=>{let R=L.runKernel(Wi,C,w);return E([I,S,R]),f&&(R=j(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(p,d):rs((S,I,E,R)=>{let z=L.runKernel(Wi,C,w);return R([I,S,z,E]),f&&(z=j(z,[z.shape[1],z.shape[2],z.shape[3]])),{value:z,gradFunc:x}})(p,d,g)}}),Uf=O({depthwiseConv2dNativeBackpropFilter_:function xN(n,t,e,s,r,o=[1,1],a){let i=n;3===n.rank&&(i=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;return 3===l.rank&&(l=j(t,[1,t.shape[0],t.shape[1],t.shape[2]])),L.runKernel(Lu,{x:i,dy:l},{strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:e})}}),Hf=O({depthwiseConv2dNativeBackpropInput_:function bN(n,t,e,s,r,o=[1,1],a){let i=t,l=!1;3===t.rank&&(l=!0,i=j(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h=L.runKernel(Mu,{dy:i,filter:e},{strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:n});return l?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});O({fusedDepthwiseConv2d_:function wN({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===yl(L.state.gradientDepth,l)){let N=aa(n,t,e,s,r,o,a);return null!=i&&(N=de(N,i)),gl(N,l,u,c)}const h=T(n,"x","depthwiseConv2d"),d=T(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=j(h,[1,h.shape[0],h.shape[1],h.shape[2]])),k(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),k(4===d.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),k(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),null==o&&(o=[1,1]),k(St(e,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),null!=a&&k(Te(s),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${s}.`);const m=Bt(p.shape,d.shape,e,o,s,a,!0);let g,y;null!=i&&(g=T(i,"bias","fused conv2d"),[g]=It(g,h),qe(m.outShape,g.shape)),null!=u&&(y=T(u,"prelu weights","fused depthwiseConv2d"));const x=(N,S)=>{k(vs(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[I,E,R,z]=S,K=fl(N,R,l),J=Hf(E.shape,K,I,e,s,o,a),Y=Uf(E,K,I.shape,e,s,o,a);return null!=z?[J,Y,ml(g,K)]:[J,Y]},C={x:p,filter:d,bias:g,preluActivationWeights:y},w={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:l,leakyreluAlpha:c};return null==i?rs((S,I,E)=>{let R=L.runKernel(Gi,C,w);return E([I,S,R]),f&&(R=j(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(p,d):rs((S,I,E,R)=>{let z=L.runKernel(Gi,C,w);return R([I,S,z,E]),f&&(z=j(z,[z.shape[1],z.shape[2],z.shape[3]])),{value:z,gradFunc:x}})(p,d,g)}});const tt=O({matMul_:function vN(n,t,e=!1,s=!1){let r=T(n,"a","matMul"),o=T(t,"b","matMul");return[r,o]=It(r,o),L.runKernel(Ha,{a:r,b:o},{transposeA:e,transposeB:s})}}),jf=O({fusedMatMul_:function NN({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i}){if(!1===yl(L.state.gradientDepth,o)){let z=tt(n,t,e,s);return null!=r&&(z=de(z,r)),gl(z,o,a,i)}let l=T(n,"a","fused matMul"),u=T(t,"b","fused matMul");[l,u]=It(l,u);const c=e?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=e?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=U(f),y=U(m);k(l.rank>=2&&u.rank>=2&&l.rank===u.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`),k(he(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`),k(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${s} must match.`);const x=l.shape.slice(0,-2).concat([d,p]),C=j(l,e?[g,c,d]:[g,d,c]),w=j(u,s?[y,p,h]:[y,h,p]);let N,S;null!=r&&(N=T(r,"bias","fused matMul"),[N]=It(N,l),qe(x,N.shape)),null!=a&&(S=T(a,"prelu weights","fused matMul"));const I=(z,K)=>{const[J,Y,Q,Z]=K,X=fl(j(z,Q.shape),Q,o);let ne,ee;return e||s?!e&&s?(ne=tt(X,Y,!1,!1),ee=tt(X,J,!0,!1)):e&&!s?(ne=tt(Y,X,!1,!0),ee=tt(J,X,!1,!1)):(ne=tt(Y,X,!0,!0),ee=tt(X,J,!0,!0)):(ne=tt(X,Y,!1,!0),ee=tt(J,X,!0,!1)),null!=r?[ne,ee,ml(Z,X)]:[ne,ee]},E={a:C,b:w,bias:N,preluActivationWeights:S},R={transposeA:e,transposeB:s,activation:o,leakyreluAlpha:i};return null==r?rs((K,J,Y)=>{const Q=L.runKernel(Bi,E,R);return Y([K,J,Q]),{value:j(Q,x),gradFunc:I}})(C,w):rs((K,J,Y,Q)=>{const Z=L.runKernel(Bi,E,R);return Q([K,J,Z,Y]),{value:j(Z,x),gradFunc:I}})(C,w,N)}});function Kf(n,t,e){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const a=2*Math.PI*o/(n+s-1);r[o]=t-e*Math.cos(a)}return Sn(r,"float32")}O({hammingWindow_:function kN(n){return Kf(n,.54,.46)}});const qf=O({hannWindow_:function SN(n){return Kf(n,.5,.5)}});function xl(n,t,e){if(ue(n),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Zi(n,e);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Yi(n,t,s,e)}const Xf=O({frame_:function TN(n,t,e,s=!1,r=0){let o=0;const a=[];for(;o+t<=n.size;)a.push(at(n,o,t)),o+=e;if(s)for(;o<n.size;){const i=o+t-n.size,l=Kt([at(n,o,t-i),Gc([i],r)]);a.push(l),o+=e}return 0===a.length?xl([],[0,t]):j(Kt(a),[a.length,t])}});function _r(n,t,e,s,r,o){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==o&&(o=0);const a=n.shape[0];return e=Math.min(e,a),k(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),k(2===n.rank,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),k(4===n.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),k(1===t.rank,()=>"scores must be a 1D tensor"),k(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),k(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}function MN(n,t,e){const s=function zN(n,t,e){return function BN(n,t,e){let s=0,r=n.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const i=e(t,n[o]);i>0?s=o+1:(r=o,a=!i)}return a?s:-s-1}(n,t,e||VN)}(n,t,e);n.splice(s<0?-(s+1):s,0,t)}function VN(n,t){return n>t?1:n<t?-1:0}function uh(n,t,e,s,r){return dh(n,t,e,s,r,0)}function ch(n,t,e,s,r,o){return dh(n,t,e,s,r,0,!1,o,!0)}function hh(n,t,e,s,r,o){return dh(n,t,e,s,r,o,!0)}function dh(n,t,e,s,r,o,a=!1,i=!1,l=!1){const u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Zf);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<e&&u.length>0;){const g=u.pop(),{score:y,boxIndex:x,suppressBeginIndex:C}=g;if(y<r)break;let w=!1;for(let N=h.length-1;N>=C;--N){const S=WN(n,x,h[N]);if(S>=s){w=!0;break}if(g.score=g.score*GN(s,c,S),g.score<=r)break}g.suppressBeginIndex=h.length,w||(g.score===y?(h.push(x),d.push(g.score)):g.score>r&&MN(u,g,Zf))}const p=h.length,f=e-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function WN(n,t,e){const s=n.subarray(4*t,4*t+4),r=n.subarray(4*e,4*e+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-o)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(o,u),g=Math.max(a,c),y=Math.min(i,h),x=Math.min(l,d),C=Math.max(y-m,0)*Math.max(x-g,0);return C/(p+f-C)}function GN(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function Zf(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}O({stft_:function $N(n,t,e,s,r=qf){null==s&&(s=function CN(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}(t));const o=Xf(n,t,e),a=V(o,r(t)),i=[];for(let l=0;l<o.shape[0];l++)i.push(ih(at(a,[l,0],[1,t]),s));return Kt(i)}}),O({cropAndResize_:function EN(n,t,e,s,r="bilinear",o=0){const a=T(n,"image","cropAndResize"),i=T(t,"boxes","cropAndResize","float32"),l=T(e,"boxInd","cropAndResize","int32"),u=i.shape[0];return k(4===a.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),k(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),k(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),k(2===s.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),k(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),k("bilinear"===r||"nearest"===r,()=>`method must be bilinear or nearest, but was ${r}`),L.runKernel(Fu,{image:a,boxes:i,boxInd:l},{method:r,extrapolationValue:o,cropSize:s})}}),O({flipLeftRight_:function AN(n){const t=T(n,"image","flipLeftRight","float32");return k(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),L.runKernel(Uu,{image:t},{})}}),O({rotateWithOffset_:function ON(n,t,e=0,s=.5){const r=T(n,"image","rotateWithOffset","float32");return k(4===r.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`),L.runKernel(lc,{image:r},{radians:t,fillValue:e,center:s})}}),O({nonMaxSuppression_:function PN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=T(n,"boxes","nonMaxSuppression"),a=T(t,"scores","nonMaxSuppression"),i=_r(o,a,e,s,r);return L.runKernel(Zu,{boxes:o,scores:a},{maxOutputSize:e=i.maxOutputSize,iouThreshold:s=i.iouThreshold,scoreThreshold:r=i.scoreThreshold})}}),O({nonMaxSuppressionWithScore_:function jN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=T(n,"boxes","nonMaxSuppression"),i=T(t,"scores","nonMaxSuppression"),l=_r(a,i,e,s,r,o),h=L.runKernel(Ju,{boxes:a,scores:i},{maxOutputSize:e=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:o=l.softNmsSigma});return{selectedIndices:h[0],selectedScores:h[1]}}}),O({nonMaxSuppressionPadded_:function ZN(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=T(n,"boxes","nonMaxSuppression"),i=T(t,"scores","nonMaxSuppression"),l=_r(a,i,e,s,r,null),f=L.runKernel(Yu,{boxes:a,scores:i},{maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:o});return{selectedIndices:f[0],validOutputs:f[1]}}});const Yf=O({resizeBilinear_:function eC(n,t,e=!1,s=!1){const r=T(n,"images","resizeBilinear");k(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),k(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),k(!1===s||!1===e,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;3===r.rank&&(a=!0,o=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u=L.runKernel(_i,{images:o},{alignCorners:e,halfPixelCenters:s,size:t});return a?j(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Jf=O({resizeNearestNeighbor_:function tC(n,t,e=!1,s=!1){const r=T(n,"images","resizeNearestNeighbor");k(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),k(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),k("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype"),k(!1===s||!1===e,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;3===r.rank&&(a=!0,o=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,u=L.runKernel($i,{images:o},{alignCorners:e,halfPixelCenters:s,size:t});return a?j(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Er=O({lessEqual_:function nC(n,t){let e=T(n,"a","lessEqual"),s=T(t,"b","lessEqual");return[e,s]=It(e,s),qe(e.shape,s.shape),L.runKernel(ui,{a:e,b:s})}});function Qf(n,t,e=1,s="float32"){if(0===e)throw new Error("Cannot have a step of zero");return L.runKernel(ec,{},{start:n,stop:t,step:e,dtype:s})}const rC=O({bandPart_:function sC(n,t,e){k(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),k(e%1==0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const s=T(n,"a","bandPart");k(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(e<=a))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`);t<0&&(t=o),e<0&&(e=a);const i=j(Qf(0,o,1,"int32"),[-1,1]),l=Qf(0,a,1,"int32"),u=Se(i,l),c=is(Er(u,Oe(+t,"int32")),js(u,Oe(-e,"int32"))),h=Pt([o,a],s.dtype);return j(qs($r(j(s,[-1,o,a])).map(d=>Tn(c,d,h))),r)}}),Xs=O({pow_:function oC(n,t){let e=T(n,"base","pow"),s=T(t,"exp","pow");return[e,s]=It(e,s),L.runKernel(Fo,{a:e,b:s})}});function em(n,t,e=null){if(0===n.rank)return jt(n);if(1!==n.rank&&null===e)return em(j(n,[-1]),t,e);if(1===n.rank||"number"==typeof e||Array.isArray(e)&&1===e.length){if(1===t)return Re(jt(n),e);if(t===1/0)return Ln(jt(n),e);if(t===-1/0)return ul(jt(n),e);if("euclidean"===t||2===t)return nn(Re(Xs(jt(n),Oe(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&2===e.length){if(1===t)return Ln(Re(jt(n),e[0]),e[1]-1);if(t===1/0)return Ln(Re(jt(n),e[1]),e[0]);if(t===-1/0)return ul(Re(jt(n),e[1]),e[0]);if("fro"===t||"euclidean"===t)return nn(Re(pt(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const gh=O({norm_:function aC(n,t="euclidean",e=null,s=!1){const r=em(n=T(n,"x","norm"),t,e);let o=r.shape;if(s){const a=$e(e,n.shape);o=$t(r.shape,a)}return j(r,o)}}),lC=O({gramSchmidt_:function iC(n){let t;if(Array.isArray(n)){t=!1,k(null!=n&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)k(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else t=!0,n=In(n,n.shape[0],0).map(r=>nh(r,[0]));k(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(L.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const i=V(Re(V(e[a],o)),e[a]);o=Se(o,i)}return Ae(o,gh(o,"euclidean"))}));return t?qs(e,0):e}});function tm(n,t=!1){return L.tidy(()=>{k(2===n.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=Df(e),o=vr(n);const a=xl([[1]],[1,1]);let i=vr(a);const l=e>=s?s:e;for(let u=0;u<l;++u){const c=o,h=i,d=r;[i,o,r]=L.tidy(()=>{const p=at(o,[u,u],[e-u,1]),f=gh(p),m=at(o,[u,u],[1,1]),g=Tn(Xn(m,0),xl([[-1]]),xl([[1]])),y=Se(m,V(g,f)),x=Ae(p,y);i=1===x.shape[0]?vr(a):Kt([a,at(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const C=Et(Ae(tt(g,y),f)),w=at(o,[u,0],[e-u,s]),N=V(C,i),S=it(i);if(0===u)o=Se(w,tt(N,tt(S,w)));else{const R=Se(w,tt(N,tt(S,w)));o=Kt([at(o,[0,0],[u,s]),R],0)}const I=it(N),E=at(r,[0,u],[e,r.shape[1]-u]);if(0===u)r=Se(E,tt(tt(E,i),I));else{const R=Se(E,tt(tt(E,i),I));r=Kt([at(r,[0,0],[e,u]),R],1)}return[i,o,r]}),je([c,h,d])}return!t&&e>s&&(r=at(r,[0,0],[e,s]),o=at(o,[0,0],[s,s])),[r,o]})}const cC=O({qr_:function uC(n,t=!1){if(k(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),2===n.rank)return tm(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),s=$r(j(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];return s.forEach(l=>{const[u,c]=tm(l,t);r.push(u),o.push(c)}),[j(qs(r,0),n.shape),j(qs(o,0),n.shape)]}}});var sn=(()=>{return(n=sn||(sn={}))[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",sn;var n})();const us=O({computeWeightedLoss_:function hC(n,t,e=sn.SUM_BY_NONZERO_WEIGHTS){const s=T(n,"losses","computeWeightedLoss");let r=null;null!=t&&(r=T(t,"weights","computeWeightedLoss"));const o=null==r?s:V(s,r);if(e===sn.NONE)return o;if(e===sn.SUM)return Re(o);if(e===sn.MEAN){if(null==r)return Tt(o);{const a=s.size/r.size,i=Ae(Re(o),Re(r));return a>1?Ae(i,Oe(a)):i}}if(e===sn.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Ae(Re(o),Oe(s.size));{const a=V(r,Ns(s.shape)),i=Ie(Re(Tr(a,Oe(0))),"float32");return Ae(Re(o),i)}}throw Error(`Unknown reduction: ${e}`)}}),pC=O({absoluteDifference_:function dC(n,t,e,s=sn.SUM_BY_NONZERO_WEIGHTS){const r=T(n,"labels","absoluteDifference"),o=T(t,"predictions","absoluteDifference");let a=null;null!=e&&(a=T(e,"weights","absoluteDifference")),Le(r.shape,o.shape,"Error in absoluteDifference: ");const i=jt(Se(r,o));return us(i,a,s)}}),mC=O({cosineDistance_:function fC(n,t,e,s,r=sn.SUM_BY_NONZERO_WEIGHTS){const o=T(n,"labels","cosineDistance"),a=T(t,"predictions","cosineDistance");let i=null;null!=s&&(i=T(s,"weights","cosineDistance")),Le(o.shape,a.shape,"Error in cosineDistance: ");const l=Oe(1),u=Se(l,Re(V(o,a),e,!0));return us(u,i,r)}}),yC=O({hingeLoss_:function gC(n,t,e,s=sn.SUM_BY_NONZERO_WEIGHTS){let r=T(n,"labels","hingeLoss");const o=T(t,"predictions","hingeLoss");let a=null;null!=e&&(a=T(e,"weights","hingeLoss")),Le(r.shape,o.shape,"Error in hingeLoss: ");const i=Oe(1);r=Se(V(Oe(2),r),i);const l=Cs(Se(i,V(r,o)));return us(l,a,s)}}),bC=O({huberLoss_:function xC(n,t,e,s=1,r=sn.SUM_BY_NONZERO_WEIGHTS){const o=T(n,"labels","huberLoss"),a=T(t,"predictions","huberLoss");let i=null;null!=e&&(i=T(e,"weights","huberLoss")),Le(o.shape,a.shape,"Error in huberLoss: ");const l=Oe(s),u=jt(Se(a,o)),c=la(u,l),h=Se(u,c),d=de(V(Oe(.5),pt(c)),V(l,h));return us(d,i,r)}}),vC=O({logLoss_:function wC(n,t,e,s=1e-7,r=sn.SUM_BY_NONZERO_WEIGHTS){const o=T(n,"labels","logLoss"),a=T(t,"predictions","logLoss");let i=null;null!=e&&(i=T(e,"weights","logLoss")),Le(o.shape,a.shape,"Error in logLoss: ");const l=Oe(1),u=Oe(s),c=Et(V(o,Cn(de(a,u)))),h=V(Se(l,o),Cn(de(Se(l,a),u))),d=Se(c,h);return us(d,i,r)}}),yh=O({squaredDifference_:function NC(n,t){let e=T(n,"a","squaredDifference"),s=T(t,"b","squaredDifference");return[e,s]=It(e,s),qe(e.shape,s.shape),L.runKernel(qo,{a:e,b:s},{})}}),kC=O({meanSquaredError_:function CC(n,t,e,s=sn.SUM_BY_NONZERO_WEIGHTS){const r=T(n,"labels","meanSquaredError"),o=T(t,"predictions","meanSquaredError");let a=null;null!=e&&(a=T(e,"weights","meanSquaredError")),Le(r.shape,o.shape,"Error in meanSquaredError: ");const i=yh(r,o);return us(i,a,s)}}),nm=O({log1p_:function IC(n){const e={x:T(n,"x","log1p")};return L.runKernel(Eo,e)}}),$C=O({sigmoidCrossEntropy_:function TC(n,t,e,s=0,r=sn.SUM_BY_NONZERO_WEIGHTS){let o=T(n,"multiClassLabels","sigmoidCrossEntropy");const a=T(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=e&&(i=T(e,"weights","sigmoidCrossEntropy")),Le(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Oe(s),c=Oe(1),h=Oe(.5);o=de(V(o,Se(c,u)),V(h,u))}const l=function SC(n,t){const e=T(n,"labels","sigmoidCrossEntropyWithLogits"),s=T(t,"logits","sigmoidCrossEntropyWithLogits");Le(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Cs(s),o=V(s,e),a=nm(Pn(Et(jt(s))));return de(Se(r,o),a)}(o,a);return us(l,i,r)}}),sm=O({logSumExp_:function _C(n,t=null,e=!1){const s=T(n,"x","logSumExp"),r=$e(t,s.shape),o=Ln(s,r,!0),a=Se(s,o),i=Pn(a),l=Re(i,r),u=Cn(l),c=de(j(o,u.shape),u);if(e){const h=$t(c.shape,r);return j(c,h)}return c}}),AC=O({softmaxCrossEntropy_:function DC(n,t,e,s=0,r=sn.SUM_BY_NONZERO_WEIGHTS){let o=T(n,"onehotLabels","softmaxCrossEntropy");const a=T(t,"logits","softmaxCrossEntropy");let i=null;if(null!=e&&(i=T(e,"weights","softmaxCrossEntropy")),Le(o.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Oe(s),c=Oe(1),h=Oe(o.shape[1]);o=de(V(o,Se(c,u)),Ae(u,h))}const l=function EC(n,t,e=-1){if(-1===e&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return rs((r,o,a)=>{const l=sm(o,[e],!0),u=Se(Ie(o,"float32"),l);a([r,u]);const c=Et(V(u,r));return{value:Re(c,[e]),gradFunc:(p,f)=>{const[m,g]=f,y=$t(p.shape,[e]);return[V(j(p,y),Se(Ie(m,"float32"),Pn(g))),V(j(p,y),Se(Pn(g),Ie(m,"float32")))]}}})(n,t)}(o,a);return us(l,i,r)}}),RC={bandPart:rC,gramSchmidt:lC,qr:cC},OC={absoluteDifference:pC,computeWeightedLoss:us,cosineDistance:mC,hingeLoss:yC,huberLoss:bC,logLoss:vC,meanSquaredError:kC,sigmoidCrossEntropy:$C,softmaxCrossEntropy:AC};let xh=(()=>{class n extends bs{constructor(e,s,r=null){super(),this.learningRate=e,this.rho=s,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==r&&(this.epsilon=L.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,o)=>{const a=L.registeredVariables[r];null==this.accumulatedGrads[o]&&(this.accumulatedGrads[o]={originalName:`${r}/accum_grad`,variable:H(()=>Ye(a).variable(!1))}),null==this.accumulatedUpdates[o]&&(this.accumulatedUpdates[o]={originalName:`${r}/accum_var`,variable:H(()=>Ye(a).variable(!1))});const l=Array.isArray(e)?e[o].tensor:e[r];if(null==l)return;const u=this.accumulatedGrads[o].variable,c=this.accumulatedUpdates[o].variable;H(()=>{const h=de(V(u,this.rho),V(pt(l),1-this.rho)),d=V(Ae(nn(de(c,this.epsilon)),nn(de(u,this.epsilon))),l),p=de(V(c,this.rho),V(pt(d),1-this.rho));u.assign(h),c.assign(p);const f=de(V(d,-this.learningRate),a);a.assign(f)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(je(this.accumulatedGrads.map(e=>e.variable)),je(this.accumulatedUpdates.map(e=>e.variable)))}getWeights(){var e=this;return(0,A.Z)(function*(){const s=[...e.accumulatedGrads,...e.accumulatedUpdates];return[yield e.saveIterations()].concat(s.map(r=>({name:r.originalName,tensor:r.variable})))})()}setWeights(e){var s=this;return(0,A.Z)(function*(){const r=(e=yield s.extractIterations(e)).length/2;s.accumulatedGrads=e.slice(0,r).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),s.accumulatedUpdates=e.slice(r,2*r).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,s){return new e(s.learningRate,s.rho,s.epsilon)}}return n.className="Adadelta",n})();re(xh);let bh=(()=>{class n extends bs{constructor(e,s=.1){super(),this.learningRate=e,this.initialAccumulatorValue=s,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,o)=>{const a=L.registeredVariables[r];null==this.accumulatedGrads[o]&&(this.accumulatedGrads[o]={originalName:`${r}/accumulator`,variable:H(()=>Gc(a.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[o].tensor:e[r];if(null==i)return;const l=this.accumulatedGrads[o].variable;H(()=>{const u=de(l,pt(i));l.assign(u);const c=de(V(Ae(i,nn(de(u,L.backend.epsilon()))),-this.learningRate),a);a.assign(c)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&je(this.accumulatedGrads.map(e=>e.variable))}getWeights(){var e=this;return(0,A.Z)(function*(){return[yield e.saveIterations()].concat(e.accumulatedGrads.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(e){var s=this;return(0,A.Z)(function*(){e=yield s.extractIterations(e),s.accumulatedGrads=e.map(o=>({originalName:o.name,variable:o.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,s){return new e(s.learningRate,s.initialAccumulatorValue)}}return n.className="Adagrad",n})();re(bh);let wh=(()=>{class n extends bs{constructor(e,s,r,o=null){super(),this.learningRate=e,this.beta1=s,this.beta2=r,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],H(()=>{this.accBeta1=Oe(s).variable(),this.accBeta2=Oe(r).variable()}),null==o&&(this.epsilon=L.backend.epsilon())}applyGradients(e){const s=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);H(()=>{const r=Se(1,this.accBeta1),o=Se(1,this.accBeta2);s.forEach((a,i)=>{const l=L.registeredVariables[a];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:H(()=>Ye(l).variable(!1))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:H(()=>Ye(l).variable(!1))});const c=Array.isArray(e)?e[i].tensor:e[a];if(null==c)return;const h=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,p=de(V(h,this.beta1),V(c,1-this.beta1)),f=de(V(d,this.beta2),V(pt(c),1-this.beta2)),m=Ae(p,r),g=Ae(f,o);h.assign(p),d.assign(f);const y=de(V(Ae(m,de(nn(g),this.epsilon)),-this.learningRate),l);l.assign(y)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&je(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&je(this.accumulatedSecondMoment.map(e=>e.variable))}getWeights(){var e=this;return(0,A.Z)(function*(){const s=[...e.accumulatedFirstMoment,...e.accumulatedSecondMoment];return[yield e.saveIterations()].concat(s.map(r=>({name:r.originalName,tensor:r.variable})))})()}setWeights(e){var s=this;return(0,A.Z)(function*(){e=yield s.extractIterations(e),H(()=>{s.accBeta1.assign(Xs(s.beta1,s.iterations_+1)),s.accBeta2.assign(Xs(s.beta2,s.iterations_+1))});const r=e.length/2;s.accumulatedFirstMoment=e.slice(0,r).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)})),s.accumulatedSecondMoment=e.slice(r,2*r).map(a=>({originalName:a.name,variable:a.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,s){return new e(s.learningRate,s.beta1,s.beta2,s.epsilon)}}return n.className="Adam",n})();re(wh);let vh=(()=>{class n extends bs{constructor(e,s,r,o=null,a=0){super(),this.learningRate=e,this.beta1=s,this.beta2=r,this.epsilon=o,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],H(()=>{this.iteration=Oe(0).variable(),this.accBeta1=Oe(s).variable()}),null==o&&(this.epsilon=L.backend.epsilon())}applyGradients(e){const s=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);H(()=>{const r=Se(1,this.accBeta1),o=Ae(-this.learningRate,de(V(this.iteration,this.decay),1));s.forEach((a,i)=>{const l=L.registeredVariables[a];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:Ye(l).variable(!1)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:Ye(l).variable(!1)});const c=Array.isArray(e)?e[i].tensor:e[a];if(null==c)return;const h=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,p=de(V(h,this.beta1),V(c,1-this.beta1)),f=V(d,this.beta2),m=jt(c),g=ls(f,m);h.assign(p),d.assign(g);const y=de(V(Ae(o,r),Ae(p,de(g,this.epsilon))),l);l.assign(y)}),this.iteration.assign(de(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&je(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&je(this.accumulatedWeightedInfNorm.map(e=>e.variable))}getWeights(){return(0,A.Z)(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(e){return(0,A.Z)(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,s){return new e(s.learningRate,s.beta1,s.beta2,s.epsilon,s.decay)}}return n.className="Adamax",n})();re(vh);let bl=(()=>{class n extends bs{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,o)=>{const a=Array.isArray(e)?e[o].tensor:e[r];if(null==a)return;const i=L.registeredVariables[r];H(()=>{const l=de(V(this.c,a),i);i.assign(l)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=qn(Oe(-e))}dispose(){this.c.dispose()}getWeights(){var e=this;return(0,A.Z)(function*(){return[yield e.saveIterations()]})()}setWeights(e){var s=this;return(0,A.Z)(function*(){if(0!==(e=yield s.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,s){return new e(s.learningRate)}}return n.className="SGD",n})();re(bl);let Nh=(()=>{class n extends bl{constructor(e,s,r=!1){super(e),this.learningRate=e,this.momentum=s,this.useNesterov=r,this.accumulations=[],this.m=Oe(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,o)=>{const a=L.registeredVariables[r];null==this.accumulations[o]&&(this.accumulations[o]={originalName:`${r}/momentum`,variable:H(()=>Ye(a).variable(!1))});const i=this.accumulations[o].variable,l=Array.isArray(e)?e[o].tensor:e[r];null!=l&&H(()=>{let u;const c=de(V(this.m,i),l);u=de(V(this.c,this.useNesterov?de(l,V(c,this.m)):c),a),i.assign(c),a.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&je(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}getWeights(){var e=this;return(0,A.Z)(function*(){return[yield e.saveIterations()].concat(e.accumulations.map(s=>({name:s.originalName,tensor:s.variable})))})()}setWeights(e){var s=this;return(0,A.Z)(function*(){e=yield s.extractIterations(e),s.accumulations=e.map(o=>({originalName:o.name,variable:o.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,s){return new e(s.learningRate,s.momentum,s.useNesterov)}}return n.className="Momentum",n})();re(Nh);let Ch=(()=>{class n extends bs{constructor(e,s=.9,r=0,o=null,a=!1){if(super(),this.learningRate=e,this.decay=s,this.momentum=r,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==o&&(this.epsilon=L.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,o)=>{const a=L.registeredVariables[r],i=!1;null==this.accumulatedMeanSquares[o]&&(this.accumulatedMeanSquares[o]={originalName:`${r}/rms`,variable:H(()=>Ye(a).variable(i))}),null==this.accumulatedMoments[o]&&(this.accumulatedMoments[o]={originalName:`${r}/momentum`,variable:H(()=>Ye(a).variable(i))}),null==this.accumulatedMeanGrads[o]&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${r}/mg`,variable:H(()=>Ye(a).variable(i))});const l=Array.isArray(e)?e[o].tensor:e[r];if(null==l)return;const u=this.accumulatedMeanSquares[o].variable,c=this.accumulatedMoments[o].variable;H(()=>{const h=de(V(u,this.decay),V(pt(l),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[o].variable,p=de(V(d,this.decay),V(l,1-this.decay)),f=Ae(V(l,this.learningRate),nn(Se(h,de(pt(p),this.epsilon)))),m=de(V(c,this.momentum),f);u.assign(h),d.assign(p),c.assign(m);const g=Se(a,m);a.assign(g)}else{const d=de(V(u,this.decay),V(pt(l),1-this.decay)),p=de(V(c,this.momentum),Ae(V(l,this.learningRate),nn(de(d,this.epsilon))));u.assign(d),c.assign(p);const f=Se(a,p);a.assign(f)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&je(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&je(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&je(this.accumulatedMoments.map(e=>e.variable))}getWeights(){var e=this;return(0,A.Z)(function*(){const s=[...e.accumulatedMeanSquares,...e.accumulatedMoments];return e.centered&&s.push(...e.accumulatedMeanGrads),[yield e.saveIterations()].concat(s.map(r=>({name:r.originalName,tensor:r.variable})))})()}setWeights(e){var s=this;return(0,A.Z)(function*(){e=yield s.extractIterations(e);const r=s.centered?e.length/3:e.length/2,o=!1;s.accumulatedMeanSquares=e.slice(0,r).map(a=>({originalName:a.name,variable:a.tensor.variable(o)})),s.accumulatedMoments=e.slice(r,2*r).map(a=>({originalName:a.name,variable:a.tensor.variable(o)})),s.centered&&(s.accumulatedMeanGrads=e.slice(2*r,3*r).map(a=>({originalName:a.name,variable:a.tensor.variable(o)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,s){return new e(s.learningRate,s.decay,s.momentum,s.epsilon,s.centered)}}return n.className="RMSProp",n})();re(Ch);class Zs{static sgd(t){return new bl(t)}static momentum(t,e,s=!1){return new Nh(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,o=!1){return new Ch(t,e,s,r,o)}static adam(t=.001,e=.9,s=.999,r=null){return new wh(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new xh(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,o=0){return new vh(t,e,s,r,o)}static adagrad(t,e=.1){return new bh(t,e)}}const Ys={sgd:Zs.sgd,momentum:Zs.momentum,adadelta:Zs.adadelta,adagrad:Zs.adagrad,rmsprop:Zs.rmsprop,adamax:Zs.adamax,adam:Zs.adam},FC=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function wl(){return new Promise(n=>FC(()=>n()))}function kh(n,t){const e=n[0].length;n.forEach((r,o)=>{k(r.length===e,()=>`Error in concat${e}D: rank of tensors[${o}] must be the same as the rank of the rest (${e})`)}),k(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,o)=>{for(let a=0;a<e;a++)k(a===t||r[a]===s[a],()=>`Error in concat${e}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function cs(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}const Ih=30;function vl(n){return n<=Ih?n:ku(n,Math.floor(Math.sqrt(n)))}function Sh(n,t,e){return[e*("number"==typeof n?n:n[0]),t*("number"==typeof n?n:n[1])]}function ha(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=t.length;for(let a=0;a<o;++a)r=r.concat([n[a+1]/t[a],t[a]]);r=r.concat(n.slice(o+1))}return r}function da(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],o=[];for(let a=1;a<n;++a)a>=2*t+1||a%2==1?o.push(a):r.push(a);s.push(...r),s.push(0),s.push(...o)}return s}function pa(n,t,e,s=!0){const r=[];r.push(s?n[0]/e:n[0]*e);for(let o=1;o<n.length;++o)r.push(o<=t.length?s?t[o-1]*n[o]:n[o]/t[o-1]:n[o]);return r}function Th(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function $h(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}function _h(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(0===U(n.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,o=r[r.length-1];let a=1;for(let h=0;h<r.length-1;++h)a*=r[h];const i=n.shape,l=r.slice();l.pop();let u=1;for(let h=o;h<e;++h)u*=i[h],l.push(i[h]);const c=[...Fe(n.shape).map(h=>h/u),1].slice(0,o);return[l,a,u,c]}function rm(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(o+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(o+" update.rank != "+(r+n.length-s));for(let a=0;a<r;++a)if(e.shape[a]!==t.shape[a])throw new Error(o+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-r;++a)if(e.shape[a+r]!==n[a+s])throw new Error(o+` updates.shape[${a+r}] (${e.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function PC(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(0===e.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===n.size)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}rm(e,t,n)}function fa(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,o=e.length;let a=1;for(let h=r;h<o;++h)a*=e[h];const i=r<1?1:r;return{sliceRank:r,numUpdates:U(t.shape)/i,sliceSize:a,strides:[...Fe(e.slice(0,r)),1],outputSize:U(e)}}const Nl=1.7580993408473768,Cl=1.0507009873554805,Eh=.3275911,Dh=.254829592,Ah=-.284496736,Rh=1.421413741,Oh=-1.453152027,Fh=1.061405429;function Dr(...n){te().getBool("IS_TEST")||console.warn(...n)}function LC(...n){te().getBool("IS_TEST")||console.log(...n)}function hs(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(2*n.length);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function om(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function am(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function im(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function Ph(n,t){return{real:n[2*t],imag:n[2*t+1]}}function lm(n,t,e,s){n[2*s]=t,n[2*s+1]=e}function um(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(t?2:-2)*Math.PI*(r/n);e[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:e,imag:s}}function cm(n,t,e){const s=(e?2:-2)*Math.PI*(n/t);return{real:Math.cos(s),imag:Math.sin(s)}}function Lh(n,t,e=0){let s=[];if("number"==typeof t)k(n.shape[e]%t==0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{k(t.reduce((a,i)=>(-1===i&&(a+=1),a),0)<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(-1!==o){const a=t.reduce((i,l)=>l>0?i+l:i);t[o]=n.shape[e]-a}k(n.shape[e]===t.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function hm(n,t){let s,e=!1;for(n<=Ih?(s=n,e=!0):s=ku(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=ku(n,s+1);return s}function dm(n,t,e){const s=[],r=n.length;for(let o=0;o<r;o++)s.push(o!==t?n[o]:e);return s}function Mh(n,t,e,s){const r=t.shape.length,o=n.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${o}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let h=0;h<s;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const a=n.shape[e],i=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)i.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<e;h++)i.push(n.shape[h]),u*=n.shape[h];for(let h=s;h<r;h++)i.push(t.shape[h]);for(let h=e+1;h<o;h++)i.push(n.shape[h]),c*=n.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:i}}function MC(n,t,e){if("complex64"===t){if("complex64"===n.dtype)return n.clone();const s=Pt(n.shape),r=Ie(n,"float32"),o=e.complex(r,s);return s.dispose(),r.dispose(),o}if(!vu(n.dtype,t))return L.makeTensorFromDataId(n.dataId,n.shape,t);if("complex64"===n.dtype){const s=e.real(n),r=Ie(s,t);return s.dispose(),r}if("int32"===t)return e.int(n);if("bool"===t){const s=Oe(0,n.dtype),r=e.notEqual(n,s);return s.dispose(),r}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${t}`)}function zC(n,t){return L.makeTensorFromDataId(n.dataId,t,n.dtype)}function zh(n){try{return n.map(t=>fr(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function pm(n){return n.map(t=>ra(t))}function fm(n,t){const e=[];for(let o=0;o<t.length;o++)t[o]&&e.push(o);const s=Ke(n,"int32"),r=Ke([e.length,n.length],"int32");for(let o=0;o<e.length;o++){const a=s.indexToLoc(e[o]);r.values.set(a,o*n.length)}return r.toTensor()}const mm={kernelName:Va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(n,ca(Ie(e,"float32"),-1))}}},VC={kernelName:ro,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=pt(Ie(e,"float32")),r=nn(Se(Oe(1),s));return Et(Ae(n,r))}}}},BC={kernelName:oo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=nn(Se(pt(Ie(e,"float32")),1));return Ae(n,s)}}}},WC={kernelName:dr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=qe(e.shape,s.shape);return{a:()=>{let i=n;const l=Ft(e.shape,r);return l.length>0&&(i=Re(i,l)),j(i,e.shape)},b:()=>{let i=n;const l=Ft(s.shape,r);return l.length>0&&(i=Re(i,l)),j(i,s.shape)}}}},GC={kernelName:Su,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}},UC={kernelName:Ba,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ye(e)}}},HC={kernelName:Wa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ye(e)}}},jC={kernelName:ao,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ae(n,nn(Se(Oe(1),pt(Ie(e,"float32")))))}}},KC={kernelName:lo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=nn(de(Oe(1),pt(Ie(e,"float32"))));return Ae(n,s)}}}},qC={kernelName:ho,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=qe(e.shape,s.shape);return{a:()=>{const i=de(pt(e),pt(s));let l=V(n,Ae(s,i));const u=Ft(e.shape,r);return u.length>0&&(l=Re(l,u)),j(l,e.shape)},b:()=>{const i=de(pt(e),pt(s));let l=Et(V(n,Ae(e,i)));const u=Ft(s.shape,r);return u.length>0&&(l=Re(l,u)),j(l,s.shape)}}}},XC={kernelName:uo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ae(n,de(pt(Ie(e,"float32")),1))}}},ZC={kernelName:co,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ae(n,Se(Oe(1),pt(Ie(e,"float32"))))}}},JC=O({avgPool3dGrad_:function YC(n,t,e,s,r=[1,1,1],o,a){const i=T(n,"dy","avgPool3dGrad"),l=T(t,"input","avgPool3dGrad");let u=i,c=l,h=!1;4===l.rank&&(h=!0,u=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=j(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),k(5===u.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),k(5===c.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),k(St(s,r),()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`),null!=a&&k(Te(o),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`);const f=L.runKernel(Eu,{dy:u,input:c},{filterSize:e,strides:s,dilations:r,pad:o,dimRoundingMode:a});return h?j(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),QC={kernelName:Ua,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,dilations:a,pad:i,dimRoundingMode:l}=e,u=a??[1,1,1];return{x:()=>JC(n,s,r,o,u,i,l)}}},t1=O({avgPoolGrad_:function e1(n,t,e,s,r){const o=T(n,"dy","avgPoolGrad"),a=T(t,"input","avgPoolGrad");k(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let i=a,l=o,u=!1;3===a.rank&&(u=!0,i=j(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),k(4===i.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const d=L.runKernel(_u,{dy:l,input:i},{filterSize:e,strides:s,pad:r});return u?j(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),n1={kernelName:Ga,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:a}=e;return{x:()=>t1(n,s,r,o,a)}}},s1={kernelName:Ha,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:o,transposeB:a}=e;return o||a?!o&&a?{a:()=>tt(n,r,!1,!1),b:()=>tt(n,s,!0,!1)}:o&&!a?{a:()=>tt(r,n,!1,!0),b:()=>tt(s,n,!1,!1)}:{a:()=>tt(r,n,!0,!0),b:()=>tt(n,s,!0,!0)}:{a:()=>tt(n,r,!1,!0),b:()=>tt(s,n,!0,!1)}}},Vh=O({spaceToBatchND_:function r1(n,t,e){const s=T(n,"x","spaceToBatchND");return k(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),k(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),k(s.shape.reduce((a,i,l)=>l>0&&l<=t.length?a&&(i+e[l-1][0]+e[l-1][1])%t[l-1]==0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`),L.runKernel(Oi,{x:s},{blockShape:t,paddings:e})}}),o1={kernelName:ja,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>Vh(n,s,r)}}},a1={kernelName:"BroadcastTo",gradFunc:(n,t,e)=>{const r=e.inputShape,o=e.shape,a=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])a[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const i=[];for(let l=0;l<a.length;l++)a[l]>1&&i.push(l);return{x:()=>Re(n,i,!0)}}},i1={kernelName:po,gradFunc:n=>({x:()=>n.clone()})},l1={kernelName:fo,gradFunc:n=>({x:()=>Ye(n)})},u1={kernelName:mo,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:o}=e;return{x:()=>Tn(is(js(s,r),Er(s,o)),n,Ye(n))}}},c1={kernelName:Ka,inputsToSave:["x"],gradFunc:mm.gradFunc},h1={kernelName:qa,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(l=>l.shape),{axis:r}=e,o=$e(r,t[0].shape)[0],a=s.map(l=>l[o]);return In(n,a,o).map(l=>()=>l)}},d1={kernelName:Xa,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:o,strides:a,pad:i,dataFormat:l}=e;return k(vs(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Wc(s.shape,n,r,a,i,l),filter:()=>lh(s,n,r.shape,a,i,l)}}},p1={kernelName:Za,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:o,pad:a,dataFormat:i,dimRoundingMode:l}=e;return{dy:()=>Us(n,r,o,a,i,1,l),filter:()=>lh(n,s,r.shape,o,a,i,l)}}},m1=O({conv3DBackpropFilter_:function f1(n,t,e,s,r){let o=n;4===n.rank&&(o=j(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=t;return 4===a.rank&&(a=j(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),k(5===o.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),k(5===a.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),k(5===e.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),k(o.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${e[3]}.`),k(a.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${e[4]}).`),L.runKernel(Ru,{x:o,dy:a},{strides:s,pad:r,filterShape:e})}}),y1=O({conv3DBackpropInput_:function g1(n,t,e,s,r){k(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,a=t,i=!1;4===t.rank&&(i=!0,a=j(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const l=o[4],u=a.shape[4];k(5===o.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),k(5===a.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),k(5===e.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),k(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),k(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);const d=L.runKernel(Ou,{dy:a,filter:e},{pad:r,strides:s,inputShape:o});return i?j(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),x1={kernelName:Ya,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o}=e;k(vs(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,i]=t;return{x:()=>y1(a.shape,n,i,r,o),filter:()=>m1(a,n,i.shape,r,o)}}},gm=O({sin_:function b1(n){const e={x:T(n,"x","sin")};return L.runKernel(Wo,e)}}),w1={kernelName:go,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(Et(gm(Ie(e,"float32"))),n)}}},ym=O({sinh_:function v1(n){const e={x:T(n,"x","sinh")};return L.runKernel(Go,e)}}),N1={kernelName:yo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(ym(Ie(e,"float32")),n)}}},xm=O({cumsum_:function C1(n,t=0,e=!1,s=!1){const o={x:T(n,"x","cumsum")};return L.runKernel(Ja,o,{axis:t,exclusive:e,reverse:s})}}),k1={kernelName:Ja,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:o,reverse:a}=e;return{x:()=>{const i=_t([r],s.rank);let l=xm(n,r,o,!a);return null!=i&&(l=it(l,i)),l}}}},I1={kernelName:Qa,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:a}=e,i=s??[1,1];k(vs(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[l,u]=t;return k(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),k(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),k(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),k(St(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),null!=a&&k(Te(o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`),{x:()=>Hf(l.shape,n,u,r,o,s,a),filter:()=>Uf(l,n,u.shape,r,o,s,a)}}},S1={kernelName:ei,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,o={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>L.runKernel(zu,o,e),filter:()=>L.runKernel(Vu,a,e)}}},T1={kernelName:bo,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>L.runKernel(Bu,s)}}},$1={kernelName:wo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=V(Pn(Et(pt(e))),2/Math.sqrt(Math.PI));return{x:()=>V(n,s)}}},_1={kernelName:vo,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(n,e)}}},E1={kernelName:ni,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>j(n,e.shape)}}},D1={kernelName:No,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(n,Pn(e))}}},A1={kernelName:Co,gradFunc:n=>({x:()=>Ye(n)})},R1={kernelName:ko,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=qe(e.shape,s.shape);return{a:()=>{const i=Ae(n,Ie(s,"float32")),l=Ft(e.shape,r);return l.length>0?j(Re(i,l),e.shape):i},b:()=>{let i=V(n,Ie(e,"float32"));const l=Ft(s.shape,r);l.length>0&&(i=j(Re(i,l),s.shape));const u=pt(s);return Et(Ae(i,Ie(u,"float32")))}}}},bm=O({rsqrt_:function O1(n){const e={x:T(n,"x","rsqrt")};return L.runKernel(Vo,e)}}),F1={kernelName:si,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,o,a,i]=t,l=i??Oe(1),u=Ft(o.shape,r.shape),c=[];if(1===o.rank){for(let w=0;w<r.shape.length-1;++w)c.push(r.shape[w]);c.push(1)}const h=Se(r,o),d=V(n,l),p=bm(de(a,Oe(s))),f=V(V(V(p,p),p),Oe(-.5));return{x:()=>j(V(V(n,1===o.rank?Ir(j(p,[1,1,1,o.shape[0]]),c):p),l),r.shape),mean:()=>{let w=V(V(p,Oe(-1)),d);return 1===o.rank&&(w=Re(w,u)),j(w,o.shape)},variance:()=>{let w=V(V(f,h),d);return 1===o.rank&&(w=Re(w,u)),j(w,o.shape)},scale:()=>{const w=V(h,p);let N=V(n,w);return 1===o.rank&&(N=Re(N,u)),j(N,o.shape)},offset:()=>{let w=n;return 1===o.rank&&(w=Re(w,u)),j(w,o.shape)}}}},wm=O({unsortedSegmentSum_:function P1(n,t,e){const s=T(n,"x","unsortedSegmentSum"),r=T(t,"segmentIds","unsortedSegmentSum","int32");return k(Te(e),()=>"numSegments must be of dtype int"),L.runKernel(zi,{x:s,segmentIds:r},{numSegments:e})}}),L1={kernelName:ri,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:o}=e,a=$e(o,s.shape)[0];return{x:()=>{const l=s.shape,u=r.size,c=l.slice(0,a),h=c.length,d=l.slice(o,l.length).slice(1),p=d.length,f=vm(0,h),m=vm(h+1,h+1+p),g=Nm([c,[u],d]),y=j(n,g),x=j(r,[u]),C=Nm([[h],f,m]),w=it(y,C);let N=wm(w,x,s.shape[a]);const S=Sr(C);return N=it(N,S),N},indices:()=>r}}};function vm(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function Nm(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}const M1={kernelName:Io,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>Ye(e),b:()=>Ye(s)}}},z1={kernelName:ai,gradFunc:n=>({x:()=>Ie(n,"float32")})},V1={kernelName:So,gradFunc:n=>({x:()=>Ye(n)})},B1={kernelName:To,gradFunc:n=>({x:()=>Ye(n)})},W1={kernelName:$o,gradFunc:n=>({x:()=>Ye(n)})},G1={kernelName:ii,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,o=Xn(s,0);return{x:()=>Tn(o,n,V(n,r))}}},U1={kernelName:Eo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ae(n,de(e,1))}}},H1={kernelName:_o,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ae(n,Ie(e,"float32"))}}},j1={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const a=Pn(s);return Se(n,V(Re(n,r,!0),a))}}}},q1=O({localResponseNormalizationBackprop_:function K1(n,t,e,s=5,r=1,o=1,a=.5){return L.runKernel(Ku,{x:n,y:t,dy:e},{depthRadius:s,bias:r,alpha:o,beta:a})}}),X1={kernelName:pi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:o,bias:a,alpha:i,beta:l}=e;return{x:()=>q1(s,r,n,o,a,i,l)}}};function Cm(n,t,e,s){return t.rank<e.rank&&(t=j(t,$t(t.shape,s))),n.rank<e.rank&&(n=j(n,$t(n.shape,s))),{x:()=>V(n,Ie(Hs(e,t),n.dtype))}}const km={kernelName:fi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,o=t[0],l=Cm(n,t[1],o,$e(r,o.shape));return{x:()=>l.x()}}},Bh=O({less_:function Z1(n,t){let e=T(n,"a","less"),s=T(t,"b","less");return[e,s]=It(e,s),qe(e.shape,s.shape),L.runKernel(li,{a:e,b:s})}}),Y1={kernelName:Do,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>V(n,Ie(js(e,s),"float32")),b:()=>V(n,Ie(Bh(e,s),"float32"))}}},Q1=O({maxPool3dGrad_:function J1(n,t,e,s,r,o=[1,1,1],a,i){const l=T(n,"dy","maxPool3dGrad"),u=T(t,"input","maxPool3dGrad"),c=T(e,"output","maxPool3dGrad");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=j(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=j(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=j(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),k(5===h.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`),k(5===d.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),k(5===p.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),k(St(r,o),()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`),null!=i&&k(Te(a),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const y=L.runKernel(Xu,{dy:h,input:d,output:p},{filterSize:s,strides:r,dilations:o,pad:a,dimRoundingMode:i});return f?j(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),ek={kernelName:gi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:a,dilations:i,pad:l,dimRoundingMode:u}=e,c=i??[1,1,1];return{x:()=>Q1(n,s,r,o,a,c,l,u)}}},nk=O({maxPoolGrad_:function tk(n,t,e,s,r,o,a){const i=T(n,"dy","maxPoolGrad"),l=T(t,"input","maxPoolGrad"),u=T(e,"output","maxPoolGrad");return k(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),k(4===i.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),k(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),null!=a&&k(Te(o),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${o}.`),L.runKernel(qu,{dy:i,input:l,output:u},{filterSize:s,strides:r,pad:o,dimRoundingMode:a})}}),sk={kernelName:mi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:a,pad:i}=e;return{x:()=>nk(n,s,r,o,a,i)}}},rk={kernelName:yi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,o=$e(r,s.shape),l=U(Wt(s.shape,o)[1]);return{x:()=>{const c=s.shape.slice();o.forEach(p=>{c[p]=1});const h=j(n,c);return Ae(V(h,Ns(s.shape,"float32")),l)}}}},ok={kernelName:xi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[o,a]=t,l=Cm(n,a,o,$e(r,o.shape));return{x:()=>l.x()}}},ak={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>V(n,Ie(Er(e,s),"float32")),b:()=>V(n,Ie(Xn(e,s),"float32"))}}},ik={kernelName:bi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(a=>a[0]);return{x:()=>at(n,o,s.shape)}}},lk={kernelName:Ro,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=qe(e.shape,s.shape);return{a:()=>{const i=Ft(e.shape,r);return i.length>0?j(Re(n,i),e.shape):n},b:()=>{const i=V(n,Et(ll(Ae(e,s)))),l=Ft(s.shape,r);return l.length>0?j(Re(i,l),s.shape):i}}}},uk={kernelName:Oo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=qe(e.shape,s.shape);return{a:()=>{const i=V(n,Ie(s,"float32")),l=Ft(e.shape,r);return l.length>0?j(Re(i,l),e.shape):i},b:()=>{const i=V(n,Ie(e,"float32")),l=Ft(s.shape,r);return l.length>0?j(Re(i,l),s.shape):i}}}},ck={kernelName:wi,gradFunc:n=>({x:()=>Et(n)})},hk={kernelName:Ci,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Pt(e.shape,"float32")}}},dk={kernelName:Ni,gradFunc:n=>({x:()=>Ye(n)})},pk={kernelName:ki,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return $r(n,s).map(o=>()=>o)}},Im={kernelName:Ii,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(a=>a[0]);return{x:()=>at(n,o,s.shape)}}},fk={kernelName:Fo,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,o=e,a=s,i=qe(o.shape,a.shape);return{a:()=>{const c=Ie(a,"float32");let h=V(n,V(c,Xs(o,Se(c,Oe(1)))));const d=Ft(o.shape,i);return d.length>0&&(h=Re(h,d)),j(h,o.shape)},b:()=>{const c=Xn(o,0),h=Tn(c,Cn(o),Ye(o));let d=V(n,V(r,h));const p=Ft(a.shape,i);return p.length>0&&(d=Re(d,p)),j(d,a.shape)}}}},mk={kernelName:Si,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=Xn(e,0);return{x:()=>Tn(r,n,V(n,s)),alpha:()=>{let o=Tn(r,Ye(n),V(n,e));const a=Ft(s.shape,n.shape);return a.length>0&&(o=Re(o,a)),j(o,s.shape)}}}},gk={kernelName:xo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=qe(e.shape,s.shape);return{a:()=>{const i=Ae(n,Ie(s,"float32")),l=Ft(e.shape,r);return l.length>0?j(Re(i,l),e.shape):i},b:()=>{let i=V(n,Ie(e,"float32"));const l=Ft(s.shape,r);l.length>0&&(i=j(Re(i,l),s.shape));const u=pt(s);return Et(Ae(i,Ie(u,"float32")))}}}},yk={kernelName:Po,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ae(n,Et(pt(e)))}}},xk={kernelName:Mo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=V(Er(e,6),ca(e));return{x:()=>V(n,Ie(s,"float32"))}}},bk={kernelName:Lo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(n,Ie(ca(e),"float32"))}}},wk={kernelName:Ti,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>j(n,e.shape)}}},vk={kernelName:_i,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>L.runKernel(sc,r,e)}}},Nk={kernelName:$i,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>L.runKernel(nc,r,e)}}},Ck={kernelName:Ei,gradFunc:(n,t,e)=>{const{dims:s}=e,r=$e(s,n.shape);return{x:()=>Ks(n,r)}}},kk={kernelName:zo,gradFunc:n=>({x:()=>Ye(n)})},Ik={kernelName:Vo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Et(Ae(n,V(Xs(e,1.5),2)))}}},Wh=O({logicalNot_:function Sk(n){const e={x:T(n,"x","logicalNot","bool")};return L.runKernel(hi,e)}}),Tk={kernelName:Di,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>Ie(Ye(e),"float32"),t:()=>V(n,Ie(e,n.dtype)),e:()=>V(n,Ie(Wh(e),n.dtype))}}},$k={kernelName:Bo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Xn(e,Oe(0)),r=Oe(Nl),o=Oe(Cl),a=V(n,o),i=V(V(n,r),Pn(Ie(e,"float32")));return Tn(s,a,i)}}}},_k={kernelName:Ho,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(n,V(e,Se(Oe(1),e)))}}},Ek={kernelName:Uo,gradFunc:n=>({x:()=>Ye(n)})},Gh=O({cos_:function Dk(n){const e={x:T(n,"x","cos")};return L.runKernel(go,e)}}),Ak={kernelName:Wo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(Gh(Ie(e,"float32")),n)}}},Sm=O({cosh_:function Rk(n){const e={x:T(n,"x","cosh")};return L.runKernel(yo,e)}}),Ok={kernelName:Go,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(Sm(Ie(e,"float32")),n)}}},Fk={kernelName:Ai,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:o}=e,a=s.shape,[i,l]=sl(s,r,o),u=[];for(let c=0;c<n.rank;c++)u.push([i[c],a[c]-i[c]-l[c]]);return{x:()=>Xc(n,u)}}},Pk={kernelName:Pi,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,a=V(n,s);return{logits:()=>Se(a,V(Re(a,[r],!0),s))}}},Lk={kernelName:jo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(n,ua(e))}}},Uh=O({batchToSpaceND_:function Mk(n,t,e){const s=T(n,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);return k(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),k(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),k(s.shape[0]%r==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`),L.runKernel(ja,{x:s},{blockShape:t,crops:e})}}),Tm={kernelName:Oi,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>Uh(n,s,r)}}},$m={kernelName:Fi,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>Kt(n,s)}}},Qk=[mm,VC,BC,WC,GC,UC,HC,jC,KC,qC,XC,ZC,QC,n1,s1,o1,a1,i1,l1,u1,c1,h1,p1,d1,x1,w1,N1,k1,I1,S1,gk,T1,$1,_1,E1,D1,R1,A1,F1,L1,M1,z1,V1,B1,W1,G1,U1,H1,j1,X1,km,km,Y1,ek,sk,rk,ok,ak,ik,lk,uk,ck,hk,dk,pk,Im,Im,fk,mk,yk,xk,bk,wk,vk,Nk,Ck,kk,Ik,Tk,$k,_k,Ek,Ak,Ok,Fk,Pk,Lk,Tm,Tm,$m,$m,{kernelName:Ko,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ae(n,V(nn(Ie(e,"float32")),2))}}},{kernelName:qo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=Oe(2);return{a:()=>V(n,V(r,Se(e,s))),b:()=>V(n,V(r,Se(s,e)))}}},{kernelName:rc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(n,V(Ie(e,"float32"),2))}}},{kernelName:Qo,gradFunc:n=>({x:()=>Ye(n)})},{kernelName:Xo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=qe(e.shape,s.shape);return{a:()=>{let i=n;const l=Ft(e.shape,r);return l.length>0&&(i=Re(i,l)),j(i,e.shape)},b:()=>{let i=n;const l=Ft(s.shape,r);return l.length>0&&(i=Re(i,l)),j(Et(i),s.shape)}}}},{kernelName:Ri,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:o}=e;$e(o,s.shape).forEach(u=>{r[u]=1});const i=j(n,r),l=V(i,Ns(s.shape,"float32"));return{x:()=>l}}},{kernelName:Zo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ae(n,pt(Gh(e)))}}},{kernelName:Yo,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>V(Se(Oe(1),pt(e)),n)}}},{kernelName:Jo,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let a=Ye(s);if(1===s.rank)for(let i=0;i<r[0];++i)a=de(a,at(n,[i*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)a=de(a,at(n,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)a=de(a,at(n,[i*s.shape[0],l*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let u=0;u<r[2];++u)for(let c=0;c<r[3];++c)a=de(a,at(n,[i*s.shape[0],l*s.shape[1],u*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return a}}}},{kernelName:Li,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,o=Sr(r);return{x:()=>it(n,o)}}},{kernelName:Mi,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>qs(n,r)}}},{kernelName:zi,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>function Yk(n,t){const e=ls(t,Ye(t)),s=Uc(n,e);let r=js(t,Oe(0,"int32"));const o=s.rank-r.rank;for(let i=0;i<o;++i)r=Fn(r,i+1);r=is(r,Ns(s.shape,"bool"));const a=Ye(s);return Tn(r,s,a)}(n,e)}}},{kernelName:Vi,gradFunc:n=>({x:()=>Ye(n)})}];for(const n of Qk)s0(n);W.prototype.abs=function(){return this.throwIfDisposed(),jt(this)};const tI=O({acos_:function eI(n){const e={x:T(n,"x","acos")};return L.runKernel(ro,e)}});W.prototype.acos=function(){return this.throwIfDisposed(),tI(this)};const sI=O({acosh_:function nI(n){const e={x:T(n,"x","acosh")};return L.runKernel(oo,e)}});W.prototype.acosh=function(){return this.throwIfDisposed(),sI(this)};const _m=O({mod_:function rI(n,t){let e=T(n,"a","mod"),s=T(t,"b","mod");return[e,s]=It(e,s),L.runKernel(Ro,{a:e,b:s})}}),fI=O({addStrict_:function oI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","addStrict"),s=T(t,"b","addStrict");return Le(e.shape,s.shape,"Error in addStrict: "),de(e,s)}}),mI=O({divStrict_:function uI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","div"),s=T(t,"b","div");return Le(e.shape,s.shape,"Error in divideStrict: "),Ae(e,s)}}),gI=O({maximumStrict_:function dI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","maximumStrict"),s=T(t,"b","maximumStrict");return Le(e.shape,s.shape,"Error in maximumStrict: "),ls(e,s)}}),yI=O({minimumStrict_:function hI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","minimumStrict"),s=T(t,"b","minimumStrict");return Le(e.shape,s.shape,"Error in minimumStrict: "),la(e,s)}}),xI=O({modStrict_:function cI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","modStrict"),s=T(t,"b","modStrict");return Le(e.shape,s.shape,"Error in modStrict: "),_m(e,s)}}),bI=O({mulStrict_:function lI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","mul"),s=T(t,"b","mul");return Le(e.shape,s.shape,"Error in multiplyStrict: "),V(e,s)}}),wI=O({powStrict_:function iI(n,t){return Vt("strict variants of ops have been deprecated and will be removed in future"),Le(n.shape,t.shape,"Error in powStrict: "),Xs(n,t)}}),vI=O({squaredDifferenceStrict_:function pI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","squaredDifferenceStrict"),s=T(t,"b","squaredDifferenceStrict");return Le(e.shape,s.shape,"Error in squaredDifferenceStrict: "),yh(e,s)}}),NI=O({subStrict_:function aI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","subStrict"),s=T(t,"b","subStrict");return Le(e.shape,s.shape,"Error in subStrict: "),Se(e,s)}});W.prototype.addStrict=function(n){return this.throwIfDisposed(),fI(this,n)},W.prototype.add=function(n){return this.throwIfDisposed(),de(this,n)},W.prototype.all=function(n,t){return this.throwIfDisposed(),Tf(this,n,t)},W.prototype.any=function(n,t){return this.throwIfDisposed(),Lc(this,n,t)},W.prototype.argMax=function(n){return this.throwIfDisposed(),Mc(this,n)};const kI=O({argMin_:function CI(n,t=0){const s={x:T(n,"x","argMin")};return L.runKernel(Wa,s,{axis:t})}});W.prototype.argMin=function(n){return this.throwIfDisposed(),kI(this,n)},W.prototype.asScalar=function(){return this.throwIfDisposed(),k(1===this.size,()=>"The array must have only 1 element."),j(this,[])},W.prototype.asType=function(n){return this.throwIfDisposed(),Ie(this,n)},W.prototype.as1D=function(){return this.throwIfDisposed(),j(this,[this.size])},W.prototype.as2D=function(n,t){return this.throwIfDisposed(),j(this,[n,t])},W.prototype.as3D=function(n,t,e){return this.throwIfDisposed(),j(this,[n,t,e])},W.prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),j(this,[n,t,e,s])},W.prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),j(this,[n,t,e,s,r])};const SI=O({asin_:function II(n){const e={x:T(n,"x","asin")};return L.runKernel(ao,e)}});W.prototype.asin=function(){return this.throwIfDisposed(),SI(this)};const $I=O({asinh_:function TI(n){const e={x:T(n,"x","asinh")};return L.runKernel(lo,e)}});W.prototype.asinh=function(){return this.throwIfDisposed(),$I(this)};const EI=O({atan_:function _I(n){const e={x:T(n,"x","atan")};return L.runKernel(uo,e)}});W.prototype.atan=function(){return this.throwIfDisposed(),EI(this)};const AI=O({atan2_:function DI(n,t){let e=T(n,"a","atan2"),s=T(t,"b","atan2");return[e,s]=It(e,s),L.runKernel(ho,{a:e,b:s})}});W.prototype.atan2=function(n){return this.throwIfDisposed(),AI(this,n)};const OI=O({atanh_:function RI(n){const e={x:T(n,"x","atanh")};return L.runKernel(co,e)}});W.prototype.atanh=function(){return this.throwIfDisposed(),OI(this)},W.prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),Bc(this,n,t,e,s)},W.prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),Uh(this,n,t)},W.prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),al(this,n,t,e,s,r)},W.prototype.broadcastTo=function(n){return this.throwIfDisposed(),rh(this,n)},W.prototype.cast=function(n){return this.throwIfDisposed(),Ie(this,n)};const PI=O({ceil_:function FI(n){const e={x:T(n,"x","ceil")};return L.runKernel(fo,e)}});W.prototype.ceil=function(){return this.throwIfDisposed(),PI(this)},W.prototype.clipByValue=function(n,t){return this.throwIfDisposed(),mn(this,n,t)},W.prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof W&&(n=[n]),Kt([this,...n],t)},W.prototype.conv1d=function(n,t,e,s,r,o){return this.throwIfDisposed(),$f(this,n,t,e,s,r,o)},W.prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),_f(this,n,t,e,s,r)},W.prototype.conv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Us(this,n,t,e,s,r,o)},W.prototype.cos=function(){return this.throwIfDisposed(),Gh(this)},W.prototype.cosh=function(){return this.throwIfDisposed(),Sm(this)},W.prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),xm(this,n,t,e)};const MI=O({depthToSpace_:function LI(n,t,e="NHWC"){const s=T(n,"x","depthToSpace"),r="NHWC"===e?s.shape[1]:s.shape[2],o="NHWC"===e?s.shape[2]:s.shape[3],a="NHWC"===e?s.shape[3]:s.shape[1];return k(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`),k(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${t} for depthToSpace with input shape\n        ${s.shape}`),k(a%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${s.shape}`),L.runKernel(Pu,{x:s},{blockSize:t,dataFormat:e})}});W.prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),MI(this,n,t)},W.prototype.depthwiseConv2D=function(n,t,e,s,r,o){return Vt("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),aa(this,n,t,e,s,r,o)},W.prototype.depthwiseConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),aa(this,n,t,e,s,r,o)};const VI=O({dilation2d_:function zI(n,t,e,s,r=[1,1],o="NHWC"){const a=T(n,"x","dilation2d"),i=T(t,"filter","dilation2d");k(3===a.rank||4===a.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),k(3===i.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),k("NHWC"===o,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=a,u=!1;3===a.rank&&(l=j(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const d=L.runKernel(ei,{x:l,filter:i},{strides:e,pad:s,dilations:r});return u?j(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});W.prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),VI(this,n,t,e,s,r)};const WI=O({divNoNan_:function BI(n,t){let e=T(n,"a","div"),s=T(t,"b","div");[e,s]=It(e,s);const r=Ae(e,s),o=Ye(r),a=Hs(s,o);return Tn(a,o,r)}});W.prototype.divNoNan=function(n){return this.throwIfDisposed(),WI(this,n)},W.prototype.divStrict=function(n){return this.throwIfDisposed(),mI(this,n)},W.prototype.div=function(n){return this.throwIfDisposed(),Ae(this,n)};const UI=O({dot_:function GI(n,t){const e=T(n,"t1","dot"),s=T(t,"t2","dot");k(!(1!==e.rank&&2!==e.rank||1!==s.rank&&2!==s.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=1===e.rank?e.size:e.shape[1],o=1===s.rank?s.size:s.shape[0];if(k(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),1===e.rank&&1===s.rank){const a=j(e,[1,-1]),i=j(s,[-1,1]),l=tt(a,i);return j(l,[])}if(1===e.rank&&2===s.rank){const a=j(e,[1,-1]),i=j(s,[s.shape[0],s.shape[1]]),l=tt(a,i);return j(l,[l.size])}if(2===e.rank&&1===s.rank){const a=j(s,[-1,1]),i=tt(e,a);return j(i,[i.size])}{const a=j(s,[s.shape[0],s.shape[1]]);return tt(e,a)}}});W.prototype.dot=function(n){return this.throwIfDisposed(),UI(this,n)},W.prototype.elu=function(){return this.throwIfDisposed(),il(this)};const YI=O({equalStrict_:function KI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","equalStrict"),s=T(t,"b","equalStrict");return Le(e.shape,s.shape,"Error in equalStrict: "),Hs(e,s)}}),JI=O({greaterEqualStrict_:function ZI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","greaterEqualStrict"),s=T(t,"b","greaterEqualStrict");return Le(e.shape,s.shape,"Error in greaterEqualStrict: "),js(e,s)}}),QI=O({greaterStrict_:function XI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","greaterStrict"),s=T(t,"b","greaterStrict");return Le(e.shape,s.shape,"Error in greaterStrict: "),Xn(e,s)}}),eS=O({lessEqualStrict_:function qI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","lessEqualStrict"),s=T(t,"b","lessEqualStrict");return Le(e.shape,s.shape,"Error in lessEqualStrict: "),Er(e,s)}}),tS=O({lessStrict_:function jI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","lessStrict"),s=T(t,"b","lessStrict");return Le(e.shape,s.shape,"Error in lessStrict: "),Bh(e,s)}}),nS=O({notEqualStrict_:function HI(n,t){Vt("strict variants of ops have been deprecated and will be removed in future");const e=T(n,"a","notEqualStrict"),s=T(t,"b","notEqualStrict");return Le(e.shape,s.shape,"Error in notEqualStrict: "),Tr(e,s)}});W.prototype.equalStrict=function(n){return this.throwIfDisposed(),YI(this,n)},W.prototype.equal=function(n){return this.throwIfDisposed(),Hs(this,n)};const rS=O({erf_:function sS(n){let t=T(n,"x","erf");return k("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Ie(t,"float32")),L.runKernel(wo,{x:t})}});W.prototype.erf=function(){return this.throwIfDisposed(),rS(this)},W.prototype.exp=function(){return this.throwIfDisposed(),Pn(this)},W.prototype.expandDims=function(n){return this.throwIfDisposed(),Fn(this,n)};const aS=O({expm1_:function oS(n){const e={x:T(n,"x","expm1")};return L.runKernel(No,e)}});W.prototype.expm1=function(){return this.throwIfDisposed(),aS(this)},W.prototype.fft=function(){return this.throwIfDisposed(),ah(this)},W.prototype.flatten=function(){return this.throwIfDisposed(),j(this,[this.size])},W.prototype.floor=function(){return this.throwIfDisposed(),ll(this)},W.prototype.floorDiv=function(n){return this.throwIfDisposed(),Ef(this,n)},W.prototype.gather=function(n,t){return this.throwIfDisposed(),Uc(this,n,t)},W.prototype.greaterEqualStrict=function(n){return this.throwIfDisposed(),JI(this,n)},W.prototype.greaterEqual=function(n){return this.throwIfDisposed(),js(this,n)},W.prototype.greaterStrict=function(n){return this.throwIfDisposed(),QI(this,n)},W.prototype.greater=function(n){return this.throwIfDisposed(),Xn(this,n)},W.prototype.ifft=function(){return this.throwIfDisposed(),pl(this)},W.prototype.irfft=function(){return this.throwIfDisposed(),Wf(this)};const lS=O({isFinite_:function iS(n){const e={x:T(n,"x","isFinite")};return L.runKernel(So,e)}});W.prototype.isFinite=function(){return this.throwIfDisposed(),lS(this)};const cS=O({isInf_:function uS(n){const e={x:T(n,"x","isInf")};return L.runKernel(To,e)}});W.prototype.isInf=function(){return this.throwIfDisposed(),cS(this)};const dS=O({isNaN_:function hS(n){const e={x:T(n,"x","isNaN")};return L.runKernel($o,e)}});W.prototype.isNaN=function(){return this.throwIfDisposed(),dS(this)},W.prototype.leakyRelu=function(n){return this.throwIfDisposed(),Hc(this,n)},W.prototype.lessEqualStrict=function(n){return this.throwIfDisposed(),eS(this,n)},W.prototype.lessEqual=function(n){return this.throwIfDisposed(),Er(this,n)},W.prototype.lessStrict=function(n){return this.throwIfDisposed(),tS(this,n)},W.prototype.less=function(n){return this.throwIfDisposed(),Bh(this,n)};const fS=O({localResponseNormalization_:function pS(n,t=5,e=1,s=1,r=.5){const o=T(n,"x","localResponseNormalization");k(4===o.rank||3===o.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${o.rank}.`),k(Te(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=o,i=!1;3===o.rank&&(i=!0,a=j(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c=L.runKernel(pi,{x:a},{depthRadius:t,bias:e,alpha:s,beta:r});return i?j(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});W.prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),fS(this,n,t,e,s)};const gS=O({logSigmoid_:function mS(n){const t=T(n,"x","logSigmoid");return rs(s=>({value:Et(dl(Et(s))),gradFunc:a=>V(a,ua(Et(s)))}))(t)}});W.prototype.logSigmoid=function(){return this.throwIfDisposed(),gS(this)},W.prototype.logSoftmax=function(n){return this.throwIfDisposed(),Af(this,n)},W.prototype.logSumExp=function(n,t){return this.throwIfDisposed(),sm(this,n,t)},W.prototype.log=function(){return this.throwIfDisposed(),Cn(this)},W.prototype.log1p=function(){return this.throwIfDisposed(),nm(this)},W.prototype.logicalAnd=function(n){return this.throwIfDisposed(),is(this,n)},W.prototype.logicalNot=function(){return this.throwIfDisposed(),Wh(this)};const Em=O({logicalOr_:function yS(n,t){const e=T(n,"a","logicalOr","bool"),s=T(t,"b","logicalOr","bool");return qe(e.shape,s.shape),L.runKernel(di,{a:e,b:s})}});W.prototype.logicalOr=function(n){return this.throwIfDisposed(),Em(this,n)};const bS=O({logicalXor_:function xS(n,t){const e=T(n,"a","logicalXor","bool"),s=T(t,"b","logicalXor","bool");return qe(e.shape,s.shape),is(Em(n,t),Wh(is(n,t)))}});W.prototype.logicalXor=function(n){return this.throwIfDisposed(),bS(this,n)},W.prototype.matMul=function(n,t,e){return this.throwIfDisposed(),tt(this,n,t,e)},W.prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),jc(this,n,t,e,s)},W.prototype.max=function(n,t){return this.throwIfDisposed(),Ln(this,n,t)},W.prototype.maximumStrict=function(n){return this.throwIfDisposed(),gI(this,n)},W.prototype.maximum=function(n){return this.throwIfDisposed(),ls(this,n)},W.prototype.mean=function(n,t){return this.throwIfDisposed(),Tt(this,n,t)},W.prototype.min=function(n,t){return this.throwIfDisposed(),ul(this,n,t)},W.prototype.minimumStrict=function(n){return this.throwIfDisposed(),yI(this,n)},W.prototype.minimum=function(n){return this.throwIfDisposed(),la(this,n)};const vS=O({mirrorPad_:function wS(n,t,e){k("reflect"===e||"symmetric"===e,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=T(n,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");k(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r="reflect"===e?1:0;for(let i=0;i<s.rank;i++)k(2===t[i].length,()=>"Invalid number of paddings. Must be length of 2 each."),k(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);return L.runKernel(bi,{x:s},{paddings:t,mode:e})}});W.prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),vS(this,n,t)},W.prototype.modStrict=function(n){return this.throwIfDisposed(),xI(this,n)},W.prototype.mod=function(n){return this.throwIfDisposed(),_m(this,n)},W.prototype.mulStrict=function(n){return this.throwIfDisposed(),bI(this,n)},W.prototype.mul=function(n){return this.throwIfDisposed(),V(this,n)},W.prototype.neg=function(){return this.throwIfDisposed(),Et(this)},W.prototype.norm=function(n,t,e){return this.throwIfDisposed(),gh(this,n,t,e)},W.prototype.notEqualStrict=function(n){return this.throwIfDisposed(),nS(this,n)},W.prototype.notEqual=function(n){return this.throwIfDisposed(),Tr(this,n)},W.prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),Of(this,n,t,e)},W.prototype.onesLike=function(){return this.throwIfDisposed(),kn(this)},W.prototype.pad=function(n,t){return this.throwIfDisposed(),Xc(this,n,t)};const IS=O({pool_:function NS(n,t,e,s,r,o){null==r&&(r=[1,1]),null==o&&(o=1),0===s&&(s="valid");const a=T(n,"x","maxPool");let i=a,l=!1;3===a.rank&&(l=!0,i=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(St(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const u=Nn(i.shape,t,o,r,s),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===s?function kS(n,t){const s=n.map((a,i)=>a+(a-1)*(t[i]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,i)=>a-r[i]);return s.map((a,i)=>[r[i],o[i]])}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function CS(n,t,e){const s=e.map(c=>c[0]),r=e.map(c=>c[1]),o=n.concat(s,r),a=t.map((c,h)=>(c-o[h]%c)%c),i=r.map((c,h)=>c+a[h]),l=t.map((c,h)=>[s[h],i[h]]),u=t.map((c,h)=>[0,a[h]]);return[l,u]}([u.inHeight,u.inWidth],c,h),m=d?s:"valid",g=d?i:Vh(i,c,p),x=("avg"===e?()=>Bc(g,t,o,m):()=>jc(g,t,o,m))(),C=d?x:Uh(x,c,f);return l?j(C,[C.shape[1],C.shape[2],C.shape[3]]):C}});W.prototype.pool=function(n,t,e,s,r){return this.throwIfDisposed(),IS(this,n,t,e,s,r)},W.prototype.powStrict=function(n){return this.throwIfDisposed(),wI(this,n)},W.prototype.pow=function(n){return this.throwIfDisposed(),Xs(this,n)},W.prototype.prelu=function(n){return this.throwIfDisposed(),Zc(this,n)};const TS=O({prod_:function SS(n,t=null,e=!1){let s=T(n,"x","prod");return"bool"===s.dtype&&(s=Ie(s,"int32")),L.runKernel(Qu,{x:s},{axis:t,keepDims:e})}});W.prototype.prod=function(n,t){return this.throwIfDisposed(),TS(this,n,t)};const _S=O({reciprocal_:function $S(n){const e={x:T(n,"x","reciprocal")};return L.runKernel(Po,e)}});W.prototype.reciprocal=function(){return this.throwIfDisposed(),_S(this)},W.prototype.relu=function(){return this.throwIfDisposed(),Cs(this)},W.prototype.relu6=function(){return this.throwIfDisposed(),Gf(this)},W.prototype.reshapeAs=function(n){return this.throwIfDisposed(),j(this,n.shape)},W.prototype.reshape=function(n){return this.throwIfDisposed(),j(this,n)},W.prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),Yf(this,n,t,e)},W.prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),Jf(this,n,t,e)},W.prototype.reverse=function(n){return this.throwIfDisposed(),Ks(this,n)},W.prototype.rfft=function(){return this.throwIfDisposed(),ih(this)};const DS=O({round_:function ES(n){const e={x:T(n,"x","round")};return L.runKernel(zo,e)}});W.prototype.round=function(){return this.throwIfDisposed(),DS(this)},W.prototype.rsqrt=function(){return this.throwIfDisposed(),bm(this)},W.prototype.selu=function(){return this.throwIfDisposed(),Pf(this)},W.prototype.separableConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Lf(this,n,t,e,s,r,o)},W.prototype.sigmoid=function(){return this.throwIfDisposed(),ua(this)};const RS=O({sign_:function AS(n){const e={x:T(n,"x","sign")};return L.runKernel(Uo,e)}});W.prototype.sign=function(){return this.throwIfDisposed(),RS(this)},W.prototype.sin=function(){return this.throwIfDisposed(),gm(this)},W.prototype.sinh=function(){return this.throwIfDisposed(),ym(this)},W.prototype.slice=function(n,t){return this.throwIfDisposed(),at(this,n,t)},W.prototype.softmax=function(n){return this.throwIfDisposed(),th(this,n)},W.prototype.softplus=function(){return this.throwIfDisposed(),dl(this)},W.prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Vh(this,n,t)},W.prototype.split=function(n,t){return this.throwIfDisposed(),In(this,n,t)},W.prototype.sqrt=function(){return this.throwIfDisposed(),nn(this)},W.prototype.square=function(){return this.throwIfDisposed(),pt(this)},W.prototype.squaredDifference=function(n){return this.throwIfDisposed(),yh(this,n)},W.prototype.squaredDifferenceStrict=function(n){return this.throwIfDisposed(),vI(this,n)},W.prototype.squeeze=function(n){return this.throwIfDisposed(),nh(this,n)},W.prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof W?[this,n]:[this,...n];return qs(e,t)},W.prototype.step=function(n){return this.throwIfDisposed(),ca(this,n)};const FS=O({stridedSlice_:function OS(n,t,e,s,r=0,o=0,a=0,i=0,l=0){const c={x:T(n,"x","stridedSlice")};return L.runKernel(oc,c,{begin:t,end:e,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l})}});W.prototype.stridedSlice=function(n,t,e,s,r,o,a,i){return this.throwIfDisposed(),FS(this,n,t,e,s,r,o,a,i)},W.prototype.subStrict=function(n){return this.throwIfDisposed(),NI(this,n)},W.prototype.sub=function(n){return this.throwIfDisposed(),Se(this,n)},W.prototype.sum=function(n,t){return this.throwIfDisposed(),Re(this,n,t)};const LS=O({tan_:function PS(n){const e={x:T(n,"x","tan")};return L.runKernel(Zo,e)}});W.prototype.tan=function(){return this.throwIfDisposed(),LS(this)},W.prototype.tanh=function(){return this.throwIfDisposed(),zf(this)},W.prototype.tile=function(n){return this.throwIfDisposed(),Ir(this,n)},W.prototype.toBool=function(){return this.throwIfDisposed(),Ie(this,"bool")},W.prototype.toFloat=function(){return this.throwIfDisposed(),Ie(this,"float32")},W.prototype.toInt=function(){return this.throwIfDisposed(),Ie(this,"int32")};const zS=O({topk_:function MS(n,t=1,e=!0){const s=T(n,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const o={x:s},a={k:t,sorted:e},[i,l]=L.runKernel(ac,o,a);return{values:i,indices:l}}});W.prototype.topk=function(n,t){return this.throwIfDisposed(),zS(this,n,t)},W.prototype.transpose=function(n){return this.throwIfDisposed(),it(this,n)};const BS=O({unique_:function VS(n,t=0){const e=T(n,"x","unique","string_or_numeric");k(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[o,a]=L.runKernel(ic,s,r);return{values:o,indices:a}}});let kl;function Lt(){return null==kl&&(kl=function iw(){return L.backend}().epsilon()),kl}W.prototype.unique=function(n){return this.throwIfDisposed(),BS(this,n)},W.prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),wm(this,n,t)},W.prototype.unstack=function(n){return this.throwIfDisposed(),$r(this,n)},W.prototype.where=function(n,t){return this.throwIfDisposed(),Tn(n,this,t)},W.prototype.zerosLike=function(){return this.throwIfDisposed(),Ye(this)};class Zn extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Zn.prototype)}}class $n extends Error{constructor(t){super(t),Object.setPrototypeOf(this,$n.prototype)}}class F extends Error{constructor(t){super(t),Object.setPrototypeOf(this,F.prototype)}}class Ve extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ve.prototype)}}class Hh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Hh.prototype)}}function Js(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}{const e=new Array(t);return e.fill(n),e}}function gn(n,t){if(!n)throw new Hh(t)}function Am(n,t){let e=0;for(const s of n)s===t&&e++;return e}function an(n){return 1===n.length?n[0]:n}function ft(n){return Array.isArray(n)?n:[n]}function ds(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Qs(n){return n.length<=1||-1===n.indexOf("_")?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}Error;let _n={};function jh(n){if(null==n)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function Kh(n){if(null!=n&&"object"==typeof n)if(Array.isArray(n))n.forEach(t=>Kh(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];null!=s&&"object"==typeof s&&(Array.isArray(s)||"ndarray"!==s.type||"number"!=typeof s.value?Kh(s):n[e]=s.value)}}}function ma(n,t={},e={},s="object",r=!1){if("string"==typeof n){const o=n;let a;if(o in e)a=e[o];else if(o in _n)a=_n[o];else if(a=t[o],null==a)throw new F(`Unknown ${s}: ${n}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const o=n;if(null==o.className||null==o.config)throw new F(`${s}: Improper config format: ${JSON.stringify(o)}.\n'className' and 'config' must set.`);const a=o.className;let i,l;if(a in e?[i,l]=e[a]:a in _n?[i,l]=_n.className:a in t&&([i,l]=t[a]),null==i)throw new F(`Unknown ${s}: ${a}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const u={};for(const p of Object.keys(_n))u[p]=_n[p];for(const p of Object.keys(e))u[p]=e[p];o.config.customObjects=u;const h=Object.assign({},_n);for(const p of Object.keys(e))_n[p]=e[p];Kh(o.config);const d=l(i,o.config,e,r);return _n=Object.assign({},h),d}{const u=Object.assign({},_n);for(const h of Object.keys(e))_n[h]=e[h];const c=new i(o.config);return _n=Object.assign({},u),c}}}function Il(n,t){return-1*function WS(n,t){return n<t?-1:n>t?1:0}(n,t)}function ks(n){if(null==n)return n;const t=[];for(const e of n)-1===t.indexOf(e)&&t.push(e);return t}function GS(n){if(null==n)throw new F(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function er(n,t,e){if(null!=e&&n.indexOf(e)<0)throw new F(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function qh(n,t,e=0,s=1/0){return gn(e>=0),gn(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function Gt(n,t){Array.isArray(n)?(k(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>Gt(e,`element ${s+1} of ${t}`))):k(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${Rm(n)}.`)}function Rm(n){return null===n?"null":Array.isArray(n)?"["+n.map(t=>Rm(t)).join(",")+"]":"string"==typeof n?`"${n}"`:`${n}`}function Om(n){return"relu"===n?"relu":"linear"===n?"linear":"elu"===n?"elu":null}function Xh(n,t){return H(()=>nn(Re(V(n,n),t,!0)))}class ga extends Nr{getConfig(){return{}}}re((()=>{class n extends ga{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return H(()=>{const s=Xh(e,this.axis),r=mn(s,0,this.maxValue);return V(e,Ae(r,de(Lt(),s)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return n.className="MaxNorm",n})()),re((()=>{class n extends ga{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return H(()=>Ae(e,de(Lt(),Xh(e,this.axis))))}getConfig(){return{axis:this.axis}}}return n.className="UnitNorm",n})()),re((()=>{class n extends ga{apply(e){return Cs(e)}}return n.className="NonNeg",n})()),re((()=>{class n extends ga{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return H(()=>{const s=Xh(e,this.axis),r=de(V(this.rate,mn(s,this.minValue,this.maxValue)),V(1-this.rate,s));return V(e,Ae(r,de(Lt(),s)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return n.className="MinMaxNorm",n})());const Fm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Mt(n){return jh(n)}function Pm(n,t={}){return ma(n,vn.getMap().classNameMap,t,"constraint")}function zt(n){return null==n?null:"string"==typeof n?Pm({className:n in Fm?Fm[n]:n,config:{}}):n instanceof ga?n:Pm(n)}const HS=["channelsFirst","channelsLast"],jS=["nearest","bilinear"],KS=["valid","same","causal"],qS=["max","avg"],XS=["sum","mul","concat","ave"],Ar=new Map;function Dt(n){er(HS,"DataFormat",n)}function yn(n){er(KS,"PaddingMode",n)}function Lm(n){er(qS,"PoolMode",n)}const ya=[];function tr(n,t){ya.push(n);try{const e=t();return ya.pop(),e}catch(e){throw ya.pop(),e}}function zm(n){if(!Bm(n))throw new Error("Not a valid tensor name: '"+n+"'");return function YS(){return 0===ya.length?"":ya.join("/")+"/"}()+n}function Vm(n){if(!Bm(n))throw new Error("Not a valid tensor name: '"+n+"'");Ar.has(n)||Ar.set(n,0);const t=Ar.get(n);if(Ar.set(n,Ar.get(n)+1),t>0){const e=`${n}_${t}`;return Ar.set(e,1),e}return n}const JS=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Bm(n){return!!n.match(JS)}function QS(n){return n===parseInt(n.toString(),10)}function Is(n,t,e){null==t&&(t=0),null==e&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function Sl(n){return Sn(n=Array.isArray(n)?new Float32Array(n):n)}function Rr(n){return ul(Sl(n)).dataSync()[0]}function Ss(n){return Ln(Sl(n)).dataSync()[0]}function zn(n,t){if(t<n)throw new F(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}function xa(n,t){return n.asType(t)}function ba(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),n.reshape(e)}function nr(n,t,e){return H(()=>{switch(n.rank){case 1:return Qc(n,t,e);case 2:return Mf(n,[t,0],[e,n.shape[1]]);case 3:return eh(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return hl(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return at(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return at(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new F(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Zh(n,t,e){return H(()=>{switch(n.rank){case 1:return Qc(n,t,e);case 2:return Mf(n,[0,t],[n.shape[0],e]);case 3:return eh(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return hl(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new F(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Tl(n,t,e,s){return H(()=>{switch(n.rank){case 1:return Qc(n,t,e);case 2:switch(s){case 1:return nr(n,t,e);case 2:return Zh(n,t,e);default:throw new F(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return nr(n,t,e);case 2:return eh(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Zh(n,t,e);default:throw new F(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return nr(n,t,e);case 2:return hl(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return hl(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Zh(n,t,e);default:throw new F(`The axis is not within the rank of the tensor ${s}`)}default:throw new F(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Yh(n,t=-1){let e;return t<0&&(e=n[0].rank,t=0!==e?e:0),t===n[0].rank&&(t=-1),Kt(n,t)}function Gm(n,t){switch(n.rank){case 1:return Rw([n,t]);case 2:return Fw([n,t],0);case 3:return Lw([n,t],0);case 4:return zw([n,t],0);default:throw new F(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Jh(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new F(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Ir(n,t)}function $l(n,t=0,e=1,s,r){return Rv(n,t,e,s,r)}function Yn(n,t,e,s){if(n.rank<2||t.rank<2)throw new Ve(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3&&n.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Ve(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`);if(2===n.rank&&2===t.rank)return jf({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?Qh(n.rank,s,"channelsLast"):null,activation:e});{const r=n.shape.slice(),o=r.pop();n=n.reshape([-1,o]);const a=t.shape.slice(),i=a.pop(),l=a.pop(),u=[...a,i],c=Array.from({length:t.rank},(f,m)=>0===m?t.rank-2:m<=t.rank-2?m-1:m);t=t.transpose(c).reshape([l,-1]);const h=[...r,...u];return jf({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?Qh(n.rank,s,"channelsLast"):null,activation:e}).reshape(h)}}function Um(n,t,e){return H(()=>(t=Array.isArray(t)?Sn(t,"int32"):t.toInt(),Uc(n,t,e)))}function wa(n){return V(n,n)}function Qh(n,t,e){const s=t.shape;if(1!==t.rank&&t.rank!==n)throw new F(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(5===n){if("channelsFirst"===e)return t.reshape(1===s.length?[1,s[0],1,1,1]:[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===e)return t.reshape(1===s.length?[1,1,1,1,s[0]]:[1].concat(s))}else if(4===n){if("channelsFirst"===e)return t.reshape(1===s.length?[1,s[0],1,1]:[1,s[2],s[0],s[1]]);if("channelsLast"===e)return t.reshape(1===s.length?[1,1,1,s[0]]:[1].concat(s))}else if(3===n){if("channelsFirst"===e)return t.reshape(1===s.length?[1,s[0],1]:[1,s[1],s[0]]);if("channelsLast"===e)return t.reshape(1===s.length?[1,1,s[0]]:[1].concat(s))}else if(n<3)return t;throw new F(`Unsupported input rank by biasAdd: ${t.rank}`)}function Jn(n,t,e){return H(()=>(null==e&&(e="channelsLast"),Dt(e),n.add(Qh(n.rank,t,e))))}function Hm(n,t,e,s){return H(()=>aN(n,t,e,s))}function va(n,t,e=!1){return e?n():t()}const lT=["fanIn","fanOut","fanAvg"],uT=["normal","uniform","truncatedNormal"];class En extends Nr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}re((()=>{class n extends En{apply(e,s){return Pt(e,s)}}return n.className="Zeros",n})());let jm=(()=>{class n extends En{apply(e,s){return Ns(e,s)}}return n.className="Ones",n})();re(jm),re((()=>{class n extends En{constructor(e){if(super(),"object"!=typeof e)throw new F(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new F(`config must have value set but got ${e}`);this.value=e.value}apply(e,s){return H(()=>V(Oe(this.value),Ns(e,s)))}getConfig(){return{value:this.value}}}return n.className="Constant",n})()),re((()=>{class n extends En{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,s){return cl(e,this.minval,this.maxval,s)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return n.className="RandomUniform",n})()),re((()=>{class n extends En{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Ve(`randomNormal does not support dType ${s}.`);return $l(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="RandomNormal",n})()),re((()=>{class n extends En{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,s){if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Ve(`truncatedNormal does not support dType ${s}.`);return Vf(e,this.mean,this.stddev,s,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return n.className="TruncatedNormal",n})()),re((()=>{class n extends En{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,s){return H(()=>{if(2!==e.length||e[0]!==e[1])throw new F("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,Df(e[0]))})}getConfig(){return{gain:this.gain}}}return n.className="Identity",n})());let xn=(()=>{class n extends En{constructor(e){if(super(),e.scale<0)throw new F(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale??1,this.mode=e.mode??"fanIn",function cT(n){er(lT,"FanMode",n)}(this.mode),this.distribution=e.distribution??"normal",function hT(n){er(uT,"Distribution",n)}(this.distribution),this.seed=e.seed}apply(e,s){const r=function dT(n,t="channelsLast"){let e,s;if(Dt(t),2===n.length)e=n[0],s=n[1];else if(-1!==[3,4,5].indexOf(n.length)){if("channelsFirst"===t){const r=Is(n,2);e=n[1]*r,s=n[0]*r}else if("channelsLast"===t){const r=Is(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Is(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}(e),o=r[0],a=r[1];let i=this.scale;if(i/="fanIn"===this.mode?Math.max(1,o):"fanOut"===this.mode?Math.max(1,a):Math.max(1,(o+a)/2),"normal"===this.distribution){const l=Math.sqrt(i);if("float32"!==(s=s||"float32")&&"int32"!==s)throw new Ve(`${this.getClassName()} does not support dType ${s}.`);return Vf(e,0,l,s,this.seed)}{const l=Math.sqrt(3*i);return cl(e,-l,l,s)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return n.className="VarianceScaling",n})();re(xn);let Km=(()=>{class n extends xn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xn.className}}return n.className="GlorotUniform",n})();re(Km);let qm=(()=>{class n extends xn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xn.className}}return n.className="GlorotNormal",n})();re(qm);let Xm=(()=>{class n extends xn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xn.className}}return n.className="HeNormal",n})();re(Xm);let Zm=(()=>{class n extends xn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xn.className}}return n.className="HeUniform",n})();re(Zm);let Ym=(()=>{class n extends xn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return xn.className}}return n.className="LeCunNormal",n})();re(Ym);let Jm=(()=>{class n extends xn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return xn.className}}return n.className="LeCunNormal",n})();re(Jm),re((()=>{class n extends En{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain??this.DEFAULT_GAIN,this.seed=e.seed,null!=this.seed)throw new Ve("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,s){return H(()=>{if(e.length<2)throw new Ve("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const o=$l(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let a=RC.gramSchmidt(o);return e[0]>e[1]&&(a=a.transpose()),V(this.gain,a)})}getConfig(){return{gain:this.gain,seed:this.seed}}}return n.className="Orthogonal",n})());const Qm={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function eg(n,t={}){return ma(n,vn.getMap().classNameMap,t,"initializer")}function Ct(n){return jh(n)}function bt(n){if("string"==typeof n){const t=n in Qm?Qm[n]:n;if("GlorotNormal"===t)return new qm;if("GlorotUniform"===t)return new Km;if("HeNormal"===t)return new Xm;if("HeUniform"===t)return new Zm;if("LeCunNormal"===t)return new Ym;if("LeCunUniform"===t)return new Jm;{const e={};return e.className=t,e.config={},eg(e)}}return n instanceof En?n:eg(n)}let pT=0;function tg(){return pT++}const _l={};function El(n=""){return n in _l||(_l[n]=0),_l[n]+=1,n+_l[n].toString()}function ed(n){return Array.isArray(n)&&Array.isArray(n[0])}function Dl(n){return 0===n.length?[]:Array.isArray(n[0])?n:[n]}function Ue(n){let t;if(Array.isArray(n)){if(1!==n.length)throw new F(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function lt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(1===n.length)return n[0];throw new F(`Expected exactly 1 Shape; got ${n.length}`)}return n}function Al(n){let t=0;for(const e of n)t+=0===e.shape.length?1:e.shape.reduce((s,r)=>s*r);return t}const ng="Variable";class Qn{constructor(t,e="float32",s=ng,r=!0,o=null){this.dtype=e??"float32",this.shape=t.shape,this.id=tg(),this.originalName=zm(s=s??ng),this.name=Vm(this.originalName),this.trainable_=r,this.constraint=o,this.val=sh(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function fT(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function td(n){return n.map(t=>t.read())}function nd(n){n.forEach(t=>{t[0].write(t[1])})}class Xt{constructor(t){this.dtype=t.dtype,this.shape=t.shape,this.ndim=null!=t.shape?t.shape.length:t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class es{constructor(t,e,s,r,o,a,i){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=i,this.id=tg(),null!=a&&(this.originalName=zm(a),this.name=Vm(this.originalName)),this.rank=e.length}}let mT=0;class Rl{constructor(t,e){this.callArgs=e,this.id=mT++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)t.push(null!=e?e.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let gT=0;class Je extends Nr{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=gT++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=ds(s)+"_"+El(s)}if(this.name=e,this.trainable_=t.trainable??!0,null!=t.inputShape||null!=t.batchInputShape){let s;if(null!=t.batchInputShape)s=t.batchInputShape;else if(null!=t.inputShape){let o=null;null!=t.batchSize&&(o=t.batchSize),s=[o].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;null==r&&(r=t.inputDType),null==r&&(r="float32"),this.dtype=r}this.initialWeights=null!=t.weights?t.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new $n(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new F(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return an(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return an(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Zn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Zn(`Layer ${this.name} is not connected, no input to return.`);return an(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Zn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Zn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return an(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=ft(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=ft(this.inputSpec);if(t.length!==e.length)throw new F(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let s=0;s<t.length;s++){const r=t[s],o=e[s];if(null==o)continue;const a=r.rank;if(null!=o.ndim&&a!==o.ndim)throw new F(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${a}`);if(null!=o.maxNDim&&a>o.maxNDim)throw new F(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${a}`);if(null!=o.minNDim&&a<o.minNDim)throw new F(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${a}.`);if(null!=o.dtype&&r.dtype!==o.dtype)throw new F(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const i=r.shape;for(const l in o.axes){const u=Number(l),c=o.axes[l],h=u>=0?i[u]:i[i.length+u];if(null!=c&&-1===[c,null].indexOf(h))throw new F(`Input ${s} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${i}.`)}}if(null!=o.shape)for(let i=0;i<o.shape.length;++i){const l=o.shape[i],u=r.shape[i];if(null!=l&&null!=u&&l!==u)throw new F(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=ft(t);let r=!0;for(const a of s)if(!(a instanceof es)){r=!1;break}let o=!0;for(const a of s)if(a instanceof es){o=!1;break}if(r===o)throw new F("Arguments to apply() must be all SymbolicTensors or all Tensors");return tr(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const a=[];for(const i of ft(t))a.push(i.shape);this.build(an(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&o&&(this._refCount=1)}if(this.assertInputCompatibility(t),o){let a=this.call(t,e);const i=ft(a),l=[];for(let u of i)-1!==s.indexOf(u)&&(u=u.clone()),l.push(u);if(a=an(l),null!=this.activityRegularizer)throw new Ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const a=function yT(n){n=ft(n);const t=[];for(const e of n)t.push(e.shape);return an(t)}(t),i=this.computeOutputShape(a);let l;const u="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?a[0]:a),l=null!=i&&i.length>0&&Array.isArray(i[0])?i.map((c,h)=>new es(u,c,this,ft(t),e,this.name,h)):new es(u,i,this,ft(t),e,this.name),this.addInboundNode(t,l,null,null,a,i,e),this._refCount++,null!=this.activityRegularizer)throw new Ve("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{null!=s&&null!=t[r]&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Zn(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);-1===t.indexOf(s)&&t.push(s)}if(1===t.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Zn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new $n(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Al(this.weights)}build(t){this.built=!0}getWeights(t=!1){return td(t?this.trainableWeights:this.weights)}setWeights(t){H(()=>{const e=this.weights;if(e.length!==t.length)throw new F(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const s=[],r=td(e);for(let o=0;o<r.length;++o){const a=r[o],i=e[o],l=t[o];if(!he(a.shape,l.shape))throw new F(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);s.push([i,l])}nd(s)})}addWeight(t,e,s,r,o,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new F(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==s&&(s="float32"),this.fastWeightInitDuringBuild&&(r=bt("zeros"));const l=r.apply(e,s),u=new Qn(l,s,t,a,i);return l.dispose(),null!=o&&this.addLoss(()=>o.apply(u.read())),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=ft(t),null!=this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(s=>{if(null!=s)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,s,r,o,a,i=null){const l=ft(t);e=ft(e),s=ft(s),r=ft(r),o=Dl(o),a=Dl(a);const u=[],c=[],h=[];for(const d of l)u.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Rl({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:h,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:a},i);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function sg(n,t,e){if((null==t||null!=e&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),0===t.inboundNodes.length)return[n];{const s=t.inboundNodes[e];if(0===s.inboundLayers.length)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const u=sg(s.inputTensors[o],s.inboundLayers[o],s.nodeIndices[o]);for(const c of u)-1===r.indexOf(c)&&r.push(c)}return r}}}let Ol=(()=>{class n extends Je{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:El("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new F("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let s=e.batchInputShape;if(null==s){if(null==e.inputShape)throw new F("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");s=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new F("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=e.dtype||"float32";this.batchInputShape=s,this.dtype=r,this.inputSpec=[{shape:s}];const o=new es(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Rl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[s],outputShapes:[s]})}apply(e,s){throw new F(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return n.className="InputLayer",n})();function Ts(n){return sd.apply(this,arguments)}function sd(){return(sd=(0,A.Z)(function*(n){if(null==n)return;const t=[],e=[],s=[];for(const r in n){const o=n[r];if("number"!=typeof o){const a=o;t.push(a.data()),e.push(r),s.push(a)}}if(t.length>0){const r=yield Promise.all(t);for(let o=0;o<r.length;++o)n[e[o]]=r[o][0];je(s)}})).apply(this,arguments)}function rg(n){if(null!=n)for(const t in n){const e=n[t];"number"!=typeof e&&e.dispose()}}re(Ol);class Or{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return(0,A.Z)(function*(){})()}onEpochEnd(t,e){return(0,A.Z)(function*(){})()}onBatchBegin(t,e){return(0,A.Z)(function*(){})()}onBatchEnd(t,e){return(0,A.Z)(function*(){})()}onTrainBegin(t){return(0,A.Z)(function*(){})()}onTrainEnd(t){return(0,A.Z)(function*(){})()}setModel(t){}}class vT{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){var s=this;return(0,A.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochBegin(t,e)})()}onEpochEnd(t,e){var s=this;return(0,A.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onEpochEnd(t,e)})()}onBatchBegin(t,e){var s=this;return(0,A.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchBegin(t,e)})()}onBatchEnd(t,e){var s=this;return(0,A.Z)(function*(){null==e&&(e={});for(const r of s.callbacks)yield r.onBatchEnd(t,e)})()}onTrainBegin(t){var e=this;return(0,A.Z)(function*(){null==t&&(t={});for(const s of e.callbacks)yield s.onTrainBegin(t)})()}onTrainEnd(t){var e=this;return(0,A.Z)(function*(){null==t&&(t={});for(const s of e.callbacks)yield s.onTrainEnd(t)})()}}class NT extends Or{constructor(){super()}onEpochBegin(t){var e=this;return(0,A.Z)(function*(){e.seen=0,e.totals={}})()}onBatchEnd(t,e){var s=this;return(0,A.Z)(function*(){null==e&&(e={});const r=e.size??0;s.seen+=r;for(const o in e){const a=e[o];if("number"==typeof a)s.totals.hasOwnProperty(o)||(s.totals[o]=0),s.totals[o]=s.totals[o]+a*r;else{let i;o in s.totals?i=s.totals[o]:s.totals[o]=0;const l=H(()=>de(s.totals[o],V(a,r)));s.totals[o]=l,i?.dispose()}}})()}onEpochEnd(t,e){var s=this;return(0,A.Z)(function*(){if(null!=e)for(const r of s.params.metrics)null!=s.totals[r]&&("number"==typeof s.totals[r]?e[r]=s.totals[r]/s.seen:H(()=>{const o=V(Ae(1,s.seen),s.totals[r]);e[r]=o,s.totals[r].dispose(),qn(e[r])}))})()}}class CT extends Or{onTrainBegin(t){var e=this;return(0,A.Z)(function*(){e.epoch=[],e.history={}})()}onEpochEnd(t,e){var s=this;return(0,A.Z)(function*(){null==e&&(e={}),s.epoch.push(t);for(const r in e)null==s.history[r]&&(s.history[r]=[]),s.history[r].push(e[r])})()}syncData(){var t=this;return(0,A.Z)(function*(){const e=[],s=[],r=[];for(const a in t.history){const i=t.history[a];for(let l=0;l<i.length;++l)"number"!=typeof i[l]&&(e.push(i[l].data()),s.push(a),r.push(l))}const o=yield Promise.all(e);for(let a=0;a<o.length;++a)t.history[s[a]][r[a]].dispose(),t.history[s[a]][r[a]]=o[a][0]})()}}class kT extends Or{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Nu(this.yieldEvery)&&(this.maybeWait=function US(n,t){let s,e=wn();return(...o)=>{const a=wn();return a-e<t||(e=a,s=n(...o)),s}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,s){var r=this;return(0,A.Z)(function*(){const o=[];null!=r.yield&&(yield Ts(s),o.push(r.yield(t,e,s))),o.push(wl()),yield Promise.all(o)})()}onEpochBegin(t,e){var s=this;return(0,A.Z)(function*(){s.currentEpoch=t,null!=s.epochBegin&&(yield Ts(e),yield s.epochBegin(t,e))})()}onEpochEnd(t,e){var s=this;return(0,A.Z)(function*(){const r=[];null!=s.epochEnd&&(yield Ts(e),r.push(s.epochEnd(t,e))),"epoch"===s.yieldEvery&&r.push(wl()),yield Promise.all(r)})()}onBatchBegin(t,e){var s=this;return(0,A.Z)(function*(){null!=s.batchBegin&&(yield Ts(e),yield s.batchBegin(t,e))})()}onBatchEnd(t,e){var s=this;return(0,A.Z)(function*(){const r=[];null!=s.batchEnd&&(yield Ts(e),r.push(s.batchEnd(t,e))),"batch"===s.yieldEvery?r.push(wl()):Nu(s.yieldEvery)&&r.push(s.maybeWait(s.currentEpoch,t,e)),yield Promise.all(r)})()}onTrainBegin(t){var e=this;return(0,A.Z)(function*(){null!=e.trainBegin&&(yield Ts(t),yield e.trainBegin(t))})()}onTrainEnd(t){var e=this;return(0,A.Z)(function*(){null!=e.trainEnd&&(yield Ts(t),yield e.trainEnd(t))})()}}function og(n,t){return null==n&&(n={}),n instanceof Or?[n]:Array.isArray(n)&&n[0]instanceof Or?n:ft(n).map(s=>new kT(s,t))}let IT=(()=>{class n{constructor(){}static registerCallbackConstructor(e,s){k(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),n.checkForDuplicate(s),null==n.constructors[e]&&(n.constructors[e]=[]),n.constructors[e].push(s)}static checkForDuplicate(e){for(const s in n.constructors)n.constructors[+s].forEach(o=>{if(o===e)throw new F("Duplicate callback constructor.")})}static clear(){n.constructors={}}static createCallbacks(e){const s=[];for(const r in n.constructors){const o=+r;e>=o&&s.push(...n.constructors[o])}return s.map(r=>new r)}}return n.constructors={},n})();function ag(n,t,e,s,r,o,a,i,l){const u=new CT,c=[new NT,...IT.createCallbacks(t)];null!=n&&c.push(...n),c.push(u);const h=new vT(c);return h.setParams({epochs:e,initialEpoch:s,samples:r,steps:o,batchSize:a,verbose:t,doValidation:i,metrics:l}),{callbackList:h,history:u}}function ps(n,t={},e=!1){return ma(n,vn.getMap().classNameMap,t,"layer",e)}function Fl(n,t){return H(()=>{"float32"!==n.dtype&&(n=n.asType("float32"));const e=Re(wa(n),t,!0),s=Gc(e.shape,Lt()),r=nn(ls(e,s));return Ae(n,r)})}function Pl(n,t){return H(()=>Tt(wa(Se(t,n)),-1))}function rd(n,t){return H(()=>Tt(jt(Se(t,n)),-1))}function od(n,t){return H(()=>{const e=Se(n,t),s=mn(jt(n),Lt(),Number.MAX_VALUE),r=jt(Ae(e,s));return V(100,Tt(r,-1))})}function Na(n,t,e=!1){return H(()=>{if(e)t=th(t);else{const s=Re(t,t.shape.length-1,!0);t=Ae(t,s)}return t=mn(t,Lt(),1-Lt()),Et(Re(V(n.toFloat(),Cn(t)),t.shape.length-1))})}function Ll(n,t,e=!1){return H(()=>{const s=ll(function sT(n){const t=[Is(n.shape)];return n.reshape(t)}(n)).toInt(),r=(t=mn(t,Lt(),1-Lt())).shape;return Na(Of(s,r[r.length-1]).reshape(r),t,e)})}function Ml(n,t){return H(()=>{let e;return e=mn(t,Lt(),1-Lt()),e=Cn(Ae(e,Se(1,e))),Tt(function DT(n,t){if(!he(n.shape,t.shape))throw new F(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return H(()=>{const e=t.relu(),s=t.abs().neg();return e.sub(t.mul(n)).add(s.exp().log1p())})}(n,e),-1)})}function ig(n,t){return H(()=>{const e=Fl(n,-1),s=Fl(t,-1),r=V(e,s);return Et(Re(r,-1))})}const zl={meanSquaredError:Pl,meanAbsoluteError:rd,meanAbsolutePercentageError:od,meanSquaredLogarithmicError:function ST(n,t){return H(()=>{const e=mn(t,Lt(),Number.MAX_VALUE),s=Cn(de(1,e)),r=mn(n,Lt(),Number.MAX_VALUE),o=Cn(de(1,r));return Tt(wa(Se(s,o)),-1)})},squaredHinge:function TT(n,t){return H(()=>{const e=ls(0,Se(1,V(n,t)));return Tt(wa(e),-1)})},hinge:function $T(n,t){return H(()=>{const e=ls(0,Se(1,V(n,t)));return Tt(e,-1)})},categoricalHinge:function _T(n,t){return H(()=>{const e=Re(V(n,t),-1),s=Ln(V(Se(1,n),t),-1);return ls(0,de(1,Se(s,e)))})},logcosh:function ET(n,t){return H(()=>{const e=Math.log(2),s=Se(t,n),r=Se(de(s,dl(V(-2,s))),e);return Tt(r,-1)})},categoricalCrossentropy:Na,sparseCategoricalCrossentropy:Ll,binaryCrossentropy:Ml,kullbackLeiblerDivergence:function AT(n,t){return H(()=>{const e=mn(n,Lt(),1),s=mn(t,Lt(),1);return Re(V(n,Cn(Ae(e,s))),-1)})},poisson:function RT(n,t){return H(()=>{const e=Cn(de(Lt(),t));return Tt(Se(t,V(n,e)),-1)})},cosineProximity:ig};function ad(n){if("string"==typeof n){if(n in zl)return zl[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new F(t)}return n}function lg(n,t){return H(()=>{const e=V(.5,kn(t)),s=xa(Xn(t,e),n.dtype);return Tt(Hs(n,s),-1)})}function ug(n,t){return H(()=>xa(Hs(Mc(n,-1),Mc(t,-1)),"float32"))}function LT(n,t){return Ml(n,t)}function MT(n,t){return n.rank===t.rank&&(n=n.squeeze([n.rank-1])),(t=t.argMax(-1)).dtype!==n.dtype&&(t=t.asType(n.dtype)),Hs(n,t).asType("float32")}const hg=Na,dg=Ll,Vl={binaryAccuracy:lg,categoricalAccuracy:ug,precision:function PT(n,t){return H(()=>{const e=function cg(n,t){return H(()=>is(n.equal(1),t.equal(1)).sum().cast("float32"))}(n,t),s=function FT(n,t){return H(()=>is(n.equal(0),t.equal(1)).sum().cast("float32"))}(n,t),r=e.add(s);return Tn(Xn(r,0),e.div(r),0).cast("float32")})},categoricalCrossentropy:hg,sparseCategoricalCrossentropy:dg,mse:Pl,MSE:Pl,mae:rd,MAE:rd,mape:od,MAPE:od,cosine:ig};function jT(n){if("string"==typeof n&&n in Vl)return Vl[n];if("string"!=typeof n&&null!=n)return n;throw new F(`Unknown metric ${n}`)}function Bl(n){if(gn(null!==n,`Unknown LossOrMetricFn ${n}`),"string"==typeof n)return n;{let t;for(const e of Object.keys(zl))if(zl[e]===n){t=e;break}if(void 0!==t)return t;for(const e of Object.keys(Vl))if(Vl[e]===n){t=e;break}return void 0!==t?t:n.name}}function fg(n,t,e=!1){if(null==n||"object"!=typeof n||Object.getPrototypeOf(n)!==Object.prototype||!id(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function id(n){if(null===n)return!0;if("object"==typeof n){if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if("string"!=typeof e||!id(n[e]))return!1;return!0}if(Array.isArray(n)){for(const t of n)if(!id(t))return!1;return!0}return!1}{const t=typeof n;return"string"===t||"number"===t||"boolean"===t}}function Wl(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function YT(n,t,e){let s;try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}Wl([`${n.name} (${n.getClassName()})`,s,n.countParams().toString()],t,e)}function JT(n,t,e,s){let r;try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=[];for(const c of n.inboundNodes)if(!(null!=e&&e.length>0&&-1===e.indexOf(c)))for(let h=0;h<c.inboundLayers.length;++h)o.push(`${c.inboundLayers[h].name}[${c.nodeIndices[h]}][${c.tensorIndices[h]}]`);const a=n.name,i=n.getClassName(),l=0===o.length?"":o[0];Wl([`${a} (${i})`,r,n.countParams().toString(),l],t,s);for(let c=1;c<o.length;++c)Wl(["","","",o[c]],t,s)}function mg(n,t,e){return("inboundNodes"===n||"outputLayers"===n||"inputLayers"===n)&&0===t&&"string"==typeof e}function ld(n,t){if(null===n)return null;if("string"==typeof n)return Qs(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];mg(t,r,o)?e.push(o):e.push(ld(o,t))}return e}{const e={};for(const s of Object.keys(n)){const r=n[s];if("name"===s&&"string"==typeof r)e[s]=r;else{const o=Qs(s);e[o]=ld(r,o)}}return e}}function ud(n,t){if(null==n)return null;if("string"==typeof n)return ds(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];mg(t,r,o)?e.push(o):e.push(ud(o,t))}return e}{const e={};for(const s of Object.keys(n)){const r=n[s];e[ds(s)]="name"!==s&&"className"!==s||"string"!=typeof r?ud(r,s):r}return e}}class $s{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof $s)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(null!=this.id2Value[t.id])throw new F(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function QT(n,t){if(null==n.dtype||n.dtype===t.dtype)return t;try{return Ie(t,n.dtype)}catch{throw new F(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=s&&(this.id2Mask[t.id]=s),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof es){if(null==this.id2Value[t.id])throw new F(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new F(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof es){if(null==this.id2Value[t.id])throw new F(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new F(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&je(this.id2Mask)}}const hd={},gg={};function Ca(n,t,e,s){const r=null!=e&&e.training,o=Array.isArray(n),a=o?n:[n],i=a.map(f=>f.name),l=[],u=t.names();for(const f of i)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=i.join(",")+"|"+t.names().join(",");let h,d;if(null==hd[c]){const f=function e$(n,t){k(null!=n&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(1===n.length){const r=yg(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:a,recipientMap:i}=yg(o,t);for(const l of a)r.has(l.name)||(e.push(l),r.add(l.name));for(const l in i)null==s[l]&&(s[l]=new Set),i[l].forEach(u=>s[l].add(u))}}return{sorted:e,recipientCounts:t$(s)}}(a,t);h=f.sorted,d=f.recipientCounts,hd[c]=h,gg[c]=d}h=hd[c],d={},r||Object.assign(d,gg[c]);const p=new $s(t);for(let f=0;f<h.length;++f){if(null!=s){const R=Pc().numTensors;R>s.maxNumTensors&&(s.maxNumTensors=R),R<s.minNumTensors&&(s.minNumTensors=R)}const m=h[f],g=m.sourceLayer;if(g instanceof Ol)continue;const y=[],x=[],C=[];let w=!1;for(const R of m.inputs){const z=p.getValue(R),K=p.getMask(R);y.push(z),x.push(K),null!=K&&(w=!0),r||(d[R.name]--,0===d[R.name]&&!t.hasKey(R)&&-1===i.indexOf(R.name)&&!z.isDisposed&&!0!==R.sourceLayer.stateful&&C.push(z))}w&&((e=e||{}).mask=x[0]);const N=ft(g.apply(y,e));let S=null;g.supportsMasking&&(S=g.computeMask(y,x));const I=n$(m),E=Array.isArray(I)?I:[I];for(let R=0;R<E.length;++R){p.hasKey(E[R])||p.add(E[R],N[R],Array.isArray(S)?S[0]:S);const z=i.indexOf(E[R].name);-1!==z&&(l[z]=N[R])}r||je(C)}return p.disposeMasks(),o?l:l[0]}function t$(n){const t={};for(const e in n)t[e]=n[e].size;return t}function yg(n,t){const e=new Set,s=[],r={};for(const i of t.names())e.add(i);const o=[],a=[];for(o.push(n);o.length>0;){const i=o[o.length-1];if(e.has(i.name)){o.pop();continue}const l=a[a.length-1]===o.length-1;if(0===i.inputs.length||l)o.pop(),s.push(i),e.add(i.name),l&&a.pop();else{a.push(o.length-1);for(const u of i.inputs)null==r[u.name]&&(r[u.name]=new Set),r[u.name].add(i.name),!e.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:r}}function n$(n){let t;if(1===n.sourceLayer.inboundNodes.length)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}class Vn extends Je{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const x=this.getClassName().toLowerCase();this.name=El(x)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(t.inputs)?t.inputs.slice():[t.inputs],this.outputs=Array.isArray(t.outputs)?t.outputs.slice():[t.outputs],ks(this.inputs).length!==this.inputs.length)throw new F(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);ks(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const w=x.nodeIndex,N=x.tensorIndex;this.outputLayers.push(x.sourceLayer),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(N)}for(const x of this.inputs){const C=x.sourceLayer,w=x.nodeIndex,N=x.tensorIndex;gn(0===w,"input layer has >1 nodes"),gn(0===N,"input layer has >1 tensors"),this.inputLayers.push(C),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(N)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const C=this.inputLayers[x];if(!(C instanceof Ol))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${x} (0-based) originates from layer type ${C.getClassName()}.`);this.inputNames.push(C.name),this.feedInputShapes.push(C.batchInputShape),this.feedInputNames.push(C.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const e={},s={},r={},o={},a={},i=[],l=(x,C,w,N,S,I)=>{(null==N||null==S||null==I)&&(N=x.sourceLayer,S=x.nodeIndex,I=x.tensorIndex);const E=N.inboundNodes[S];if(-1!==w.indexOf(E))throw new $n(`The tensor ${x.name} at layer "${N.name}" is part of a cycle.`);if(-1!==C.indexOf(E))return;this.containerNodes.add(Vn.nodeKey(N,S)),N.id in a||(a[N.id]=Object.keys(a).length),-1===w.indexOf(E)&&w.push(E);const R=E.inboundLayers.length;for(let z=0;z<R;z++)l(E.inputTensors[z],C,w,E.inboundLayers[z],E.nodeIndices[z],E.tensorIndices[z]);for(C.push(E);w.indexOf(E)>=0;)w.splice(w.indexOf(E),1);i.push(E)},u=[],c=[];for(const x of this.outputs)l(x,u,c);const h=i.slice().reverse();for(const x of h){s[x.id]=x,x.id in e||(e[x.id]=0);let C=e[x.id];C=Math.max(C,r[x.outboundLayer.id]??0),r[x.outboundLayer.id]=C,o[x.outboundLayer.id]=x.outboundLayer,e[x.id]=C;for(let N=0;N<x.inboundLayers.length;N++){const E=x.inboundLayers[N].inboundNodes[x.nodeIndices[N]];e[E.id]=Math.max(C+1,e[E.id]??0),s[E.id]=E}}const d={};for(const x in e){const C=e[x];C in d||(d[C]=[]),d[C].push(s[x])}const p={};for(const x in r){const C=r[x];C in p||(p[C]=[]),p[C].push(o[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(Il);this.layers=[];for(const x of f){const C=p[x];C.sort((w,N)=>{const S=a[w.id],I=a[N.id];return S<I?-1:S>I?1:0});for(const w of C)w instanceof Vn&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(d).map(x=>parseInt(x,10)).sort(Il);const m=this.inputs.slice(),g=[];for(const x of f)for(const C of d[x]){const w=C.outboundLayer;if(null!=w){for(const N of C.inputTensors)if(-1===m.indexOf(N))throw new $n(`Graph disconnected: cannot obtain value for tensor ${N} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(const N of C.outputTensors)m.push(N);g.push(w.name)}}this.nodesByDepth=d;const y=this.layers.map(x=>x.name);for(const x of y){const C=y.filter(w=>w===x).length;if(1!==C)throw new $n(`The name "${x}" is used ${C} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new Rl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new F("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;for(const a of this.layers)for(const i of a.weights){if(null!=s[i.originalName])throw new F(`Duplicate weight name: ${i.originalName}`);s[i.originalName]=i,r++}const o=[];for(const a in t){let i=a;if(null==s[a]){const l=a.split("/");i=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(null!=s[i])o.push([s[i],t[a]]);else if(e)throw new F(`Provided weight data has no target variable: ${a}`);delete s[i]}if(e){const a=[];for(const i in s)a.push(i);if(a.length>0)throw new F(`${a.length} of ${r} weights are not set: ${a}`)}nd(o)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.8.6",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=ud(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return H(()=>{t=ft(t);const s=new $s;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return Ca(this.outputs,s,e)})}computeMask(t,e){return H(()=>{let s;return t=ft(t),s=null==e?Js(null,t.length):ft(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Dl(t);if(e.length!==this.inputLayers.length)throw new F(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<e.length;i++)s[this.inputLayers[i].name+"_0_0"]=e[i];const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Il);if(r.length>1)for(const i of r){const l=this.nodesByDepth[i];for(const u of l){const c=u.outboundLayer;if(-1!==this.inputLayers.map(m=>m.id).indexOf(c.id))continue;const h=[];for(let m=0;m<u.inboundLayers.length;m++)h.push(s[`${u.inboundLayers[m].name}_${u.nodeIndices[m]}_${u.tensorIndices[m]}`]);const p=Dl(c.computeOutputShape(an(h))),f=c.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++)s[`${c.name}_${f}_${m}`]=p[m]}}const o=[],a=[];for(let i=0;i<this.outputLayers.length;i++)a.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`);for(let i=0;i<a.length;i++){const l=a[i];gn(l in s),o.push(s[l])}return an(o)}runInternalGraph(t,e){null==e&&(e=Js(null,t.length));const s={};for(let l=0;l<this.inputs.length;++l)s[this.inputs[l].id]=[t[l],e[l]];const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Il);for(const l of r){const u=this.nodesByDepth[l];for(const c of u){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let g,y,x,C,m={};if(null!=c.callArgs&&(m=c.callArgs),1===f.length){const[w,N]=f[0];null==m.mask&&(m.mask=N),x=ft(h.call(w,m)),C=ft(h.computeMask(w,N)),g=[w],y=[N]}else g=f.map(w=>w[0]),y=f.map(w=>w[1]),null==m.mask&&(m.mask=y),x=ft(h.call(g,m)),C=ft(h.computeMask(g,y));if(h.activityRegularizer)throw new Ve("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w)s[p[w].id]=[x[w],C[w]]}}}const o=[],a=[],i=[];for(const l of this.outputs){gn(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[u,c]=s[l.id];i.push(u.shape),o.push(u),a.push(c)}return[o,a,i]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof Vn?1:0;for(let o=0;o<r.inboundNodes.length;o++){const a=Vn.nodeKey(r,o);this.containerNodes.has(a)&&(e[a]=s,s+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new F(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new F("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===t)return s;throw new F(`No such layer: ${t}`)}calculateLosses(){return H(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=Vn.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const i=a.getClassName(),l=a.getConfig(),u=[];for(let h=0;h<a.inboundNodes.length;h++){const d=a.inboundNodes[h],p=Vn.nodeKey(a,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const y=d.inboundLayers[g],C=d.tensorIndices[g];let N=e[Vn.nodeKey(y,d.nodeIndices[g])];null==N&&(N=0),m.push([y.name,N,C,f])}u.push(m)}}}const c={};c.name=a.name,c.className=i,c.config=l,c.inboundNodes=u,s.push(c)}t.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],u=Vn.nodeKey(i,this.inputLayersNodeIndices[a]);if(!this.containerNodes.has(u))continue;let c=e[u];null==c&&(c=0),r.push([i.name,c,this.inputLayersTensorIndices[a]])}t.inputLayers=r;const o=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],u=Vn.nodeKey(i,this.outputLayersNodeIndices[a]);if(!this.containerNodes.has(u))continue;let c=e[u];null==c&&(c=0),o.push([i.name,c,this.outputLayersTensorIndices[a]])}return t.outputLayers=o,t}static fromConfig(t,e,s={},r=!1){const o={},a={};function i(g,y){g.name in a?a[g.name].push(y):a[g.name]=[y]}function l(g,y){const x=[];let C;for(const w of y){const N=w[0],S=w[1],I=w[2];if(C=w[3]??{},!(N in o))return void i(g,y);const E=o[N];if(E.inboundNodes.length<=S)return void i(g,y);x.push(E.inboundNodes[S].outputTensors[I])}x.length>0&&g.apply(an(x),C)}function u(g){const y=g.name,x=ps(g,null!=e.customObjects?e.customObjects:{});x.setFastWeightInitDuringBuild(r),o[y]=x,g.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new F(`Corrupted configuration, expected array for nodeData: ${w}`);i(x,w)})}const c=e.name,h=e.layers;for(const g of h)u(g);for(;!GS(a);)for(const g of h){const y=o[g.name];if(y.name in a){const x=a[y.name];delete a[y.name];for(const C of x)l(y,C)}}const d=[],p=[],f=e.inputLayers;for(const g of f){const y=g[0],x=g[1],C=g[2];gn(y in o),d.push(o[y].inboundNodes[x].outputTensors[C])}const m=e.outputLayers;for(const g of m){const y=g[0],x=g[1],C=g[2];gn(y in o),p.push(o[y].inboundNodes[x].outputTensors[C])}return new t({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new F("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){H(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function bg(n,t){return function xg(n,t,e){const s=t.length;if(null==n||Array.isArray(n)&&0===n.length)return t.map(r=>null);if(1===s)return Array.isArray(n)&&1===n.length?n:"object"==typeof n&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}if("object"==typeof n&&Object.keys(n).length>0&&"object"==typeof n[Object.keys(n)[0]]){const r=[];return t.forEach(o=>{r.push(o in n?n[o]:null)}),r}throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}(n,t,"classWeight")}function wg(n,t,e,s){return dd.apply(this,arguments)}function dd(){return(dd=(0,A.Z)(function*(n,t,e,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=e){const r=H(()=>{if(1===n.shape.length)return n.clone();if(2===n.shape.length){if(n.shape[1]>1)return n.argMax(1);if(1===n.shape[1])return n.reshape([n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(yield r.data());je(r);const a=[];return o.forEach(i=>{if(null==e[i])throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(e[i])}),Sn(a,"float32")}return null})).apply(this,arguments)}function s$(n,t){return V(n,t)}function vg(n,t){let e,s;e=t.xs,s=t.ys,k(null!=e&&null!=s,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const o=Ng("input",n.inputNames,e),a=Ng("output",n.outputNames,s),i=o[0].shape[0];k(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),k(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<o.length;l++)k(o[l].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let l=0;l<a.length;l++)k(a[l].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:o,ys:a}}function Ng(n,t,e){if(e instanceof W)return[e];if(Array.isArray(e))return k(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(null==e[r])throw new F(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function o$(n){if(3===n.length)throw new Ve("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}function pd(){return(pd=(0,A.Z)(function*(n,t,e){const s=null!=e.batchesPerEpoch;if(k(null!=n.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),k(null!=e,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),k(null!=e.epochs&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),k(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),k(null==e.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=null!=e.validationData;let o,a;if(r)if(Cg(e.validationData))k(null==e.validationBatches||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const g=o$(e.validationData);o=g.xs,a=g.ys}const i=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map(g=>"val_"+g)):l.slice();const c=og(e.callbacks,e.yieldEvery),h=e.verbose??1,{callbackList:d,history:p}=ag(c,h,e.epochs,null,null,i$(t,e),null,r,u);d.setModel(n),n.history=p,yield d.onTrainBegin(),n.stopTraining_=!1;let f=e.initialEpoch??0,m=yield t.iterator();for(;f<e.epochs;){const g={};yield d.onEpochBegin(f);let y=0,x=0;for(s||(m=yield t.iterator());!s||y<e.batchesPerEpoch;){const C=yield m.next();if(s&&C.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=C.value){const{xs:w,ys:N}=vg(n,C.value),S={};S.batch=x,S.size=w[0].shape[0],yield d.onBatchBegin(x,S);const I=[];if(null!=e.classWeight){const z=bg(e.classWeight,n.outputNames);for(let K=0;K<z.length;++K)I.push(yield wg(N[K],null,z[K]))}const E=w.concat(N).concat(I),R=i(E);je(E);for(let z=0;z<l.length;++z){const J=R[z];S[l[z]]=J,qn(J)}yield d.onBatchEnd(x,S),rg(S),x++,y++}if(s?y>=e.batchesPerEpoch:C.done){if(r){let w;w=Cg(e.validationData)?ft(yield n.evaluateDataset(e.validationData,{batches:e.validationBatches})):ft(n.evaluate(o,a,{batchSize:e.validationBatchSize??32,verbose:0}));for(let N=0;N<n.metricsNames.length;++N)g[`val_${n.metricsNames[N]}`]=w[N]}break}if(n.stopTraining_)break}if(yield d.onEpochEnd(f,g),f++,n.stopTraining_)break}return yield d.onTrainEnd(),yield n.history.syncData(),n.history}finally{n.isTraining=!1}})).apply(this,arguments)}function i$(n,t){let e=null;return null!=t.batchesPerEpoch?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function Cg(n){return"function"==typeof n.iterator}function l$(n){return"function"==typeof n.next}function fd(){return(fd=(0,A.Z)(function*(n,t,e){const s=null!=(e=e||{}).batches,r=n.testFunction;let o=[];if(e.verbose>0)throw new Ve("Verbose mode is not implemented yet.");k(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const a=l$(t)?t:yield t.iterator();let i=0,l=0;for(;!s||l<e.batches;){const u=yield a.next();if(o=H(()=>{if(u.value){const{xs:c,ys:h}=vg(n,u.value),d=c.concat(h),p=H(()=>r(d));if(je(d),0===l)for(let m=0;m<p.length;++m)o.push(Oe(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],y=o[m];o[m]=H(()=>de(o[m],V(f,g))),l>0&&je(y)}je(p),i+=f,++l}return o}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<o.length;++u){const c=o[u];o[u]=Ae(o[u],i),je(c)}return an(o)})).apply(this,arguments)}function md(n){k(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function ka(n,t,e){return null==n?[null]:Array.isArray(n)?n.map(s=>nr(s,t,e-t)):nr(n,t,e-t)}function gd(n,t){return H(()=>null==n?null:Array.isArray(n)?n.map(e=>gd(e,t)):Um(n,"int32"===t.dtype?t:t.toInt()))}function yd(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}function c$(n,t,e,s,r,o,a,i,l,u,c,h,d,p,f){return xd.apply(this,arguments)}function xd(){return(xd=(0,A.Z)(function*(n,t,e,s,r,o,a,i,l,u,c,h,d,p,f){null==r&&(r=32),null==o&&(o=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==p))throw new F("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=n.checkNumSamples(e,r,p,"steps_per_epoch");let y;null!=g&&(y=zn(0,g)),null==a&&(a=1);const{callbackList:x,history:C}=ag(i,a,o,d,g,p,r,m,h);x.setModel(n),n.history=C,yield x.onTrainBegin(),n.stopTraining_=!1;for(let w=d;w<o;++w){yield x.onEpochBegin(w);const N={};if(null!=p)throw new Ve("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new Ve("batch shuffling is not implemneted yet");c&&$(y);const S=Sn(y),I=yd(g,r);for(let E=0;E<I.length;++E){const R={};if(yield x.onBatchBegin(E,R),H(()=>{const z=I[E][0],K=I[E][1],J=nr(S,z,K-z);R.batch=E,R.size=K-z;const Y=gd(e,J),Q=t(Y);for(let Z=0;Z<s.length;++Z){const ne=Q[Z];R[s[Z]]=ne,qn(ne)}if(E===I.length-1&&m){const Z=n.testLoop(l,u,r);for(let X=0;X<s.length;++X){const ne=s[X],ee=Z[X];qn(ee),N["val_"+ne]=ee}}}),yield x.onBatchEnd(E,R),rg(R),n.stopTraining_)break}S.dispose()}if(yield x.onEpochEnd(w,N),n.stopTraining_)break}return yield x.onTrainEnd(),yield n.history.syncData(),n.history})).apply(this,arguments)}function bd(){return(bd=(0,A.Z)(function*(n,t,e,s={}){if(n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,o,a,i,l,u,c;n.isTraining=!0;try{const h=s.batchSize??32;md(h);const d=!1,p=yield n.standardizeUserData(t,e,s.sampleWeight,s.classWeight,d,h);r=p[0],o=p[1],c=p[2];let m,f=!1;if(null!=s.validationData&&s.validationData.length>0){if(f=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Ve("validationData including sample weights is not supported yet."):new F(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);a=s.validationData[0],i=s.validationData[1];const I=!0,E=yield n.standardizeUserData(a,i,null,null,I,h);l=E[0],u=E[1],m=l.concat(u)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){f=!0;const I=Math.floor(r[0].shape[0]*(1-s.validationSplit)),E=r[0].shape[0];l=ka(r,I,E),r=ka(r,0,I),u=ka(o,I,E),o=ka(o,0,I),m=l.concat(u)}else null!=s.validationSteps&&(f=!0);const g=r.concat(o).concat(c);n.checkTrainableWeightsConsistency();const y=n.makeTrainFunction(),x=n.getDedupedMetricsNames();let C,w;f?(n.makeTestFunction(),C=n.testFunction,w=x.slice().concat(x.map(I=>"val_"+I))):(C=null,m=[],w=x.slice());const N=og(s.callbacks,s.yieldEvery);return yield c$(n,y,g,x,h,s.epochs,s.verbose,N,C,m,s.shuffle,w,s.initialEpoch,null,null)}finally{n.isTraining=!1,sr(r,t),sr(o,e),sr(l,a),sr(u,i),null!=c&&je(c)}})).apply(this,arguments)}function kg(n){const t=[];n instanceof W&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(1===s.rank)t.push(ba(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function sr(n,t){if(null==n)return;const e=[];if(t instanceof W)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(null!=t)for(const r in t)e.push(t[r].id);const s=[];if(n instanceof W)-1===e.indexOf(n.id)&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{-1===e.indexOf(r.id)&&s.push(r)});else if(null!=n)for(const r in n){const o=n[r];-1===e.indexOf(o.id)&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}function wd(n){return Array.isArray(n)}function Ig(n){return!function d$(n){return n instanceof W}(n)&&!wd(n)}function Sg(n,t,e,s=!0,r=""){if(null==t||0===t.length){if(null!=n){let a=!1;if(wd(n)&&n.length>0)a=!0;else if(Ig(n)){for(const i in n)if(n.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new F(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(null==n)return t.map(a=>null);let o;if(Ig(n)){o=[];for(const a of t){if(null==n[a])throw new F(`No data provided for "${a}". Need data for each key in: ${t}`);o.push(n[a])}}else if(wd(n)){if(n.length!==t.length)throw new F(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(t.length>1)throw new F(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=kg(o),null!=e)for(let a=0;a<t.length;++a){if(null==e[a])continue;const i=o[a];if(i.shape.length!==e[a].length)throw new F(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<e[a].length;++l){if(0===l&&!s)continue;const u=i.shape[l],c=e[a][l];if(null!=c&&c>=0&&u!==c)throw new F(`Error when checking ${r}: expected ${t[a]} to have shape [${e[a]}], but got array with shape [${i.shape}].`)}}return o}function Tg(n,t,e,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==t.length)throw new F(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(t.length>1)throw new F(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(null!=e)for(let a=0;a<t.length;++a){if(null==e[a])continue;const i=o[a];if(i.shape.length!==e[a].length)throw new F(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<e[a].length;++l){if(0===l&&!s)continue;const u=i.shape[l],c=e[a][l];if(null!=c&&c!==u)throw new F(`Error when checking ${r}: expected ${t[a]} to have shape ${JSON.stringify(e[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}let Fr=(()=>{class n extends Vn{constructor(e){super(e),this.isTraining=!1}summary(e,s,r=console.log){if(!this.built)throw new F("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function qT(n,t,e,s=console.log){const r=function ZT(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let o=!1;for(const a of r.inboundNodes)if(-1!==s.indexOf(a)){if(o){t=!1;break}o=!0}if(!t)break}return t}(n),o=["Layer (type)","Output shape","Param #"];let a;if(r?(t=t||65,e=e||[.45,.85,1]):(t=t||98,e=e||[.33,.55,.67,1]),e[e.length-1]<=1&&(e=e.map(c=>Math.floor(t*c))),!r){o.push("Receives inputs"),a=[];for(const c in n.nodesByDepth)a.push(...n.nodesByDepth[c])}s("_".repeat(t)),Wl(o,e,s),s("=".repeat(t));const i=n.layers;for(let c=0;c<i.length;++c)r?YT(i[c],e,s):JT(i[c],e,a,s),s((c===i.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const l=function XT(n){let t;return t=Al(null!=n.collectedTrainableWeights?n.collectedTrainableWeights:n.trainableWeights),t}(n),u=Al(n.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,s,r)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function KT(n){const t={Adagrad:()=>Ys.adagrad(.01),Adadelta:()=>Ys.adadelta(1,.95,Lt()),Adam:()=>Ys.adam(.001,.9,.999,Lt()),Adamax:()=>Ys.adamax(.002,.9,.999,Lt(),0),RMSProp:()=>Ys.rmsprop(.001,.9,0,Lt()),SGD:()=>Ys.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new F(`Unknown Optimizer ${n}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof bs))throw new F("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let s=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new F(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);s=e.loss.map(l=>ad(l))}else{const i=ad(e.loss);this.outputs.forEach(l=>{s.push(i)})}else{e.loss=e.loss;for(const i in e.loss)if(-1===this.outputNames.indexOf(i))throw new F(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)null==e.loss[i]&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),s.push(ad(e.loss[i]))}this.lossFunctions=s,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const l=this.internalOutputShapes[i];this.feedOutputNames.push(this.outputNames[i]),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[i])}const r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],tr("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==r.indexOf(i))continue;const l=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([l,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const o=function m$(n,t){if(null==n||Array.isArray(n)&&0===n.length)return t.map(s=>[]);let e;if("string"==typeof n||"function"==typeof n)e=[n];else{if(!Array.isArray(n)&&"object"!=typeof n)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);e=n}if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let o=e.hasOwnProperty(r)?e[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}(e.metrics,this.outputNames),a=(i,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[i]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,i])};tr("metric",()=>{for(let i=0;i<this.outputs.length;++i)-1===r.indexOf(i)&&(c=>{let d,p,f;for(const m of c){if("string"==typeof m&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(m)){const y=this.internalOutputShapes[i];let x;1===y[y.length-1]||this.lossFunctions[i]===Ml?-1!==["accuracy","acc"].indexOf(m)?p=lg:-1!==["crossentropy","ce"].indexOf(m)&&(p=LT):this.lossFunctions[i]===Ll?-1!==["accuracy","acc"].indexOf(m)?p=MT:-1!==["crossentropy","ce"].indexOf(m)&&(p=dg):-1!==["accuracy","acc"].indexOf(m)?p=ug:-1!==["crossentropy","ce"].indexOf(m)&&(p=hg),-1!==["accuracy","acc"].indexOf(m)?x="acc":-1!==["crossentropy","ce"].indexOf(m)&&(x="ce"),f=p,d=""+x}else f=jT(m),d=""+Bl(m);let g;tr(d,()=>{g=f}),a(i,d,g)}})(o[i])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,s,r={}){const o=r.batchSize??32;md(o);const i=this.standardizeUserDataXY(e,s,!0,o);try{const l=i[0].concat(i[1]);return this.makeTestFunction(),an(this.testLoop(this.testFunction,l,o,r.verbose,r.steps))}finally{sr(i[0],e),sr(i[1],s)}}evaluateDataset(e,s){var r=this;return(0,A.Z)(function*(){return r.makeTestFunction(),function u$(n,t,e){return fd.apply(this,arguments)}(r,e,s)})()}checkNumSamples(e,s,r,o="steps"){let a;if(null!=r){if(a=null,null!=s)throw new F(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${s}`)}else{if(null==e)throw new F(`Either the input data should have a defined shape, or ${o} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,s){if(Array.isArray(s)&&0===s.length)throw new F("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(s),a=this.retrieveSymbolicTensors(r?s:[s]),i=new $s;if(e instanceof W&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new F(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],e[u])}else for(const u of this.inputs){const c=e[u.name];if(null==c)throw new F(`No value is provided for the model's input ${u.name}`);i.add(u,c)}const l=Ca(a,i);return r?l:l[0]}retrieveSymbolicTensors(e){const s=Js(null,e.length);let r=e.length;for(const o of this.layers){const a=Array.isArray(o.output)?o.output:[o.output],i=a.map(l=>l.name);for(let l=0;l<e.length;++l){const u=i.indexOf(e[l]);if(-1!==u&&(s[l]=a[u],r--),0===r)break}if(0===r)break}if(r>0){const o=[];throw s.forEach((a,i)=>{null==a&&o.push(e[i])}),new F(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return s}predictLoop(e,s=32,r=!1){return H(()=>{const o=this.checkNumSamples(e);if(r)throw new Ve("Verbose predictLoop() is not implemented yet.");const a=yd(o,s),i=this.outputs.map(l=>[]);for(let l=0;l<a.length;++l)H(()=>{const d=ka(e,a[l][0],a[l][1]),p=[];if(Array.isArray(d))for(let m=0;m<d.length;++m)p.push({key:this.inputs[m],value:d[m]});else p.push({key:this.inputs[0],value:d});const f=new $s(p);return Ca(this.outputs,f)}).forEach((c,h)=>i[h].push(c));return an(i.map(l=>Kt(l,0)))})}predict(e,s={}){const r=kg(e);Tg(r,this.inputNames,this.feedInputShapes,!1);try{const o=s.batchSize??32;return md(o),this.predictLoop(r,o)}finally{sr(r,e)}}predictOnBatch(e){Tg(e,this.inputNames,this.feedInputShapes,!0);const s=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,s)}standardizeUserDataXY(e,s,r=!0,o){if(null==this.optimizer_)throw new $n("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let i=0;i<this.feedOutputShapes.length;++i){const l=this.feedOutputShapes[i];a.push(this.feedLossFns[i]===Ll?l.slice(0,l.length-1).concat([1]):l)}if(function p$(n,t,e){const s=ks(n.map(o=>o.shape[0]));s.sort();const r=ks(t.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new F(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new F(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!he(s,r))throw new F(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Sg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),s=Sg(s,this.feedOutputNames,a,!1,"target")),function f$(n,t,e){const s=[Pl,Ml,Na];for(let r=0;r<n.length;++r){const o=n[r],a=t[r],i=e[r];if(null!=a){if(a===Na&&1===o.shape[o.shape.length-1])throw new F(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(a)){const l=o.shape.slice(1),u=i.slice(1);for(let c=0;c<l.length;++c){const h=l[c],d=u[c];if(null!=d&&h!==d)throw new F(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(s,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=o&&o>0&&e[0].shape[0]%o!=0)throw new F(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,s]}standardizeUserData(e,s,r,o,a=!0,i){var l=this;return(0,A.Z)(function*(){const[u,c]=l.standardizeUserDataXY(e,s,a,i);if(null!=r)throw new Error("sample weight is not supported yet.");let h=null;if(null!=o){const d=bg(o,l.outputNames);h=[];for(let p=0;p<d.length;++p)h.push(yield wg(c[p],null,d[p]))}return[u,c,h]})()}testLoop(e,s,r,o=0,a){return H(()=>{const i=this.checkNumSamples(s,r,a,"steps"),l=[];if(o>0)throw new Ve("Verbose mode is not implemented yet.");if(null!=a)throw new Ve("steps mode in testLoop() is not implemented yet");{const u=yd(i,r),c=Sn(zn(0,i));for(let h=0;h<u.length;++h){const d=u[h][0],p=u[h][1],f=nr(c,d,p-d),m=gd(s,f),g=e(m);if(0===h)for(let y=0;y<g.length;++y)l.push(Oe(0));for(let y=0;y<g.length;++y)l[y]=de(l[y],V(p-d,g[y]))}for(let h=0;h<l.length;++h)l[h]=Ae(l[h],i)}return l})}getDedupedMetricsNames(){const e=this.metricsNames,s=[];for(let r=0;r<e.length;++r){const o=e[r];let a=o;Am(e,o)>1&&(a+=`_${Am(e.slice(0,r),o)}`),s.push(a)}return s}makeTrainFunction(){return e=>{const s=[],r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],u=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(()=>{const d=[];for(let g=0;g<this.inputs.length;++g)d.push({key:this.inputs[g],value:r[g]});const p=new $s(d),f=Ca(this.outputs,p,{training:!0});let m;for(let g=0;g<this.lossFunctions.length;++g){let x=(0,this.lossFunctions[g])(o[g],f[g]);null!=a[g]&&(x=s$(x,a[g]));const C=Tt(x);s.push(C),m=0===g?x:de(m,x)}for(let g=0;g<this.metricsTensors.length;++g){let y;if(this.outputs.length>1&&g<this.outputs.length)y=s[g];else{const C=this.metricsTensors[g][1];y=Tt((0,this.metricsTensors[g][0])(o[C],f[C]))}qn(y),i.push(y)}return m=Tt(m),this.calculateLosses().forEach(g=>{m=de(m,g)}),m},!0,u)].concat(i)}}makeTestFunction(){this.testFunction=e=>H(()=>{const s=[];let r;const o=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:o[c]});const l=new $s(i),u=Ca(this.outputs,l);for(let c=0;c<this.lossFunctions.length;++c){const d=Tt((0,this.lossFunctions[c])(a[c],u[c]));r=0===c?d:de(r,d),s.push(r)}for(let c=0;c<this.metricsTensors.length;++c){const d=this.metricsTensors[c][1],p=Tt((0,this.metricsTensors[c][0])(a[d],u[d]));s.push(p)}return s})}fit(e,s,r={}){var o=this;return(0,A.Z)(function*(){return function h$(n,t,e){return bd.apply(this,arguments)}(o,e,s,r)})()}fitDataset(e,s){var r=this;return(0,A.Z)(function*(){return function a$(n,t,e){return pd.apply(this,arguments)}(r,e,s)})()}trainOnBatch(e,s){var r=this;return(0,A.Z)(function*(){const o=yield r.standardizeUserData(e,s),a=o[0],i=o[1],u=r.makeTrainFunction()(a.concat(i)),c=[];for(const h of u){const d=yield h.data();c.push(d[0])}return je(u),an(c)})()}getNamedWeights(e){const s=[],r=null!=e&&e.trainableOnly,o=r?this.trainableWeights:this.weights,a=this.getWeights(r);for(let i=0;i<o.length;++i)r&&!o[i].trainable||s.push({name:o[i].originalName,tensor:a[i]});return s}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const s=Pc().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=s-Pc().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ds(this.loss);else if(Array.isArray(this.loss)){for(const s of this.loss)if("string"!=typeof s)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(s=>ds(s))}else{const s=Object.keys(this.loss);e={};const r=this.loss;for(const o of s){if("string"!=typeof r[o])throw new Error("Serialization of non-string loss is not supported.");e[o]=ds(r[o])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ds(Bl(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ds(Bl(e)));{const e={};for(const s in this.metrics)e[s]=ds(Bl(this.metrics[s]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const r=ps(ld(e.optimizer_config));let o,a;if("string"==typeof e.loss)o=Qs(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(i=>Qs(i));else if(null!=e.loss){o={};for(const i in e.loss)o[i]=Qs(e.loss[i])}if(Array.isArray(e.metrics))a=e.metrics.map(i=>Qs(i));else if(null!=e.metrics){a={};for(const i in e.metrics)a[i]=Qs(e.metrics[i])}this.compile({loss:o,metrics:a,optimizer:r})}save(e,s){var r=this;return(0,A.Z)(function*(){if("string"==typeof e){const h=(n=>Nt.getSaveHandlers(n))(e);if(0===h.length)throw new F(`Cannot find any save handlers for URL '${e}'`);if(h.length>1)throw new F(`Found more than one (${h.length}) save handlers for URL '${e}'`);e=h[0]}if(null==e.save)throw new F("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const o=yield Jp(r.getNamedWeights(s)),u={modelTopology:r.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.8.6",convertedBy:null};if(null!=s&&s.includeOptimizer&&null!=r.optimizer){u.trainingConfig=r.getTrainingConfig();const h="optimizer",{data:d,specs:p}=yield Jp(yield r.optimizer.getWeights(),h);o.specs.push(...p),o.data=xc([o.data,d])}return null!=r.userDefinedMetadata&&(fg(r.userDefinedMetadata,r.name,!0),u.userDefinedMetadata=r.userDefinedMetadata),u.weightData=o.data,u.weightSpecs=o.specs,e.save(u)})()}setUserDefinedMetadata(e){fg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}return n.className="Model",n})();re(Fr),re((()=>{class n extends Fr{}return n.className="Functional",n})()),re((()=>{class n extends Fr{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:El("sequential_"),null!=e.layers)for(const s of e.layers)this.add(s)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new F(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const s=e instanceof n||e instanceof Fr;let r;if(s){if(r=e,1!==r.outputs.length)throw new F("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==r.inputs.length)throw new F("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new F("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=function bT(n){if(null==n.batchShape&&null==n.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=n.batchShape&&null!=n.shape)throw new F("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;null!=n.shape&&null==t&&(t=[null].concat(n.shape));let e=n.dtype;return null==e&&(e="float32"),new Ol({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(s)this.outputs=r.outputs,this.inputs=r.inputs;else{if(1!==e.inboundNodes.length)throw new F(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new F("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=sg(this.outputs[0])}this.inboundNodes=[],new Rl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Js(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,s){return null==this.model&&this.build(),this.model.call(e,s)}build(e){if(lt(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Fr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,s,r=console.log){this.built||this.build(),super.summary(e,s,r)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,s,r={}){if(!this.built)throw new $n("The model needs to be compiled before being used.");return this.model.evaluate(e,s,r)}evaluateDataset(e,s){var r=this;return(0,A.Z)(function*(){if(!r.built)throw new $n("The model needs to be compiled before being used.");return r.model.evaluateDataset(e,s)})()}predict(e,s={}){return null==this.model&&this.build(),this.model.predict(e,s)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}fit(e,s,r={}){var o=this;return(0,A.Z)(function*(){if(!o.built)throw new $n("The model needs to be compiled before being used.");return o.model.fit(e,s,r)})()}fitDataset(e,s){var r=this;return(0,A.Z)(function*(){if(!r.built)throw new $n("The model needs to be compiled before being used.");return r.model.fitDataset(e,s)})()}trainOnBatch(e,s){var r=this;return(0,A.Z)(function*(){return r.model.trainOnBatch(e,s)})()}static fromConfig(e,s,r={},o=!1){let a,i={};if(s instanceof Array){if(null==s[0].className||"Merge"===s[0].className)throw new F("Legacy serialization format not supported yet.");a=s}else k(null!=s.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=s.layers,delete s.layers,i=s;const l=new e(i);if(!(l instanceof n))throw new Ve(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const u of a){const h=ps(u,void 0,o);o&&h.setFastWeightInitDuringBuild(!0),l.add(h)}return l}set stopTraining(e){if(null==this.model)throw new F("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new F("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const s of this.layers){const r={};r.className=s.getClassName(),r.config=s.getConfig(),e.push(r)}return{name:this.name,layers:e}}}return n.className="Sequential",n})());class cn extends Nr{getConfig(){return{}}}re((()=>{class n extends cn{apply(e,s=1){return function oT(n,t=1){if(1!==t)throw new Ve(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return il(n)}(e,s)}}return n.className="elu",n})()),re((()=>{class n extends cn{apply(e){return Pf(e)}}return n.className="selu",n})()),re((()=>{class n extends cn{apply(e){return Cs(e)}}return n.className="relu",n})()),re((()=>{class n extends cn{apply(e){return H(()=>la(6,Cs(e)))}}return n.className="relu6",n})()),re((()=>{class n extends cn{apply(e){return e}}return n.className="linear",n})()),re((()=>{class n extends cn{apply(e){return ua(e)}}return n.className="sigmoid",n})()),re((()=>{class n extends cn{apply(e){return function iT(n){return H(()=>{const t=de(.5,V(.2,n));return mn(t,0,1)})}(e)}}return n.className="hardSigmoid",n})()),re((()=>{class n extends cn{apply(e){return dl(e)}}return n.className="softplus",n})()),re((()=>{class n extends cn{apply(e){return function aT(n){return H(()=>Ae(n,jt(n).add(1)))}(e)}}return n.className="softsign",n})()),re((()=>{class n extends cn{apply(e){return zf(e)}}return n.className="tanh",n})());let $g=(()=>{class n extends cn{apply(e,s=-1){return th(e,s)}}return n.className="softmax",n})();function _s(n){return n.getClassName()}function kd(n,t={}){return ma(n,vn.getMap().classNameMap,t,"activation")}function Es(n){if(null==n){return kd({className:"linear",config:{}})}if("string"==typeof n){const t={};return t.className=n,t.config={},kd(t)}return n instanceof cn?n:kd(n)}re($g),re((()=>{class n extends cn{apply(e,s=-1){return Af(e,s)}}return n.className="logSoftmax",n})()),re((()=>{class n extends cn{apply(e,s=1){return H(()=>ua(e.mul(s)).mul(e))}}return n.className="swish",n})());class _g extends Nr{}re((()=>{class n extends _g{constructor(e){super(),function Id(n){if(null!=n&&"object"!=typeof n)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return H(()=>{let s=Pt([1]);return this.hasL1&&(s=de(s,Re(V(this.l1,jt(e))))),this.hasL2&&(s=de(s,Re(V(this.l2,wa(e))))),s.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,s){return new e({l1:s.l1,l2:s.l2})}}return n.className="L1L2",n})());const Eg={l1l2:"L1L2"};function ut(n){return jh(n)}function Dg(n,t={}){return ma(n,vn.getMap().classNameMap,t,"regularizer")}function wt(n){return null==n?null:"string"==typeof n?Dg({className:n in Eg?Eg[n]:n,config:{}}):n instanceof _g?n:Dg(n)}function Pr(n,t,e){if("number"==typeof n)return Js(n,t);if(n.length!==t)throw new F(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!QS(r))throw new F(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Bn(n,t,e,s,r=1){if(null==n)return n;let a;return a="same"===e?n:n-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function Gl(n,t,e,s){if(null==n)return null;if("valid"===s)n=n*t+Ss([e-t,0]);else{if("same"!==s)throw new F(`Unsupport padding mode: ${s}.`);n*=t}return n}function Td(n,t){return H(()=>(Dt(t),"channelsFirst"===t?it(n,[0,2,3,1]):n))}function Ag(n,t){return H(()=>(Dt(t),"channelsFirst"===t?it(n,[0,2,3,4,1]):n))}function $d(n,t,e,s=[1,1],r="valid",o,a,i=null){return H(()=>{if(null==o&&(o="channelsLast"),Dt(o),3!==n.rank&&4!==n.rank)throw new F(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(3!==t.rank&&4!==t.rank)throw new F(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=Td(n,o);if("causal"===r)throw new Ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=yN({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:a,dataFormat:"NHWC",bias:e,activation:i}),"channelsFirst"===o&&(l=it(l,[0,3,1,2])),l})}re((()=>{class n extends Je{constructor(e){super(e??{}),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,s){e=Ue(e);let r=Cs(e);return null!=this.maxValue&&(r=mn(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ReLU",n})()),re((()=>{class n extends Je{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=e.alpha??this.DEFAULT_ALPHA}call(e,s){const r=Ue(e);return Hc(r,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return n.className="LeakyReLU",n})()),re((()=>{class n extends Je{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=bt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=wt(e.alphaRegularizer),this.alphaConstraint=zt(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new F(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const s=(e=lt(e)).slice(1);if(null!=this.sharedAxes)for(const o of this.sharedAxes)s[o-1]=1;this.alpha=this.addWeight("alpha",s,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(null!=this.sharedAxes)for(let o=1;o<e.length;++o)r[o]=e[o];this.inputSpec=[new Xt({ndim:e.length,axes:r})],this.built=!0}call(e,s){return e=Ue(e),Zc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ct(this.alphaInitializer),alphaRegularizer:ut(this.alphaRegularizer),alphaConstraint:Mt(this.alphaConstraint),sharedAxes:this.sharedAxes},s=super.getConfig();return Object.assign(e,s),e}}return n.className="PReLU",n})()),re((()=>{class n extends Je{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Ve(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha??this.DEFAULT_ALPHA}call(e,s){const r=Ue(e);return il(r)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ELU",n})()),re((()=>{class n extends Je{constructor(e){super(e??{}),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=e.theta??this.DEFAULT_THETA}call(e,s){const r=Ue(e);return r.mul(xa(r.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ThresholdedReLU",n})()),re((()=>{class n extends Je{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new $g).apply,this.axis=e.axis??this.DEFAULT_AXIS}call(e,s){const r=Ue(e);return this.softmax(r,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Softmax",n})());class Ul extends Je{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ul.verifyArgs(e),this.rank=t,Gt(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ve(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Pr(e.kernelSize,t,"kernelSize"),this.strides=Pr(e.strides??1,t,"strides"),this.padding=e.padding??"valid",yn(this.padding),this.dataFormat=e.dataFormat??"channelsLast",Dt(this.dataFormat),this.activation=Es(e.activation),this.useBias=e.useBias??!0,this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=zt(e.biasConstraint),this.biasRegularizer=wt(e.biasRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.dilationRate=Pr(e.dilationRate??1,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new F(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new F(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new F(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(gn("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!qh(t.kernelSize,"number",1,3))throw new F(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:_s(this.activation),useBias:this.useBias,biasInitializer:Ct(this.biasInitializer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),biasConstraint:Mt(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Lr extends Ul{constructor(t,e){super(t,e),this.kernel=null,Lr.verifyArgs(e),this.filters=e.filters,Gt(this.filters,"filters"),this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=zt(e.kernelConstraint),this.kernelRegularizer=wt(e.kernelRegularizer)}build(t){t=lt(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new F(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return H(()=>{let s;t=Ue(t);const r=null==this.bias?null:this.bias.read(),o=Om(this.activation.getClassName());if(null!=o&&2===this.rank)s=$d(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(1===this.rank)s=function Rg(n,t,e,s=1,r="valid",o,a=1){return H(()=>{if(null==o&&(o="channelsLast"),Dt(o),3!==n.shape.length)throw new F(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(3!==t.shape.length)throw new F(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=e&&1!==e.shape.length)throw new F(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===o&&(n=it(n,[0,2,1])),"causal"===r)throw new Ve("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=$f(n,t,s,"same"===r?"same":"valid","NWC",a);return null!=e&&(i=Jn(i,e)),i})}(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)s=$d(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ve("convolutions greater than 3D are not implemented yet.");s=function Og(n,t,e,s=[1,1,1],r="valid",o,a){return H(()=>{if(null==o&&(o="channelsLast"),Dt(o),4!==n.rank&&5!==n.rank)throw new F(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(4!==t.rank&&5!==t.rank)throw new F(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=Ag(n,o);if("causal"===r)throw new Ve("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Hw(i,t,s,"same"===r?"same":"valid","NDHWC",a),null!=e&&(i=Jn(i,e)),"channelsFirst"===o&&(i=it(i,[0,4,1,2,3])),i})}(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=lt(t);const e=[],s="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let o=0;o<s.length;++o){const a=Bn(s[o],this.kernelSize[o],this.padding,this.strides[o],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[o]);e.push(a)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ct(this.kernelInitializer),kernelRegularizer:ut(this.kernelRegularizer),kernelConstraint:Mt(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new F(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}let Fg=(()=>{class n extends Lr{constructor(e){super(2,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!qh(e.kernelSize,"number",1,2))throw new F(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv2D",n})();re(Fg),re((()=>{class n extends Lr{constructor(e){super(3,e),n.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new F(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv3D",n})()),re((()=>{class n extends Fg{constructor(e){if(super(e),this.inputSpec=[new Xt({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new F(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=lt(e)).length)throw new F("Input should have rank 4; Received input shape: "+JSON.stringify(e));const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new F("The channel dimension of the inputs should be defined. Found `None`.");const r=e[s],o=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Xt({ndim:4,axes:{[s]:r}})],this.built=!0}call(e,s){return H(()=>{let r=Ue(e);if(4!==r.shape.length)throw new F(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const o=r.shape;let i,l;"channelsFirst"===this.dataFormat?(i=2,l=3):(i=1,l=2);const c=o[l],d=this.kernelSize[1],f=this.strides[1],y=[o[0],Gl(o[i],this.strides[0],this.kernelSize[0],this.padding),Gl(c,f,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=it(r,[0,2,3,1]));let x=_f(r,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(x=it(x,[0,3,1,2])),null!=this.bias&&(x=Jn(x,this.bias.read(),this.dataFormat)),null!=this.activation&&(x=this.activation.apply(x)),x})}computeOutputShape(e){const s=(e=lt(e)).slice();let r,o,a;"channelsFirst"===this.dataFormat?(r=1,o=2,a=3):(r=3,o=1,a=2);const i=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return s[r]=this.filters,s[o]=Gl(s[o],u,i,this.padding),s[a]=Gl(s[a],c,l,this.padding),s}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}return n.className="Conv2DTranspose",n})());let b$=(()=>{class n extends Lr{constructor(e,s){if(super(e,s),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==s.filters)throw new F("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=s.kernelInitializer||null!=s.kernelRegularizer||null!=s.kernelConstraint)throw new F("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=s.padding&&"same"!==s.padding&&"valid"!==s.padding)throw new F(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(s.padding)}`);this.depthMultiplier=s.depthMultiplier??1,this.depthwiseInitializer=bt(s.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=wt(s.depthwiseRegularizer),this.depthwiseConstraint=zt(s.depthwiseConstraint),this.pointwiseInitializer=bt(s.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=wt(s.pointwiseRegularizer),this.pointwiseConstraint=zt(s.pointwiseConstraint)}build(e){if((e=lt(e)).length<this.rank+2)throw new F(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s]||e[s]<0)throw new F(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[s])}`);const r=e[s],o=this.kernelSize.concat([r,this.depthMultiplier]),a=[];for(let l=0;l<this.rank;++l)a.push(1);a.push(r*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):null,this.inputSpec=[new Xt({ndim:this.rank+2,axes:{[s]:r}})],this.built=!0}call(e,s){return H(()=>{let r;if(e=Ue(e),1===this.rank)throw new Ve("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=it(e,[0,2,3,1])),r=Lf(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=Jn(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),"channelsFirst"===this.dataFormat&&(r=it(r,[0,3,1,2])),r})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ct(this.depthwiseInitializer),e.pointwiseInitializer=Ct(this.pointwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.pointwiseRegularizer=ut(this.pointwiseRegularizer),e.depthwiseConstraint=Mt(this.depthwiseConstraint),e.pointwiseConstraint=Mt(this.pointwiseConstraint),e}}return n.className="SeparableConv",n})();function Pg(n,t,e,s){if(Array.isArray(n)){if(null!=t||null!=e)throw new F("When inputs is an array, neither initialState or constants should be provided");null!=s&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(o){return null==o||Array.isArray(o)?o:[o]}return{inputs:n,initialState:t=r(t),constants:e=r(e)}}function Lg(n,t,e,s=!1,r,o,a=!1,i=!1){return H(()=>{const l=t.shape.length;if(l<3)throw new F(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(zn(2,l));if(t=it(t,u),null!=o)throw new Ve("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=r.asType("bool").asType("float32")).rank===l-1&&(r=Fn(r,-1)),r=it(r,u)),s&&(t=Ks(t,0),null!=r&&(r=Ks(r,0)));const c=[];let h,d=e;const p=t.shape[0],f=$r(t);let m,g;null!=r&&(m=$r(r));for(let y=0;y<p;++y){const x=f[y],C=H(()=>n(x,d));if(null==r)h=C[0],d=C[1];else{const w=H(()=>{const N=m[y],S=kn(N).sub(N);return{output:C[0].mul(N).add(d[0].mul(S)),newStates:d.map((R,z)=>C[1][z].mul(N).add(R.mul(S)))}});h=w.output,d=w.newStates}i&&c.push(h)}return i&&(g=qs(c,1)),[h,g,d]})}re((()=>{class n extends b${constructor(e){super(2,e)}}return n.className="SeparableConv2D",n})()),re((()=>{class n extends Lr{constructor(e){super(1,e),n.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!qh(e.kernelSize,"number",1,1))throw new F(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}return n.className="Conv1D",n})()),re((()=>{class n extends Je{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,s){return H(()=>{if(e=Ue(e),"channelsLast"===this.dataFormat){const r=Tl(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Tl(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const r=Tl(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Tl(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Cropping2D",n})()),re((()=>{class n extends Je{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size??this.DEFAULT_SIZE,this.dataFormat=e.dataFormat??"channelsLast",Dt(this.dataFormat),this.interpolation=e.interpolation??"nearest",function ZS(n){er(jS,"InterpolationFormat",n)}(this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,s){return H(()=>{let r=Ue(e);const o=r.shape;if("channelsFirst"===this.dataFormat){r=it(r,[0,2,3,1]);const a=this.size[0]*o[2],i=this.size[1]*o[3],l="nearest"===this.interpolation?r.resizeNearestNeighbor([a,i]):r.resizeBilinear([a,i]);return it(l,[0,3,1,2])}{const a=this.size[0]*o[1],i=this.size[1]*o[2];return"nearest"===this.interpolation?r.resizeNearestNeighbor([a,i]):r.resizeBilinear([a,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return n.className="UpSampling2D",n})()),re((()=>{class n extends Ul{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier??1,this.depthwiseInitializer=bt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=zt(e.depthwiseConstraint),this.depthwiseRegularizer=wt(e.depthwiseRegularizer)}build(e){if((e=lt(e)).length<4)throw new F(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const s="channelsFirst"===this.dataFormat?1:3;if(null==e[s]||e[s]<0)throw new F(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[s]}).`);const r=e[s];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return H(()=>{let r=function w$(n,t,e=[1,1],s="valid",r,o){return H(()=>{null==r&&(r="channelsLast"),Dt(r);let a=Td(n,r);if(4!==n.rank)throw new F(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(4!==t.rank)throw new F(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=aa(a,t,e,"same"===s?"same":"valid","NHWC",o),"channelsFirst"===r&&(a=it(a,[0,3,1,2])),a})}(e=Ue(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=Jn(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=lt(e);const r="channelsFirst"===this.dataFormat?e[3]:e[2],o="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Bn("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),i=Bn(r,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],o,a,i]:[e[0],a,i,o]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ct(this.depthwiseInitializer),e.depthwiseRegularizer=ut(this.depthwiseRegularizer),e.depthwiseConstraint=Mt(this.depthwiseRegularizer),e}}return n.className="DepthwiseConv2D",n})());let Ia=(()=>{class n extends Je{constructor(e){let s;if(super(e),null==e.cell)throw new F("cell property is missing for the constructor of RNN.");if(s=Array.isArray(e.cell)?new Vg({cells:e.cell}):e.cell,null==s.stateSize)throw new F("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=s,this.returnSequences=e.returnSequences??!1,this.returnState=e.returnState??!1,this.goBackwards=e.goBackwards??!1,this._stateful=e.stateful??!1,this.unroll=e.unroll??!1,this.supportsMasking=!0,this.inputSpec=[new Xt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return this.states_??zn(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(s=>null)}setStates(e){this.states_=e}computeOutputShape(e){ed(e)&&(e=e[0]);let s=this.cell.stateSize;Array.isArray(s)||(s=[s]);const r=s[0];let o;if(o=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){const a=[];for(const i of s)a.push([e[0],i]);return[o].concat(a)}return o}computeMask(e,s){return H(()=>{Array.isArray(s)&&(s=s[0]);const r=this.returnSequences?s:null;if(this.returnState){const o=this.states.map(a=>null);return[r].concat(o)}return r})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,s=[];for(let r=0;r<e;++r)s.push(null);return s}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Ve("Constants support is not implemented in RNN yet.");ed(e)&&(e=e[0]);const r=this.stateful?e[0]:null,o=e.slice(2);this.inputSpec[0]=new Xt({shape:[r,null,...o]});const a=[e[0]].concat(e.slice(2));let i;if(this.cell.build(a),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!he(this.stateSpec.map(l=>l.shape[l.shape.length-1]),i))throw new F(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(l=>new Xt({shape:[null,l]}));this.stateful&&this.resetStates()}resetStates(e,s=!1){H(()=>{if(!this.stateful)throw new Zn("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(null==r)throw new F("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>Pt([r,o])):[Pt([r,this.cell.stateSize])];else if(null==e)je(this.states_),null!=this.keptStates&&(je(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Pt([r,o])):this.states_[0]=Pt([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new F(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===s?this.keptStates.push(this.states_.slice()):je(this.states_);for(let o=0;o<this.states_.length;++o){const a=e[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,l=[r,i];if(!he(a.shape,l))throw new F(`State ${o} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${a.shape}`);this.states_[o]=a}}this.states_=this.states_.map(o=>qn(o.clone()))})}apply(e,s){let r=null==s?null:s.initialState,o=null==s?null:s.constants;null==s&&(s={});const a=Pg(e,r,o,this.numConstants);e=a.inputs,r=a.initialState,o=a.constants;let i=[],l=[];if(null!=r){s.initialState=r,i=i.concat(r),this.stateSpec=[];for(const c of r)this.stateSpec.push(new Xt({shape:c.shape}));l=l.concat(this.stateSpec)}if(null!=o&&(s.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof es){const c=[e].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(c,s);return this.inputSpec=d,p}return super.apply(e,s)}call(e,s){return H(()=>{const r=null==s?null:s.mask,o=null==s?null:s.training;let a=null==s?null:s.initialState;e=Ue(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new F(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:o},c=Lg((m,g)=>{const y=this.cell.call([m].concat(g),l);return[y[0],y.slice(1)]},e,a,this.goBackwards,r,null,this.unroll,this.returnSequences),h=c[0],d=c[1],p=c[2];this.stateful&&this.resetStates(p,o);const f=this.returnSequences?d:h;return this.returnState?[f].concat(p):f})}getInitialState(e){return H(()=>{let s=Pt(e.shape);return s=Re(s,[1,2]),s=ba(s),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?Jh(s,[1,r]):s):this.cell.stateSize>1?[Jh(s,[1,this.cell.stateSize])]:[s]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),s={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(s.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===n.className&&(s.cell={className:this.cell.getClassName(),config:r}),Object.assign({},r,e,s)}static fromConfig(e,s,r={}){const a=ps(s.cell,r);return new e(Object.assign(s,{cell:a}))}}return n.className="RNN",n})();re(Ia);class Hl extends Je{}let Mg=(()=>{class n extends Hl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gt(this.units,"units"),this.activation=Es(e.activation??this.DEFAULT_ACTIVATION),this.useBias=e.useBias??!0,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=zt(e.kernelConstraint),this.recurrentConstraint=zt(e.recurrentConstraint),this.biasConstraint=zt(e.biasConstraint),this.dropout=Rr([1,Ss([0,e.dropout??0])]),this.recurrentDropout=Rr([1,Ss([0,e.recurrentDropout??0])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=lt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return H(()=>{if(2!==e.length)throw new F(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];const o=s.training??!1;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ds({ones:()=>kn(e),rate:this.dropout,training:o})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ds({ones:()=>kn(r),rate:this.recurrentDropout,training:o}));const i=this.dropoutMask,l=this.recurrentDropoutMask;a=Yn(null!=i?V(e,i):e,this.kernel.read()),null!=this.bias&&(a=Jn(a,this.bias.read())),null!=l&&(r=V(r,l));let u=de(a,Yn(r,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:_s(this.activation),useBias:this.useBias,kernelInitializer:Ct(this.kernelInitializer),recurrentInitializer:Ct(this.recurrentInitializer),biasInitializer:Ct(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:Mt(this.kernelConstraint),recurrentConstraint:Mt(this.recurrentConstraint),biasConstraint:Mt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,s)}}return n.className="SimpleRNNCell",n})();re(Mg),re((()=>{class n extends Ia{constructor(e){e.cell=new Mg(e),super(e)}call(e,s){return H(()=>(null!=this.cell.dropoutMask&&(je(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(je(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return new e(s)}}return n.className="SimpleRNN",n})());let zg=(()=>{class n extends Hl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new F("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Gt(this.units,"units"),this.activation=Es(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Es(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias??!0,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=zt(e.kernelConstraint),this.recurrentConstraint=zt(e.recurrentConstraint),this.biasConstraint=zt(e.biasConstraint),this.dropout=Rr([1,Ss([0,e.dropout??0])]),this.recurrentDropout=Rr([1,Ss([0,e.recurrentDropout??0])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=lt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,s){return H(()=>{if(2!==e.length)throw new F(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const r=s.training??!1;let o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ds({ones:()=>kn(e),rate:this.dropout,training:r,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ds({ones:()=>kn(o),rate:this.recurrentDropout,training:r,count:3}));const i=this.recurrentDropoutMask;let l,u,c;0<this.dropout&&this.dropout<1&&(e=V(e,this.dropoutMask[0]));let h=Yn(e,this.kernel.read());this.useBias&&(h=Jn(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=V(o,i[0]));const d=this.recurrentKernel.read(),[p,f]=In(d,[2*this.units,this.units],d.rank-1),m=Yn(o,p),[g,y,x]=In(h,3,h.rank-1),[C,w]=In(m,2,m.rank-1);l=this.recurrentActivation.apply(de(g,C)),u=this.recurrentActivation.apply(de(y,w));const N=Yn(V(u,o),f);c=this.activation.apply(de(x,N));const S=de(V(l,o),V(de(1,Et(l)),c));return[S,S]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:_s(this.activation),recurrentActivation:_s(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ct(this.kernelInitializer),recurrentInitializer:Ct(this.recurrentInitializer),biasInitializer:Ct(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:Mt(this.kernelConstraint),recurrentConstraint:Mt(this.recurrentConstraint),biasConstraint:Mt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,s)}}return n.className="GRUCell",n})();re(zg),re((()=>{class n extends Ia{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new zg(e),super(e)}call(e,s){return H(()=>(null!=this.cell.dropoutMask&&(je(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(je(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return n.className="GRU",n})());let _d=(()=>{class n extends Hl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gt(this.units,"units"),this.activation=Es(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Es(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias??!0,this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=bt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=wt(e.kernelRegularizer),this.recurrentRegularizer=wt(e.recurrentRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.kernelConstraint=zt(e.kernelConstraint),this.recurrentConstraint=zt(e.recurrentConstraint),this.biasConstraint=zt(e.biasConstraint),this.dropout=Rr([1,Ss([0,e.dropout??0])]),this.recurrentDropout=Rr([1,Ss([0,e.recurrentDropout??0])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;let o;if(e=lt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const a=this.biasInitializer,i=this.units;o=new((s=class extends En{apply(u,c){const h=a.apply([i]),d=(new jm).apply([i]),p=a.apply([2*i]);return Gm(Gm(h,d),p)}}).className="CustomInit",s)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,s){return H(()=>{const r=s.training??!1;if(3!==e.length)throw new F(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ds({ones:()=>kn(e),rate:this.dropout,training:r,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ds({ones:()=>kn(o),rate:this.recurrentDropout,training:r,count:4}));const l=this.recurrentDropoutMask;let u,c,h,d;0<this.dropout&&this.dropout<1&&(e=V(e,this.dropoutMask[0]));let p=Yn(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=V(o,l[0])),p=de(p,Yn(o,this.recurrentKernel.read())),this.useBias&&(p=Jn(p,this.bias.read()));const[f,m,g,y]=In(p,4,p.rank-1);u=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(m),h=de(V(c,a),V(u,this.activation.apply(g))),d=this.recurrentActivation.apply(y);const x=V(d,this.activation.apply(h));return[x,x,h]})}getConfig(){const e=super.getConfig(),s={units:this.units,activation:_s(this.activation),recurrentActivation:_s(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ct(this.kernelInitializer),recurrentInitializer:Ct(this.recurrentInitializer),biasInitializer:Ct(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ut(this.kernelRegularizer),recurrentRegularizer:ut(this.recurrentRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:Mt(this.kernelConstraint),recurrentConstraint:Mt(this.recurrentConstraint),biasConstraint:Mt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,s)}}return n.className="LSTMCell",n})();re(_d),re((()=>{class n extends Ia{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new _d(e),super(e)}call(e,s){return H(()=>(null!=this.cell.dropoutMask&&(je(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(je(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})))}static fromConfig(e,s){return 0===s.implmentation&&(s.implementation=1),new e(s)}}return n.className="LSTM",n})());let Vg=(()=>{class n extends Hl{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const s of this.cells.slice().reverse())Array.isArray(s.stateSize)?e.push(...s.stateSize):e.push(s.stateSize);return e}call(e,s){return H(()=>{let r=e.slice(1);const o=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?o.push(r.splice(0,l.stateSize.length)):o.push(r.splice(0,1));o.reverse();const a=[];let i;for(let l=0;l<this.cells.length;++l){const u=this.cells[l];r=o[l],i=0===l?[e[0]].concat(r):[i[0]].concat(r),i=u.call(i,s),a.push(i.slice(1))}r=[];for(const l of a.slice().reverse())r.push(...l);return[i[0]].concat(r)})}build(e){let s;ed(e)&&(e=e[0]),this.cells.forEach((r,o)=>{tr(`RNNCell_${o}`,()=>{r.build(e),s=Array.isArray(r.stateSize)?r.stateSize[0]:r.stateSize,e=[e[0],s]})}),this.built=!0}getConfig(){const e=super.getConfig(),o={cells:this.cells.map(a=>({className:a.getClassName(),config:a.getConfig()}))};return Object.assign({},e,o)}static fromConfig(e,s,r={}){const o=[];for(const a of s.cells)o.push(ps(a,r));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const s of this.cells)e.push(...s.nonTrainableWeights);if(!this.trainable){const s=[];for(const r of this.cells)s.push(...r.trainableWeights);return s.concat(e)}return e}getWeights(){const e=[];for(const s of this.cells)e.push(...s.weights);return td(e)}setWeights(e){const s=[];for(const r of this.cells){const a=e.splice(r.weights.length);for(let i=0;i<r.weights.length;++i)s.push([r.weights[i],a[i]])}nd(s)}}return n.className="StackedRNNCells",n})();function Ds(n){const{ones:t,rate:e,training:s=!1,count:r=1}=n,o=()=>Hm(t(),e),a=()=>va(o,t,s);return!r||r<=1?qn(a().clone()):Array(r).fill(void 0).map(a).map(l=>qn(l.clone()))}re(Vg);let N$=(()=>{class n extends Ia{constructor(e){if(e.unroll)throw new Ve("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ve("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Xt({ndim:5})]}call(e,s){return H(()=>{if(null!=this.cell.dropoutMask&&(je(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(je(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),s&&s.constants)throw new F("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==s?null:s.mask,training:null==s?null:s.training,initialState:null==s?null:s.initialState})})}computeOutputShape(e){let s=this.computeSingleOutputShape(e);return this.returnSequences||(s=[s[0],...s.slice(2)]),this.returnState&&(s=[s,...Array(2).fill([e[0],...s.slice(-3)])]),s}getInitialState(e){return H(()=>{const{stateSize:s}=this.cell,o=this.computeSingleOutputShape(e.shape),i=Pt([o[0],...o.slice(2)]);return Array.isArray(s)?Array(s.length).fill(i):[i]})}resetStates(e,s=!1){H(()=>{if(!this.stateful)throw new Zn("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,o=this.computeSingleOutputShape(r),a=[o[0],...o.slice(2)];if(null==r[0])throw new F("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>Pt(a)):[Pt(a)];else if(null==e)je(this.states_),null!=this.keptStates&&(je(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Pt(a)):this.states_[0]=Pt(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new F(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);s?this.keptStates.push(this.states_.slice()):je(this.states_);for(let l=0;l<this.states_.length;++l){const u=e[l],c=a;if(!he(u.shape,c))throw new F(`State ${l} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>qn(l.clone()))})}computeSingleOutputShape(e){const{dataFormat:s,filters:r,kernelSize:o,padding:a,strides:i,dilationRate:l}=this.cell,u="channelsFirst"===s,h=e[u?4:3],d=Bn(e[u?3:2],o[0],a,i[0],l[0]),p=Bn(h,o[1],a,i[1],l[1]);return[...e.slice(0,2),...u?[r,d,p]:[d,p,r]]}}return n.className="ConvRNN2D",n})(),Bg=(()=>{class n extends _d{constructor(e){const{filters:s,kernelSize:r,strides:o,padding:a,dataFormat:i,dilationRate:l}=e;super(Object.assign({},e,{units:s})),this.filters=s,Gt(this.filters,"filters"),this.kernelSize=Pr(r,2,"kernelSize"),this.kernelSize.forEach(u=>Gt(u,"kernelSize")),this.strides=Pr(o||1,2,"strides"),this.strides.forEach(u=>Gt(u,"strides")),this.padding=a||"valid",yn(this.padding),this.dataFormat=i||"channelsLast",Dt(this.dataFormat),this.dilationRate=Pr(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>Gt(u,"dilationRate"))}build(e){var s;e=lt(e);const r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r])throw new F(`The channel dimension of the input should be defined. Found ${e[r]}`);const i=this.kernelSize.concat([e[r],4*this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const c=this.biasInitializer,h=this.filters;u=new((s=class extends En{apply(p,f){return Yh([c.apply([h]),Ns([h]),c.apply([2*h])])}}).className="CustomInit",s)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,s){return H(()=>{if(3!==e.length)throw new F(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const r=s.training||!1,o=e[0],a=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ds({ones:()=>kn(o),rate:this.dropout,training:r,count:4}));const u=this.dropoutMask,c=(le,pe,fe)=>pe&&pe[fe]?V(pe[fe],le):le;let h=c(o,u,0),d=c(o,u,1),p=c(o,u,2),f=c(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ds({ones:()=>kn(a),rate:this.recurrentDropout,training:r,count:4}));const m=this.recurrentDropoutMask;let g=c(a,m,0),y=c(a,m,1),x=c(a,m,2),C=c(a,m,3);const[N,S,I,E]=In(this.kernel.read(),4,3),[R,z,K,J]=this.useBias?In(this.bias.read(),4):[null,null,null,null];h=this.inputConv(h,N,R,this.padding),d=this.inputConv(d,S,z,this.padding),p=this.inputConv(p,I,K,this.padding),f=this.inputConv(f,E,J,this.padding);const[Y,Q,Z,X]=In(this.recurrentKernel.read(),4,3);g=this.recurrentConv(g,Y),y=this.recurrentConv(y,Q),x=this.recurrentConv(x,Z),C=this.recurrentConv(C,X);const ne=this.recurrentActivation.apply(de(h,g)),ee=this.recurrentActivation.apply(de(d,y)),se=de(V(ee,i),V(ne,this.activation.apply(de(p,x)))),oe=V(this.recurrentActivation.apply(de(f,C)),this.activation.apply(se));return[oe,oe,se]})}getConfig(){const r=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]])}return e}(super.getConfig(),["units"]);return Object.assign({},r,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,s,r,o){const a=Us(e,s,this.strides,o||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return r?Jn(a,r,this.dataFormat):a}recurrentConv(e,s){return Us(e,s,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}return n.className="ConvLSTM2DCell",n})();re(Bg),re((()=>{class n extends N${constructor(e){const s=new Bg(e);super(Object.assign({},e,{cell:s}))}static fromConfig(e,s){return new e(s)}}return n.className="ConvLSTM2D",n})());let Wg=(()=>{class n extends Je{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const s=e.shape,r=[];for(let o=0;o<this.noiseShape.length;++o)r.push(this.noiseShape[o]??s[o]);return r}call(e,s){return H(()=>{this.invokeCallHook(e,s);const r=Ue(e);if(0<this.rate&&this.rate<1){const o=s.training??!1,a=this.getNoiseShape(r);return va(()=>Hm(r,this.rate,a,this.seed),()=>r,o)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},s=super.getConfig();return Object.assign(e,s),e}dispose(){return super.dispose()}}return n.className="Dropout",n})();re(Wg),re((()=>{class n extends Wg{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const s=e.shape;return[s[0],1,s[2]]}}return n.className="SpatialDropout1D",n})()),re((()=>{class n extends Je{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=[s,e.inputDim]}this.units=e.units,Gt(this.units,"units"),this.activation=Es(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=bt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=bt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=zt(e.kernelConstraint),this.biasConstraint=zt(e.biasConstraint),this.kernelRegularizer=wt(e.kernelRegularizer),this.biasRegularizer=wt(e.biasRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const s=(e=lt(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[s,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:s}}],this.built=!0}computeOutputShape(e){const s=(e=lt(e)).slice();return s[s.length-1]=this.units,s}call(e,s){return H(()=>{this.invokeCallHook(e,s);const r=Ue(e),o=Om(this.activation.getClassName());let a;return null!=o?a=Yn(r,this.kernel.read(),o,this.bias?this.bias.read():null):(a=Yn(r,this.kernel.read()),null!=this.bias&&(a=Jn(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const e={units:this.units,activation:_s(this.activation),useBias:this.useBias,kernelInitializer:Ct(this.kernelInitializer),biasInitializer:Ct(this.biasInitializer),kernelRegularizer:ut(this.kernelRegularizer),biasRegularizer:ut(this.biasRegularizer),activityRegularizer:ut(this.activityRegularizer),kernelConstraint:Mt(this.kernelConstraint),biasConstraint:Mt(this.biasConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Dense",n})()),re((()=>{class n extends Je{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=lt(e);for(const s of e.slice(1))if(null==s)throw new F(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Is(e,1)]}call(e,s){return H(()=>{this.invokeCallHook(e,s);let r=Ue(e);if("channelsFirst"===this.dataFormat&&r.rank>1){const o=[0];for(let a=2;a<r.rank;++a)o.push(a);o.push(1),r=r.transpose(o)}return function rT(n){if(n.rank<=1)throw new F(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],Is(n.shape,1)];return n.reshape(t)}(r)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const s=super.getConfig();return Object.assign(e,s),e}}return n.className="Flatten",n})()),re((()=>{class n extends Je{constructor(e){super(e),this.supportsMasking=!0,this.activation=Es(e.activation)}call(e,s){return H(()=>{this.invokeCallHook(e,s);const r=Ue(e);return this.activation.apply(r)})}getConfig(){const e={activation:_s(this.activation)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Activation",n})()),re((()=>{class n extends Je{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,s){return H(()=>function nT(n,t){return H(()=>{if(2!==n.shape.length)throw new F(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);return Jh(ba(n,1),[1,t,1])})}(e=Ue(e),this.n))}getConfig(){const e={n:this.n},s=super.getConfig();return Object.assign(e,s),e}}return n.className="RepeatVector",n})()),re((()=>{class n extends Je{constructor(e){super(e),this.targetShape=e.targetShape;for(let s=0;s<this.targetShape.length;++s)this.isUnknown(this.targetShape[s])&&(this.targetShape[s]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,s){const r="Total size of new array must be unchanged.",o=s.slice();let a=1,i=null;for(let u=0;u<o.length;++u){const c=o[u];if(this.isUnknown(c)){if(null!==i)throw new F("Can only specifiy one unknown dimension.");i=u}else a*=c}const l=Is(e);if(null!==i){if(0===a||l%a!=0)throw new F(r);o[i]=l/a}else if(l!==a)throw new F(r);return o}computeOutputShape(e){let s=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){s=!0;break}return s?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,s){return H(()=>{this.invokeCallHook(e,s);const r=Ue(e),o=r.shape,a=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return r.reshape(a)})}getConfig(){const e={targetShape:this.targetShape},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Reshape",n})()),re((()=>{class n extends Je{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const s=zn(1,e.dims.length+1);if(!he(e.dims.slice().sort(),s))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Xt({ndim:this.dims.length+1})]}computeOutputShape(e){const s=(e=lt(e)).slice();return this.dims.forEach((r,o)=>{s[o+1]=e[r]}),s}call(e,s){return it(Ue(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Permute",n})()),re((()=>{class n extends Je{constructor(e){super(e??{}),this.supportsMasking=!0,this.maskValue=null!=e?e.maskValue??0:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={maskValue:this.maskValue};return Object.assign(s,e),s}computeMask(e,s){const r=Ue(e);return Lc(Tr(r,this.maskValue),-1)}call(e,s){return H(()=>{this.invokeCallHook(e,s);const r=Ue(e),i=Lc(Tr(r,this.maskValue),-1,!0);return r.mul(i.asType(r.dtype))})}}return n.className="Masking",n})()),re((()=>{class n extends Je{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let s=null;null!=e.batchSize&&(s=e.batchSize),this.batchInputShape=null==e.inputLength?[s,null]:[s].concat(ft(e.inputLength))}this.inputDim=e.inputDim,Gt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Gt(this.outputDim,"outputDim"),this.embeddingsInitializer=bt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=wt(e.embeddingsRegularizer),this.activityRegularizer=wt(e.activityRegularizer),this.embeddingsConstraint=zt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,s){return H(()=>this.maskZero?(e=Ue(e),Tr(e,Ye(e))):null)}computeOutputShape(e){if(e=lt(e),null==this.inputLength)return[...e,this.outputDim];const s=ft(this.inputLength);if(s.length!==e.length-1)throw new F(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let o=0;o<s.length;++o){const a=s[o],i=e[o+1];if(null!=a&&null!=i&&a!==i)throw new F(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(s[r]=i),r++}}return[e[0],...s,this.outputDim]}call(e,s){return H(()=>{this.invokeCallHook(e,s);let r=Ue(e);return"int32"!==r.dtype&&(r=xa(r,"int32")),Um(this.embeddings.read(),r.as1D()).reshape(lt(this.computeOutputShape(r.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ct(this.embeddingsInitializer),embeddingsRegularizer:ut(this.embeddingsRegularizer),activityRegularizer:ut(this.activityRegularizer),embeddingsConstraint:Mt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Embedding",n})());class rr extends Je{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Ve}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const o=t[t.length-e.length+r],a=e[r];if(null==o||null==a||o<0||a<0)s.push(null);else if(1===o)s.push(a);else if(1===a)s.push(o);else{if(o!==a)throw new F("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(o)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[lt(t)]),t.length<2)throw new F(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const o of t)null!=o&&null!==o[0]&&e.push(o[0]);if(e=ks(e),e.length>1)throw new F(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=null==t[0]?null:t[0].slice(1);for(let o=1;o<t.length;++o){const a=null==t[o]?null:t[o].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=t.map(o=>o.length);this.reshapeRequired=-1!==t.indexOf(null)||1!==ks(r).length}call(t,e){return H(()=>{if(this.reshapeRequired){const s=[],r=t.map(o=>o.rank);if(-1===r.indexOf(null)){const o=Ss(r);for(let a of t){const i=a.rank;for(let l=0;l<o-i;++l)a=ba(a,1);s.push(a)}return this.mergeFunction(s)}{let o=!1;for(const l of t){const u=l.rank;if(null==u){const c=l.shape,h=c[0],d=c.slice(1).concat([h]);let p=l.reshape([h].concat(Is(c.slice(1))));p=it(p,[1,0]),p=p.reshape(d),s.push(p),o=!0}else if(u>1){const c=zn(1,u).concat([0]);s.push(it(l,c)),o=!0}else s.push(l)}let a=this.mergeFunction(s);const i=a.rank;if(o)if(null==i){const l=a.shape,c=l[l.length-1],h=[c].concat(l.slice(0,l.length-1));a=it(a.reshape([-1,c]),[1,0]).reshape(h)}else if(i>1){const l=[i-1].concat(zn(0,i-1));a=it(a,l)}return a}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const o=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,o)}let s=[];for(const r of t)null!=r&&null!==r[0]&&s.push(r[0]);return s=ks(s),e=1===s.length?s.concat(e):[null].concat(e),e}computeMask(t,e){return H(()=>{if(null==e)return null;if(!Array.isArray(e))throw new F("`mask` should be an Array");if(!Array.isArray(t))throw new F("`inputs` should be an Array");if(e.length!==t.length)throw new F(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>null==r))return null;let s=(e=e.map(r=>null==r?r:Fn(r,0)))[0];for(let r=1;r<e.length-1;++r)s=is(s,e[r]);return s})}}function Sa(n,t){for(;n<0;)n+=t;return n}function Ta(n,t,e,s,r,o=.001){let a;if(2===n.rank)a=Iw(n,t,e,s,r,o);else if(3===n.rank)a=Tw(n,t,e,s,r,o);else{if(4!==n.rank)throw new Ve(`batchNormalization is not implemented for array of rank ${n.rank} yet`);a=_w(n,t,e,s,r,o)}return a}function jl(n,t,e,s,r,o){return H(()=>{let a;Dt(r),Lm(o),yn(s),null==e&&(e=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),n=Td(n,r);const i="same"===s?"same":"valid";return a="max"===o?jc(n,t,e,i):Bc(n,t,e,i),"channelsFirst"===r&&(a=it(a,[0,3,1,2])),a})}function Gg(n,t,e,s,r,o){return H(()=>{let a;Dt(r),Lm(o),yn(s),null==e&&(e=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),n=Ag(n,r);const i="same"===s?"same":"valid";return a="max"===o?mv(n,t,e,i):vw(n,t,e,i),"channelsFirst"===r&&(a=it(a,[0,4,1,2,3])),a})}re((()=>{class n extends rr{constructor(e){super(e)}mergeFunction(e){return H(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=de(s,e[r]);return s})}}return n.className="Add",n})()),re((()=>{class n extends rr{constructor(e){super(e)}mergeFunction(e){return H(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=V(s,e[r]);return s})}}return n.className="Multiply",n})()),re((()=>{class n extends rr{constructor(e){super(e)}mergeFunction(e){return H(()=>{let s=e[0].clone();for(let r=1;r<e.length;++r)s=de(s,e[r]);return V(1/e.length,s)})}}return n.className="Average",n})()),re((()=>{class n extends rr{constructor(e){super(e)}mergeFunction(e){return H(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=ls(s,e[r]);return s})}}return n.className="Maximum",n})()),re((()=>{class n extends rr{constructor(e){super(e)}mergeFunction(e){return H(()=>{let s=e[0];for(let r=1;r<e.length;++r)s=la(s,e[r]);return s})}}return n.className="Minimum",n})()),re((()=>{class n extends rr{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=e.axis??this.DEFAULT_AXIS,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new F("A `Concatenate` layer should be called on a list of at least 2 inputs");let s=!0;for(const o of e)if(null!=o){s=!1;break}if(s)return;const r=[];for(let o=0;o<e.length;++o){const a=e[o].slice();a.splice(this.axis,1);let i=!1;for(const l of r)if(he(l,a)){i=!0;break}i||r.push(a)}if(r.length>1)throw new F("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return H(()=>Yh(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new F("A `Concatenate` layer should be called on a list of inputs.");const s=e,r=s[0].slice(),o=this.axis<0?r.length+this.axis:this.axis;for(const a of s.slice(1)){if(null==r[o]||null==a[o]){r[o]=null;break}r[o]+=a[o]}return r}computeMask(e,s){if(null==s)return null;if(!Array.isArray(s))throw new F("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new F("`inputs` should be an array for Concatenate");if(s.length!==e.length)throw new F(`Mismatch in the length of mask (${s.length}) and the legnth of inputs (${e.length})`);return H(()=>{let r=!0;if(s.forEach(i=>{null==i||(r=!1)}),r)return null;const o=[];for(let i=0;i<e.length;++i)o.push(null==s[i]?kn(e[i]).asType("bool"):s[i].rank<e[i].rank?Fn(s[i],-1):s[i]);const a=Kt(o,this.axis);return Tf(a,-1,!1)})}getConfig(){const e={axis:this.axis},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Concatenate",n})()),re((()=>{class n extends rr{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize??!1,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){k(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0],r=e[1];if(s.length>3||r.length>3)throw new Ve("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(s,r);if(s[o[0]]!==r[o[1]])throw new F(`Dimension incompatibility: ${s[o[0]]} !== ${r[o[1]]}`)}mergeFunction(e){if(2!==e.length)throw new F(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let o,s=e[0],r=e[1];return o=Array.isArray(this.axes)?this.axes.map((a,i)=>Sa(a,e[i].shape.length)):[Sa(this.axes,s.shape.length),Sa(this.axes,r.shape.length)],this.normalize&&(s=Fl(s,o[0]),r=Fl(r,o[1])),function C$(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Ve("batchDot is not implemented for tensors of 4D or higher rank yet");if(k(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),k(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof e&&(e=[e,e]),"complex64"===n.dtype||"complex64"===t.dtype)throw new Ve("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;null==e&&(e=[s-1,r-2]);const o=e;return H(()=>{let a,i;if(s>r){a=s-r;const l=[];for(let u=0;u<a;++u)l.push(1);t=t.reshape(t.shape.concat(l))}else if(r>s){a=r-s;const l=[];for(let u=0;u<a;++u)l.push(1);n=n.reshape(n.shape.concat(l))}else a=0;if(i=2===n.shape.length&&2===t.shape.length?o[0]===o[1]?n.mul(t).sum(o[0]):n.transpose([1,0]).mul(t).sum(o[1]):n.matMul(t,o[0]!==n.shape.length-1,o[1]===t.shape.length-1),a>0){let l;l=s>r?s+r-3:s-1;const u=[];for(let c=l;c<l+a;++c)u.push(c);i=i.squeeze(u)}return 1===i.shape.length&&(i=i.expandDims(1)),i})}(s,r,o)}interpretAxes(e,s){let r;return r=Array.isArray(this.axes)?this.axes:[Sa(this.axes,e.length),Sa(this.axes,s.length)],r}computeOutputShape(e){k(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const s=e[0].slice(),r=e[1].slice();if(s.length>3||r.length>3)throw new Ve("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(s,r);s.splice(o[0],1),r.splice(o[1],1),r.splice(0,1);const a=s.concat(r);return 1===a.length&&a.push(1),a}computeMask(e,s){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},s=super.getConfig();return Object.assign(e,s),e}}return n.className="Dot",n})()),re((()=>{class n extends Je{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={stddev:this.stddev};return Object.assign(s,e),s}call(e,s){return H(()=>{this.invokeCallHook(e,s);const r=Ue(e);return va(()=>$l(r.shape,0,this.stddev).add(r),()=>r,s.training||!1)})}}return n.className="GaussianNoise",n})()),re((()=>{class n extends Je{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return H(()=>{this.invokeCallHook(e,s);const r=Ue(e);return this.rate>0&&this.rate<1?va(()=>{const a=Math.sqrt(this.rate/(1-this.rate));return r.mul($l(r.shape,1,a))},()=>r,s.training||!1):r})}}return n.className="GaussianDropout",n})()),re((()=>{class n extends Je{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ue(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),s={rate:this.rate};return Object.assign(s,e),s}call(e,s){return H(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(e);return va(()=>{const a=Ue(e),u=-1.7580993408473766;let c=js(cl(r),this.rate);c=xa(c,"float32");const h=((1-this.rate)*(1+this.rate*u**2))**-.5,d=-h*u*this.rate;return a.mul(c).add(c.add(-1).mul(u)).mul(h).add(d)},()=>Ue(e),s.training||!1)}return e})}}return n.className="AlphaDropout",n})()),re((()=>{class n extends Je{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis??-1,this.momentum=e.momentum??.99,this.epsilon=e.epsilon??.001,this.center=e.center??!0,this.scale=e.scale??!0,this.betaInitializer=bt(e.betaInitializer||"zeros"),this.gammaInitializer=bt(e.gammaInitializer||"ones"),this.movingMeanInitializer=bt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=bt(e.movingVarianceInitializer||"ones"),this.betaConstraint=zt(e.betaConstraint),this.gammaConstraint=zt(e.gammaConstraint),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer)}build(e){e=lt(e);const s=this.axis>=0?this.axis:this.axis+e.length,r=e[s];if(null==r)throw new F(`Axis ${s} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Xt({ndim:e.length,axes:{[s]:r}})];const o=[r];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,s){return H(()=>{const r=s.training??!1,o=Ue(e),a=o.shape,i=a.length,l=zn(0,i),u=this.axis>=0?this.axis:this.axis+i;l.splice(u,1);const c=Js(1,i);c[u]=a[u];const h=l.slice();h.sort();const d=!he(h,zn(0,i).slice(0,i-1));if(!r)return(()=>{if(d){const C=this.movingMean.read().reshape(c),w=this.movingVariance.read().reshape(c),N=this.center?this.beta.read().reshape(c):null,S=this.scale?this.gamma.read().reshape(c):null;return Ta(o,C,w,N,S,this.epsilon)}return Ta(o,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[f,m,g]=function S$(n,t,e,s,r=.001){return he(s.slice().sort(),zn(0,n.rank-1))?function k$(n,t,e,s,r=.001){return H(()=>{const o=qc(n,s),a=o.mean,i=o.variance;return[Ta(n,a,i,e,t,r),a,i]})}(n,t,e,s,r):function I$(n,t,e,s,r=.001){return H(()=>{const o=qc(n,s),a=o.mean,i=o.variance,l=[];for(const f of zn(0,n.rank))-1!==s.indexOf(f)?l.push(1):l.push(n.shape[f]);const u=a.reshape(l),c=i.reshape(l),h=null==t?null:t.reshape(l),d=null==e?null:e.reshape(l);return[Ta(n,u,c,d,h,r),a,i]})}(n,t,e,s,r)}(o,this.gamma.read(),this.beta.read(),l,this.epsilon),y=(C,w,N)=>{H(()=>{const S=1-N,I=C.read(),E=I.sub(w).mul(S);C.write(I.sub(E))})};return(()=>{y(this.movingMean,m,this.momentum),y(this.movingVariance,g,this.momentum)})(),f})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ct(this.betaInitializer),gammaInitializer:Ct(this.gammaInitializer),movingMeanInitializer:Ct(this.movingMeanInitializer),movingVarianceInitializer:Ct(this.movingVarianceInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer),betaConstraint:Mt(this.betaConstraint),gammaConstraint:Mt(this.gammaConstraint)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="BatchNormalization",n})()),re((()=>{class n extends Je{constructor(e){if(null==e&&(e={}),super(e),this.axis=e.axis??-1,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const s of this.axis)if(!Number.isInteger(s))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=e.epsilon??.001,this.center=e.center??!0,this.scale=e.scale??!0,this.betaInitializer=bt(e.betaInitializer||"zeros"),this.gammaInitializer=bt(e.gammaInitializer||"ones"),this.betaRegularizer=wt(e.betaRegularizer),this.gammaRegularizer=wt(e.gammaRegularizer),this.supportsMasking=!0}build(e){const s=(e=lt(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=s);for(const a of this.axis)if(a<0||a>=s)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==ks(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(a=>e[a]);this.gamma=this.scale?this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,s){const r=Ue(e),o=r.shape,a=o.length;return H(()=>{let{mean:l,variance:u}=qc(r,this.axis,!0);const c=Js(1,a);for(const g of this.axis)c[g]=o[g];const h=g=>null!=g&&g.shape.length!==a&&this.axis!==[a-1]?g.reshape(c):g;let d=h(this.gamma.read()),p=h(this.beta.read());const f=[],m=[];for(let g=0;g<a;++g)-1!==this.axis.indexOf(g)?(f.push(o[g]),m.push(1)):(f.push(1),m.push(o[g]));return l=l.tile(f),u=u.tile(f),d=d.tile(m),p=p.tile(m),Ta(r,l,u,p,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ct(this.betaInitializer),gammaInitializer:Ct(this.gammaInitializer),betaRegularizer:ut(this.betaRegularizer),gammaRegularizer:ut(this.gammaRegularizer)},s=super.getConfig();return Object.assign(e,s),e}}return n.className="LayerNormalization",n})()),re((()=>{class n extends Je{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=e.dataFormat??"channelsLast",null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new F(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let s,r;if("number"==typeof e.padding[0])s=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new F(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(s=e.padding[0],2!==e.padding[1].length)throw new F(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[s,r]}this.inputSpec=[new Xt({ndim:4})]}computeOutputShape(e){let s,r;return e=lt(e),"channelsFirst"===this.dataFormat?(s=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],s,r]):(s=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],s,r,e[3]])}call(e,s){return H(()=>function T$(n,t,e){return H(()=>{if(4!==n.rank)throw new F(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new F("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==e&&(e="channelsLast"),"channelsLast"!==e&&"channelsFirst"!==e)throw new F(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===e?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],Xc(n,s)})}(Ue(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},s=super.getConfig();return Object.assign(e,s),e}}return n.className="ZeroPadding2D",n})());class Ug extends Je{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new F(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Gt(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new F(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Gt(this.strides,"strides"),this.padding=t.padding??"valid",yn(this.padding),this.inputSpec=[new Xt({ndim:3})]}computeOutputShape(t){const e=Bn((t=lt(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return H(()=>{this.invokeCallHook(t,e),t=ba(Ue(t),2);const s=this.poolingFunction(Ue(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return nh(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}re((()=>{class n extends Ug{constructor(e){super(e)}poolingFunction(e,s,r,o,a){return Dt(a),yn(o),jl(e,s,r,o,a,"max")}}return n.className="MaxPooling1D",n})()),re((()=>{class n extends Ug{constructor(e){super(e)}poolingFunction(e,s,r,o,a){return Dt(a),yn(o),jl(e,s,r,o,a,"avg")}}return n.className="AveragePooling1D",n})());class Hg extends Je{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new F(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Gt(this.poolSize,"poolSize"),Gt(this.strides,"strides"),this.padding=t.padding??"valid",this.dataFormat=t.dataFormat??"channelsLast",Dt(this.dataFormat),yn(this.padding),this.inputSpec=[new Xt({ndim:4})]}computeOutputShape(t){t=lt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],s="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Bn(e,this.poolSize[0],this.padding,this.strides[0]),s=Bn(s,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return H(()=>(this.invokeCallHook(t,e),this.poolingFunction(Ue(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}re((()=>{class n extends Hg{constructor(e){super(e)}poolingFunction(e,s,r,o,a){return Dt(a),yn(o),jl(e,s,r,o,a,"max")}}return n.className="MaxPooling2D",n})()),re((()=>{class n extends Hg{constructor(e){super(e)}poolingFunction(e,s,r,o,a){return Dt(a),yn(o),jl(e,s,r,o,a,"avg")}}return n.className="AveragePooling2D",n})());class jg extends Je{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new F(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Gt(this.poolSize,"poolSize"),Gt(this.strides,"strides"),this.padding=t.padding??"valid",this.dataFormat=t.dataFormat??"channelsLast",Dt(this.dataFormat),yn(this.padding),this.inputSpec=[new Xt({ndim:5})]}computeOutputShape(t){t=lt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],s="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Bn(e,this.poolSize[0],this.padding,this.strides[0]),s=Bn(s,this.poolSize[1],this.padding,this.strides[1]),r=Bn(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return H(()=>(this.invokeCallHook(t,e),this.poolingFunction(Ue(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}re((()=>{class n extends jg{constructor(e){super(e)}poolingFunction(e,s,r,o,a){return Dt(a),yn(o),Gg(e,s,r,o,a,"max")}}return n.className="MaxPooling3D",n})()),re((()=>{class n extends jg{constructor(e){super(e)}poolingFunction(e,s,r,o,a){return Dt(a),yn(o),Gg(e,s,r,o,a,"avg")}}return n.className="AveragePooling3D",n})());class Kg extends Je{constructor(t){super(t),this.inputSpec=[new Xt({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ve}}re((()=>{class n extends Kg{constructor(e){super(e||{})}call(e,s){return H(()=>{const r=Ue(e);return Tt(r,1)})}}return n.className="GlobalAveragePooling1D",n})()),re((()=>{class n extends Kg{constructor(e){super(e||{})}call(e,s){return H(()=>{const r=Ue(e);return Ln(r,1)})}}return n.className="GlobalMaxPooling1D",n})());class qg extends Je{constructor(t){super(t),this.dataFormat=t.dataFormat??"channelsLast",Dt(this.dataFormat),this.inputSpec=[new Xt({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ve}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}re((()=>{class n extends qg{call(e,s){return H(()=>{const r=Ue(e);return Tt(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalAveragePooling2D",n})()),re((()=>{class n extends qg{call(e,s){return H(()=>{const r=Ue(e);return Ln(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return n.className="GlobalMaxPooling2D",n})());class Xg extends Je{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const o=ps(e.layer,s);delete e.layer;const a={layer:o};return Object.assign(a,e),new t(a)}}var ey;function Ne(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&k("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}re((()=>{class n extends Xg{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=lt(e)).length<3)throw new F(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const s=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(s),this.layer.built=!0),super.build(e)}computeOutputShape(e){const s=[(e=lt(e))[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(s);return[r[0],e[1]].concat(r.slice(1))}call(e,s){return H(()=>Lg((i,l)=>[Ue(this.layer.call(i,s)),[]],e=Ue(e),[],!1,null,null,!1,!0)[1])}}return n.className="TimeDistributed",n})()),re((()=>{class n extends Xg{constructor(e){super(e);const s=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=s,this.forwardLayer=ps(r),s.goBackwards=!0!==s.goBackwards;const o={};if(o.className=e.layer.getClassName(),o.config=s,this.backwardLayer=ps(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function $$(n){er(XS,"BidirectionalMergeMode",n)}(this.mergeMode),e.weights)throw new Ve("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const r=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let r,o,a,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState&&(a=s.slice(1)),r=s[0],"concat"===this.mergeMode?(r[r.length-1]*=2,o=[r]):o=null==this.mergeMode?[r,r.slice()]:[r],this.returnState?null==this.mergeMode?o.concat(a).concat(a.slice()):[r].concat(a).concat(a.slice()):an(o)}apply(e,s){let r=null==s?null:s.initialState,o=null==s?null:s.constants;null==s&&(s={});const a=Pg(e,r,o,this.numConstants);if(e=a.inputs,r=a.initialState,o=a.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(null==r||0===r.length)&&null==o)return super.apply(e,s);const i=[],l=[];if(null!=r){const c=r.length;if(c%2>0)throw new F("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");s.initialState=r,i.push(...r);const h=r.map(d=>new Xt({shape:d.shape}));this.forwardLayer.stateSpec=h.slice(0,c/2),this.backwardLayer.stateSpec=h.slice(c/2),l.push(...h)}if(null!=o)throw new Ve("Support for constants in Bidirectional layers is not implemented yet.");const u=i[0]instanceof es;for(const c of i)if(c instanceof es!==u)throw new F("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[e].concat(i),h=this.inputSpec.concat(l),d=this.inputSpec;this.inputSpec=h;const p=super.apply(c,s);return this.inputSpec=d,p}return super.apply(e,s)}call(e,s){return H(()=>{const r=s.initialState;let o,a,i,l;if(null==r)o=this.forwardLayer.call(e,s),a=this.backwardLayer.call(e,s);else{const u=r.slice(0,r.length/2),c=r.slice(r.length/2);o=this.forwardLayer.call(e,Object.assign(s,{initialState:u})),a=this.backwardLayer.call(e,Object.assign(s,{initialState:c}))}return this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(a.slice(1))),o=o[0],a=a[0]),this.returnSequences&&(a=Ks(a,1)),"concat"===this.mergeMode?l=Yh([o,a]):"sum"===this.mergeMode?l=de(o,a):"ave"===this.mergeMode?l=V(.5,de(o,a)):"mul"===this.mergeMode?l=V(o,a):null==this.mergeMode&&(l=[o,a]),this.returnState?null==this.mergeMode?l.concat(i):[l].concat(i):l})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){tr(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),tr(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,s){let r;if(Array.isArray(s)&&(s=s[0]),r=this.returnSequences?null==this.mergeMode?[s,s]:s:null==this.mergeMode?[null,null]:null,this.returnState){const a=this.forwardLayer.states.map(i=>null);return Array.isArray(r)?r.concat(a).concat(a):[r].concat(a).concat(a)}return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},s=super.getConfig();return Object.assign(e,s),e}static fromConfig(e,s){const r=ps(s.layer);if(delete s.layer,null!=s.numConstants)throw new Ve("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=s;return o.layer=r,new e(o)}}return n.className="Bidirectional",n})()),function(n){let t;var e;(e=t=n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(ey||(ey={})),B(20340),Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const y_=fm;class x_ extends D{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new _(this,Cr())}write(t,e,s){this.firstUse&&(this.firstUse=!1,te().get("IS_NODE")&&Dr("\n============================\nHi there \u{1f44b}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:s,refCount:1}),r}makeTensorInfo(t,e,s){let r;if("string"===e&&null!=s&&s.length>0&&to(s[0])){const o=s.map(a=>ra(a));r=this.write(o,t,e)}else r=this.write(s,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,s,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}read(t){var e=this;return(0,A.Z)(function*(){return e.readSync(t)})()}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);return"complex64"===e?hs(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let s=e;if("string"===t.dtype)try{s=e.map(r=>fr(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ke(t.shape,t.dtype,s)}makeOutput(t,e,s){const r=this.write(t,e,s);return Cr().makeTensorFromDataId(r,e,s,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const s=this.data.get(e);s.refCount--,s.refCount<1&&this.disposeData(e)}}time(t){return(0,A.Z)(function*(){const e=wn();return t(),{kernelMs:wn()-e}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Ne([t],"where");const e=this.readSync(t.dataId);return y_(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function st(n,t,e){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;if(Ne(a,n),"string"===a.dtype||"string"===e)throw new Error("unaryKernelFunc does not support string input/output");const i=o,l=i.data.get(a.dataId).values,u=U(a.shape),c=e||a.dtype,h=hr(c,u);for(let d=0;d<u;++d)h[d]=t(l[d],r);return i.makeTensorInfo(a.shape,c,h)}}function zr(n,t,e){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;if(Ne(a,n),"string"===a.dtype||"string"===e)throw new Error("unaryKernelFunc does not support string input/output");const i=o,l=i.data.get(a.dataId).values,u=e||a.dtype,c=t(l,u,r);return i.makeTensorInfo(a.shape,u,c)}}Sf("cpu",()=>new x_,1);const $y=st(bo,n=>n>=0?n:Math.exp(n)-1),w_={kernelName:bo,backendName:"cpu",kernelFunc:$y};function ts(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const v_={kernelName:ai,backendName:"cpu",kernelFunc:ts};function _y(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s;Ne([r],"leakyRelu");const a=U(r.shape),i=e.data.get(r.dataId).values,l=Qt("float32",a);for(let u=0;u<i.length;u++)l[u]=i[u]<0?o*i[u]:i[u];return e.makeTensorInfo(r.shape,"float32",l)}const N_={kernelName:ii,backendName:"cpu",kernelFunc:_y};function Ot(n){return(t,e,s,r,o)=>{const a=qe(t,e),i=a.length,l=Fe(a),c=Qt(o,U(a)),h=t.length,d=e.length,p=Fe(t),f=Fe(e),m=ia(t,a),g=ia(e,a);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=n(s[y%s.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const x=so(y,i,l),C=x.slice(-h);m.forEach(I=>C[I]=0);const w=Un(C,h,p),N=x.slice(-d);g.forEach(I=>N[I]=0);const S=Un(N,d,f);c[y]=n(s[w],r[S])}return[c,a]}}const C_=Ot((n,t)=>n<0?t*n:n);function Ey(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t;Ne([s,r],"prelu");const o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,[i,l]=C_(s.shape,r.shape,o,a,s.dtype);return e.makeTensorInfo(l,s.dtype,i)}const k_={kernelName:Si,backendName:"cpu",kernelFunc:Ey},Dy=st(Lo,n=>Math.max(0,n)),I_={kernelName:Lo,backendName:"cpu",kernelFunc:Dy},Ay=st(Mo,n=>Math.min(Math.max(0,n),6)),S_={kernelName:Mo,backendName:"cpu",kernelFunc:Ay};function jd(n,t,e,s,r){if("linear"===e)return ts({inputs:{x:t},backend:n});if("relu"===e)return Dy({inputs:{x:t},backend:n});if("elu"===e)return $y({inputs:{x:t},backend:n});if("relu6"===e)return Ay({inputs:{x:t},backend:n});if("prelu"===e)return Ey({inputs:{x:t,alpha:s},backend:n});if("leakyrelu"===e)return _y({inputs:{x:t},backend:n,attrs:{alpha:r}});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function hn(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,i=e.makeTensorInfo(s.shape,"complex64");return e.data.get(i.dataId).complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",o),imag:e.makeTensorInfo(r.shape,"float32",a)},i}const T_={kernelName:Du,backendName:"cpu",kernelFunc:hn};function Jl(n,t,e="float32"){if("complex64"===e)return hn({inputs:{real:Jl(n,t,"float32"),imag:Jl(n,t,"float32")},backend:n});const s=en(U(t),e);return n.makeTensorInfo(t,e,s)}function or(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.real,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const $_={kernelName:tc,backendName:"cpu",kernelFunc:or};function As(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if("complex64"===o){if("complex64"===r.dtype)return ts({inputs:{x:r},backend:e});const a=Jl(e,r.shape,r.dtype),i=As({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=hn({inputs:{real:i,imag:a},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}if("complex64"===r.dtype){const a=or({inputs:{input:r},backend:e}),i=As({inputs:{x:a},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(a),i}if(!vu(r.dtype,o)){const a=ts({inputs:{x:r},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:o}}if("int32"===o){const a=e.data.get(r.dataId).values,i=Int32Array.from(a);return e.makeTensorInfo(r.shape,"int32",i)}if("bool"===o){const a=e.data.get(r.dataId).values,i=Vs([0],r.dtype),[l,u]=Ot((c,h)=>c!==h?1:0)(r.shape,[],a,i,"bool");return e.makeTensorInfo(u,"bool",l)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const __={kernelName:po,backendName:"cpu",kernelFunc:As};function Ut(n,t,e,s){return null==e?({inputs:r,backend:o})=>{const{a,b:i}=r,l=o;Ne([a,i],n);const u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,h=s||a.dtype,[d,p]=t(a.shape,i.shape,u,c,h);return l.makeTensorInfo(p,h,d)}:({inputs:r,backend:o})=>{const{a,b:i}=r,l=o;if("complex64"===a.dtype||"complex64"===i.dtype){const u=As({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),d=c.complexTensorInfos.imag,p=l.data.get(c.complexTensorInfos.real.dataId).values,f=l.data.get(d.dataId).values,m=As({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),x=g.complexTensorInfos.imag,C=l.data.get(g.complexTensorInfos.real.dataId).values,w=l.data.get(x.dataId).values,[N,S,I]=e(a.shape,i.shape,p,f,C,w),E=l.makeTensorInfo(I,"float32",N),R=l.makeTensorInfo(I,"float32",S),z=hn({inputs:{real:E,imag:R},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(E),l.disposeIntermediateTensorInfo(R),z}{const u=l.data.get(a.dataId).values,c=l.data.get(i.dataId).values,h=s||a.dtype,[d,p]=t(a.shape,i.shape,u,c,h);return l.makeTensorInfo(p,h,d)}}}function Kd(n){return(t,e,s,r,o,a)=>{const i=qe(t,e),l=U(i),u=i.length,c=Fe(i),h=Qt("float32",l),d=Qt("float32",l),p=ia(t,i),f=ia(e,i),m=hs(s,r),g=hs(o,a),y=t.length,x=Fe(t),C=e.length,w=Fe(e);if(p.length+f.length===0)for(let N=0;N<h.length;N++){const S=N%m.length,I=N%g.length,E=n(m[2*S],m[2*S+1],g[2*I],g[2*I+1]);h[N]=E.real,d[N]=E.imag}else for(let N=0;N<h.length;N++){const S=so(N,u,c),I=S.slice(-y);p.forEach(J=>I[J]=0);const E=Un(I,y,x),R=S.slice(-C);f.forEach(J=>R[J]=0);const z=Un(R,C,w),K=n(m[2*E],m[2*E+1],g[2*z],g[2*z+1]);h[N]=K.real,d[N]=K.imag}return[h,d,i]}}const Ry=Ot((n,t)=>n+t),E_=Kd((n,t,e,s)=>({real:n+e,imag:t+s})),Ea=Ut(dr,Ry,E_),D_={kernelName:dr,backendName:"cpu",kernelFunc:Ea};function vt(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,a=U(r.shape),i=Jt(o,a),l=U(i);k(a===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const u=e.data.get(r.dataId);if(null!=u.complexTensorInfos){const h=u.complexTensorInfos.imag;u.complexTensorInfos.real.shape=i,h.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const A_={kernelName:Ti,backendName:"cpu",kernelFunc:vt};function Oy(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;Ne([r,o],"matMul");const l=r.shape.length,u=o.shape.length,c=a?r.shape[l-2]:r.shape[l-1],h=i?o.shape[u-1]:o.shape[u-2],d=a?r.shape[l-1]:r.shape[l-2],p=i?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=U(f),y=U(m);k(l>=2&&u>=2&&(g===y||1===g||1===y),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);const w=(g>y?r.shape.slice(0,-2):o.shape.slice(0,-2)).concat([d,p]);k(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const S=i?[y,p,h]:[y,h,p],I=vt({inputs:{x:r},backend:e,attrs:{shape:a?[g,c,d]:[g,d,c]}}),E=vt({inputs:{x:o},backend:e,attrs:{shape:S}}),R=a?I.shape[1]:I.shape[2],z=a?I.shape[2]:I.shape[1],K=i?E.shape[1]:E.shape[2],J=Math.max(g,y),Y=e.data.get(I.dataId).values,Q=e.data.get(E.dataId).values,Z=Fe(I.shape),X=Fe(E.shape),[ne,ee,se]=a?[Z[0],1,Z[1]]:[Z[0],Z[1],1],[oe,le,pe]=i?[1,X[1],X[0]]:[X[1],1,X[0]],fe=z*K,me=Ke([J,z,K],I.dtype),xe=me.values,ge=e.blockSize;for(let ke=0;ke<J;ke++)for(let Ee=0;Ee<z;Ee+=ge)for(let De=0;De<K;De+=ge)for(let Me=0;Me<R;Me+=ge){const Xe=Math.min(Ee+ge,z),rt=Math.min(De+ge,K),kt=Math.min(Me+ge,R);for(let yt=Ee;yt<Xe;yt++)for(let mt=De;mt<rt;mt++){let gt=0;for(let xt=Me;xt<kt;xt++){const At=Math.min(ke,g-1)*ne,ms=Math.min(ke,y-1)*pe;gt+=Y[At+yt*ee+xt*se]*Q[xt*oe+mt*le+ms]}xe[ke*fe+(yt*K+mt)]+=gt}}return e.disposeIntermediateTensorInfo(I),e.disposeIntermediateTensorInfo(E),e.makeTensorInfo(w,me.dtype,me.values)}const R_={kernelName:Ha,backendName:"cpu",kernelFunc:Oy},F_={kernelName:Bi,backendName:"cpu",kernelFunc:function O_(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=Oy({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:u},backend:e}),a&&(p=Ea({inputs:{a:d,b:a},backend:e}),m.push(d),d=p),c&&(f=jd(e,d,c,i,h),m.push(d),d=f);for(const y of m)e.disposeIntermediateTensorInfo(y);return d}};function Fy(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const P_={kernelName:Va,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend;Ne(t,"abs");let s=new Float32Array(U(t.shape));return s=Fy(e.data.get(t.dataId).values),e.makeOutput(s,t.shape,"float32")}},L_=st(ro,n=>Math.acos(n)),M_={kernelName:ro,backendName:"cpu",kernelFunc:L_},z_=st(oo,n=>Math.acosh(n)),V_={kernelName:oo,backendName:"cpu",kernelFunc:z_},W_={kernelName:Su,backendName:"cpu",kernelFunc:function B_(n){const{inputs:t,backend:e}=n,s=t;Ne(t,"addN");const r=s.map(i=>e.data.get(i.dataId).values),o=Ke(s[0].shape,s[0].dtype),a=o.values;for(let i=0;i<s.length;i++){const l=r[i];for(let u=0;u<a.length;u++)a[u]+=l[u]}return e.makeTensorInfo(o.shape,o.dtype,o.values)}};function qd(n,t,e,s,r){const o=t.length,a=U(t),i=Fe(t),l=Fe(r),u=Qt(e,U(r));for(let c=0;c<a;++c){const h=so(c,o,i),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];u[Un(d,o,l)]=n[c]}return u}function Dn(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{perm:o}=e;Ne(r,"transpose");const i=new Array(r.shape.length);for(let h=0;h<i.length;h++)i[h]=r.shape[o[h]];const u=qd(s.data.get(r.dataId).values,r.shape,r.dtype,o,i);return{dataId:s.write(u,i,r.dtype),shape:i,dtype:r.dtype}}const G_={kernelName:Li,backendName:"cpu",kernelFunc:Dn},H_={kernelName:"All",backendName:"cpu",kernelFunc:function U_(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;Ne(r,"all");const i=$e(o,r.shape);let l=i;const u=_t(l,r.shape.length);let c=r;null!=u&&(c=Dn({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Rt(l.length,r.shape.length)),qt("all",l,c.shape.length);const[h,d]=Wt(c.shape,l),p=U(d),f=en(U(h),c.dtype),m=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let C=m[x];for(let w=0;w<p;++w){const N=m[x+w];C=C&&N}f[y]=C}null!=u&&e.disposeIntermediateTensorInfo(c);const g=e.makeTensorInfo(h,c.dtype,f);if(a){const x=vt({inputs:{x:g},backend:e,attrs:{shape:$t(h,i)}});return e.disposeIntermediateTensorInfo(g),x}return g}},K_={kernelName:"Any",backendName:"cpu",kernelFunc:function j_(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;Ne(r,"any");const i=$e(o,r.shape);let l=i;const u=_t(l,r.shape.length);let c=r;null!=u&&(c=Dn({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Rt(l.length,r.shape.length)),qt("any",l,c.shape.length);const[h,d]=Wt(c.shape,l),p=U(d),f=en(U(h),c.dtype),m=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let C=m[x];for(let w=0;w<p;++w){const N=m[x+w];C=C||N}f[y]=C}null!=u&&e.disposeIntermediateTensorInfo(c);const g=e.makeTensorInfo(h,c.dtype,f);if(a){const x=vt({inputs:{x:g},backend:e,attrs:{shape:$t(h,i)}});return e.disposeIntermediateTensorInfo(g),x}return g}},X_={kernelName:Ba,backendName:"cpu",kernelFunc:function q_(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;Ne(r,"argMax");let a=$e(o,r.shape);const i=_t(a,r.shape.length);let l=r;const u=[];null!=i&&(l=Dn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),a=Rt(a.length,l.shape.length)),a=[a[0]],qt("argMax",a,l.shape.length);const[c,h]=Wt(l.shape,a),p=en(U(c),"int32"),f=U(h),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let x=m[y],C=0;for(let w=0;w<f;++w){const N=m[y+w];N>x&&(x=N,C=w)}p[g]=C}return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(c,"int32",p)}},Y_={kernelName:Wa,backendName:"cpu",kernelFunc:function Z_(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;Ne(r,"argMin");let a=$e(o,r.shape);const i=_t(a,r.shape.length);let l=r;const u=[];null!=i&&(l=Dn({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),a=Rt(a.length,l.shape.length)),a=[a[0]],qt("argMin",a,l.shape.length);const[c,h]=Wt(l.shape,a),p=en(U(c),"int32"),f=U(h),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const y=g*f;let x=m[y],C=0;for(let w=0;w<f;++w){const N=m[y+w];N<x&&(x=N,C=w)}p[g]=C}return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(c,"int32",p)}},J_=st(ao,n=>Math.asin(n)),Q_={kernelName:ao,backendName:"cpu",kernelFunc:J_},eE=st(lo,n=>Math.asinh(n)),tE={kernelName:lo,backendName:"cpu",kernelFunc:eE},nE=st(uo,n=>Math.atan(n)),sE={kernelName:uo,backendName:"cpu",kernelFunc:nE},rE=Ot((n,t)=>Math.atan2(n,t)),oE=Ut(ho,rE),aE={kernelName:ho,backendName:"cpu",kernelFunc:oE},iE=st(co,n=>Math.atanh(n)),lE={kernelName:co,backendName:"cpu",kernelFunc:iE};function Xd(n,t,e,s,r,o){const a=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ke(r.outShape,e),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],C=r.outShape[3];for(let w=0;w<r.batchSize;++w){const N=w*y,S=w*s[0];for(let I=0;I<r.inChannels;++I)for(let E=0;E<r.outHeight;++E){const R=E*a-d,z=Math.max(0,R),K=Math.min(r.inHeight,c+R),J=N+E*x;for(let Y=0;Y<r.outWidth;++Y){const Q=Y*i-p,Z=Math.max(0,Q),X=Math.min(r.inWidth,h+Q);let ne=f,ee=0,se=0;for(let le=z;le<K;le+=l){const pe=S+le*s[1];for(let fe=Z;fe<X;fe+=u){const xe=n[pe+fe*s[2]+I];"max"===o&&xe>ne?ne=xe:"avg"===o&&(ee+=xe,se++)}if(isNaN(ne))break}g[J+Y*C+I]="avg"===o?ee/se:ne}}}return m}function Py(n,t,e,s,r=!1,o=!1){const a=Ke(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Ke(t,e,n);for(let g=0;g<s.batchSize;++g)for(let y=0;y<s.inChannels;++y)for(let x=0;x<s.outHeight;++x){const C=x*i-p;let w=C;for(;w<0;)w+=u;const N=Math.min(s.inHeight,h+C);for(let S=0;S<s.outWidth;++S){const I=S*l-f;let E=I;for(;E<0;)E+=c;const R=Math.min(s.inWidth,d+I);let z=Number.NEGATIVE_INFINITY,K=-1;for(let J=w;J<N;J+=u){const Y=J-C;for(let Q=E;Q<R;Q+=c){const Z=Q-I,X=m.get(g,J,Q,y);X>z&&(z=X,K=r?o?((g*s.inHeight+J)*s.inWidth+Q)*s.inChannels+y:(J*s.inWidth+Q)*s.inChannels+y:Y*d+Z)}}a.set(K,g,x,S,y)}}return a}function Ly(n,t,e,s,r,o){const a=r.strideDepth,i=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,C=Ke(r.outShape,e),w=C.values,N=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],E=r.outShape[4];for(let R=0;R<r.batchSize;++R){const z=R*N,K=R*s[0];for(let J=0;J<r.inChannels;++J)for(let Y=0;Y<r.outDepth;++Y){const Q=Y*a-m;let Z=Q;for(;Z<0;)Z+=u;const X=Math.min(r.inDepth,d+Q),ne=z+Y*S;for(let ee=0;ee<r.outHeight;++ee){const se=ee*i-g;let oe=se;for(;oe<0;)oe+=c;const le=Math.min(r.inHeight,p+se),pe=ne+ee*I;for(let fe=0;fe<r.outWidth;++fe){const me=fe*l-y;let xe=me;for(;xe<0;)xe+=h;const ge=Math.min(r.inWidth,f+me),ke=pe+fe*E;let Ee=x,De=0,Me=0;for(let rt=Z;rt<X;rt+=u){const kt=K+rt*s[1];for(let yt=oe;yt<le;yt+=c){const mt=kt+yt*s[2];for(let gt=xe;gt<ge;gt+=h){const At=n[mt+gt*s[3]+J];if("max"===o&&At>Ee?Ee=At:"avg"===o&&(De+=At,Me++),isNaN(Ee))break}if(isNaN(Ee))break}if(isNaN(Ee))break}w[ke+J]="avg"===o?De/Me:Ee}}}}return C}const hE={kernelName:Ga,backendName:"cpu",kernelFunc:function cE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Ne(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s;k(St(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const c=Nn(r.shape,o,a,1,i,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))h=ts({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=Fe(r.shape),f=Xd(d,0,r.dtype,p,c,"avg");h=e.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}},pE={kernelName:Ua,backendName:"cpu",kernelFunc:function dE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:u,dilations:c}=s;Ne(r,"avgPool3d");let h=c;null==h&&(h=[1,1,1]);const d=os(r.shape,o,a,h,i,l,u),f=Ly(e.data.get(r.dataId).values,0,r.dtype,Fe(r.shape),d,"avg");return e.makeTensorInfo(f.shape,"float32",f.values)}},mE={kernelName:Eu,backendName:"cpu",kernelFunc:function fE(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l,dilations:u,dimRoundingMode:c}=s;Ne([r,o],"avgPool3DGrad");const h=os(o.shape,a,i,u,l,c),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=h.dilationDepth,C=h.dilationHeight,w=h.dilationWidth,N=h.effectiveFilterDepth,S=h.effectiveFilterHeight,I=h.effectiveFilterWidth,E=N-1-h.padInfo.front,R=I-1-h.padInfo.left,z=S-1-h.padInfo.top,K=Ke(o.shape,"float32"),J=1/(m*g*y),Y=e.bufferSync(r);for(let Q=0;Q<h.batchSize;++Q)for(let Z=0;Z<h.inChannels;++Z)for(let X=0;X<h.inDepth;++X)for(let ne=0;ne<h.inHeight;++ne)for(let ee=0;ee<h.inWidth;++ee){const se=X-E,oe=ne-z,le=ee-R;let pe=0;for(let fe=0;fe<N;fe+=x){const me=(se+fe)/d;if(!(me<0||me>=h.outDepth||Math.floor(me)!==me))for(let xe=0;xe<S;xe+=C){const ge=(oe+xe)/p;if(!(ge<0||ge>=h.outHeight||Math.floor(ge)!==ge))for(let ke=0;ke<I;ke+=w){const Ee=(le+ke)/f;Ee<0||Ee>=h.outWidth||Math.floor(Ee)!==Ee||(pe+=Y.get(Q,me,ge,Ee,Z))}}}K.set(pe*J,Q,X,ne,ee,Z)}return e.makeTensorInfo(K.shape,K.dtype,K.values)}},yE={kernelName:_u,backendName:"cpu",kernelFunc:function gE(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o;Ne([r,o],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=s,c=Nn(a.shape,i,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,x=c.effectiveFilterWidth,C=x-1-c.padInfo.left,w=y-1-c.padInfo.top,N=Ke(a.shape,"float32"),S=1/(p*f),I=e.data.get(r.dataId).values,E=Ke(r.shape,"float32",I);for(let R=0;R<c.batchSize;++R)for(let z=0;z<c.inChannels;++z)for(let K=0;K<c.inHeight;++K)for(let J=0;J<c.inWidth;++J){const Y=K-w,Q=J-C;let Z=0;for(let X=0;X<y;X+=m){const ne=(Y+X)/h;if(!(ne<0||ne>=c.outHeight||Math.floor(ne)!==ne))for(let ee=0;ee<x;ee+=g){const se=(Q+ee)/d;se<0||se>=c.outWidth||Math.floor(se)!==se||(Z+=E.get(R,ne,se,z))}}N.set(Z*S,R,K,J,z)}return e.makeTensorInfo(N.shape,N.dtype,N.values)}},bE={kernelName:si,backendName:"cpu",kernelFunc:function xE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,scale:o,offset:a,mean:i,variance:l}=t;k(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(null==a||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(null==o||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ne([r,i,l,o,a],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=e.data.get(r.dataId).values,h=e.data.get(i.dataId).values,d=e.data.get(l.dataId).values,p=o?e.data.get(o.dataId).values:new Float32Array([1]),f=a?e.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,x=d.length,C=h.length;let w=0,N=0,S=0,I=0;for(let E=0;E<c.length;++E)m[E]=f[w++]+(c[E]-h[N++])*p[S++]/Math.sqrt(d[I++]+u),w>=g&&(w=0),N>=C&&(N=0),S>=y&&(S=0),I>=x&&(I=0);return e.makeTensorInfo(r.shape,r.dtype,m)}};function My(n,t,e,s,r){const o=Rc(s,t,e),a=U(e),i=Fe(s);if(o){const h=Oc(t,i);return"string"===r?n.slice(h,h+a):n.subarray(h,h+a)}const u=Ke(s,r,"string"===r?zh(n):n),c=Ke(e,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,m)=>f+t[m]);c.set(u.get(...p),...d)}return"string"===r?pm(c.values):c.values}function ar(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:a}=s;Ne(r,"slice");const[i,l]=sl(r,o,a);Ac(r,i,l);const c=My(e.data.get(r.dataId).values,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,c)}const wE={kernelName:Ai,backendName:"cpu",kernelFunc:ar},NE={kernelName:ja,backendName:"cpu",kernelFunc:function vE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s;Ne([r],"batchToSpaceND");const i=o.reduce((y,x)=>y*x),l=ha(r.shape,o,i),u=da(l.length,o.length),c=pa(r.shape,o,i),h=Th(a,o.length),d=$h(c,a,o.length),p=vt({inputs:{x:r},backend:e,attrs:{shape:l}}),f=Dn({inputs:{x:p},backend:e,attrs:{perm:u}}),m=vt({inputs:{x:f},backend:e,attrs:{shape:c}}),g=ar({inputs:{x:m},backend:e,attrs:{begin:h,size:d}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}};function Zd(n,t,e,s,r){const o=U(s),a=en(r,e);for(let i=0;i<n.length;i++){const l=n[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(a[l]+=o>0?t[i]:1)}return a}function zy(n,t,e,s=!1){const r=n.shape[0],o=n.shape[1],a=Ke([r,e],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<o;l++){const u=n.get(i,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||a.set(s?1:t.size>0?a.get(i,u)+t.get(i,l):a.get(i,u)+1,i,u)}return a}const kE={kernelName:Dp,backendName:"cpu",kernelFunc:function CE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a}=s,u=Zd(e.data.get(r.dataId).values,e.data.get(o.dataId).values,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,u)}};function Vr(n){return(t,e,s)=>{const r=Qt(e,t.length);for(let o=0;o<t.length;++o)r[o]=n(t[o],s);return r}}const Vy=Vr(n=>Math.ceil(n)),IE=zr(fo,Vy),SE={kernelName:fo,backendName:"cpu",kernelFunc:IE},TE=st(mo,(n,t)=>n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n),$E={kernelName:mo,backendName:"cpu",kernelFunc:TE},_E={kernelName:Ka,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(U(t.shape)),r=e.data.get(t.dataId),a=r.complexTensorInfos.imag,i=e.data.get(r.complexTensorInfos.real.dataId).values,l=e.data.get(a.dataId).values;for(let u=0;u<i.length;u++)s[u]=Math.hypot(i[u],l[u]);return e.makeOutput(s,t.shape,"float32")}};function By(n,t,e,s){const r=hr(e,U(t));if(s&&"string"!==e){let o=0;n.forEach(a=>{const i=U(a.shape);r.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i="string"===e?zh(a.vals):a.vals;let l=0;for(let u=0;u<a.shape[0];++u){const c=u*t[1]+o;for(let h=0;h<a.shape[1];++h)r[c+h]=i[l++]}o+=a.shape[1]})}return r}function Br(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.imag,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const EE={kernelName:ju,backendName:"cpu",kernelFunc:Br};function Wr(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=$e(r,t[0].shape)[0];let a=cs(t.map(m=>m.shape),o);if(0===U(a))return e.makeTensorInfo(a,t[0].dtype,[]);const i=t.filter(m=>U(m.shape)>0);if(1===i.length)return ts({inputs:{x:i[0]},backend:e});if(kh(i.map(m=>m.shape),o),"complex64"===i[0].dtype){const m=i.map(w=>or({inputs:{input:w},backend:e})),g=i.map(w=>Br({inputs:{input:w},backend:e})),y=Wr({inputs:m,backend:e,attrs:{axis:o}}),x=Wr({inputs:g,backend:e,attrs:{axis:o}}),C=hn({inputs:{real:y,imag:x},backend:e});return m.forEach(w=>e.disposeIntermediateTensorInfo(w)),g.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(x),C}const u=i.map(m=>{const g=U(m.shape.slice(o));return vt({inputs:{x:m},backend:e,attrs:{shape:[-1,g]}})}),c=u.map(m=>({vals:e.data.get(m.dataId).values,shape:m.shape}));a=cs(u.map(m=>m.shape),1);const d=By(c,a,t[0].dtype,1===u[0].shape[0]),p=cs(i.map(m=>m.shape),o),f=e.makeTensorInfo(p,t[0].dtype,d);return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const DE={kernelName:qa,backendName:"cpu",kernelFunc:Wr};function Wy(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s;Ne([r,o],"conv2d");const h=as(l),d=Bt(r.shape,o.shape,a,u,i,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,x=d.padInfo.top,C="channelsLast"===d.dataFormat,w=new tn(d.outShape,r.dtype),N=Fe(r.shape),S=Fe(o.shape),I=N[0],E=C?N[1]:N[2],R=C?N[2]:1,z=C?1:N[1],K=w.strides[0],J=C?w.strides[1]:w.strides[2],Y=C?w.strides[2]:1,Q=C?1:w.strides[1],Z=e.data.get(r.dataId).values,X=e.data.get(o.dataId).values,ne=w.values;for(let ee=0;ee<d.batchSize;++ee){const se=ee*I,oe=ee*K;for(let le=0;le<d.outHeight;++le){const pe=oe+le*J,fe=le*d.strideHeight-x;for(let me=0;me<p;++me){const xe=fe+me*m;if(xe<0||xe>=d.inHeight)continue;const ge=me*S[0],ke=se+xe*E;for(let Ee=0;Ee<d.outWidth;++Ee){const De=pe+Ee*Y,Me=Ee*d.strideWidth-y;for(let Xe=0;Xe<f;++Xe){const rt=Me+Xe*g;if(rt<0||rt>=d.inWidth)continue;const yt=ke+rt*R;let mt=ge+Xe*S[1];for(let gt=0;gt<d.inChannels;++gt){const xt=Z[yt+gt*z];for(let At=0;At<d.outChannels;++At)ne[De+At*Q]+=xt*X[mt+At];mt+=d.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,ne)}const AE={kernelName:Xa,backendName:"cpu",kernelFunc:Wy},OE={kernelName:Au,backendName:"cpu",kernelFunc:function RE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;Ne([r,o],"conv2dBackpropFilter");const h=as(l),d=Bt(r.shape,c,a,1,i,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,x=new tn(d.filterShape,"float32"),C=d.padInfo.left,w=d.padInfo.top,N=e.data.get(r.dataId).values,S=e.data.get(o.dataId).values,I=new tn(r.shape,r.dtype,N),E=new tn(o.shape,o.dtype,S);for(let R=0;R<m;++R){const z=Math.max(0,Math.ceil((w-R)/p)),K=Math.min(d.outHeight,(d.inHeight+w-R)/p);for(let J=0;J<g;++J){const Y=Math.max(0,Math.ceil((C-J)/f)),Q=Math.min(d.outWidth,(d.inWidth+C-J)/f);for(let Z=0;Z<d.inChannels;++Z)for(let X=0;X<d.outChannels;++X){let ne=0;for(let ee=0;ee<d.batchSize;++ee)for(let se=z;se<K;++se){const oe=R+se*p-w;for(let le=Y;le<Q;++le){const pe=J+le*f-C;ne+=y?I.get(ee,oe,pe,Z)*E.get(ee,se,le,X):I.get(ee,Z,oe,pe)*E.get(ee,X,se,le)}}x.set(ne,R,J,Z,X)}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}},PE={kernelName:Za,backendName:"cpu",kernelFunc:function FE(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s;Ne([r,o],"conv2dBackpropInput");const h=Fe(o.shape),d=Fe(r.shape);let p=as(u);const f=Bt(a,o.shape,i,1,l,c,!1,p),m=new tn(f.inShape,"float32"),g=m.values,y=e.data.get(r.dataId).values,x=e.data.get(o.dataId).values,[C,w,N]=h,{batchSize:S,filterHeight:I,filterWidth:E,inChannels:R,inHeight:z,inWidth:K,outChannels:J,outHeight:Y,outWidth:Q,strideHeight:Z,strideWidth:X}=f;p=f.dataFormat;const ne=I-1-f.padInfo.top,ee=E-1-f.padInfo.left,se="channelsLast"===p,oe=m.strides[0],le=se?m.strides[1]:m.strides[2],pe=se?m.strides[2]:1,fe=se?1:m.strides[1],me=d[0],xe=se?d[1]:d[2],ge=se?d[2]:1,ke=se?1:d[1];for(let Ee=0;Ee<S;++Ee)for(let De=0;De<R;++De)for(let Me=0;Me<z;++Me){const Xe=Me-ne,rt=Math.max(0,Math.ceil(Xe/Z)),kt=Math.min(Y,(I+Xe)/Z);for(let yt=0;yt<K;++yt){const mt=yt-ee,gt=Math.max(0,Math.ceil(mt/X)),xt=Math.min(Q,(E+mt)/X);let At=0;for(let Yt=rt;Yt<kt;++Yt){const ss=Yt*Z-Xe;for(let bn=gt;bn<xt;++bn){const Wn=me*Ee+xe*Yt+ge*bn,gs=C*(I-1-ss)+w*(E-1-(bn*X-mt))+N*De;for(let Ps=0;Ps<J;++Ps)At+=y[Wn+ke*Ps]*x[gs+Ps]}}g[oe*Ee+le*Me+pe*yt+fe*De]=At}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}},ME={kernelName:Ya,backendName:"cpu",kernelFunc:function LE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s;Ne([r,o],"conv3d");const u=ws(r.shape,o.shape,a,l,i),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,x=g.left,C=g.top,w=new tn(u.outShape,r.dtype),N=e.data.get(r.dataId).values,S=e.data.get(o.dataId).values,I=w.values,E=Fe(r.shape),R=Fe(o.shape);for(let z=0;z<u.batchSize;++z){const K=z*E[0],J=z*w.strides[0];for(let Y=0;Y<u.outDepth;++Y){const Q=J+Y*w.strides[1],Z=Y*u.strideDepth-y;for(let X=0;X<c;++X){const ne=Z+X*p;if(ne<0||ne>=u.inDepth)continue;const ee=X*R[0],se=K+ne*E[1];for(let oe=0;oe<u.outHeight;++oe){const le=Q+oe*w.strides[2],pe=oe*u.strideHeight-C;for(let fe=0;fe<h;++fe){const me=pe+fe*f;if(me<0||me>=u.inHeight)continue;const xe=ee+fe*R[1],ge=se+me*E[2];for(let ke=0;ke<u.outWidth;++ke){const Ee=le+ke*u.outChannels,De=ke*u.strideWidth-x;for(let Me=0;Me<d;++Me){const Xe=De+Me*m;if(Xe<0||Xe>=u.inWidth)continue;const kt=ge+Xe*u.inChannels;let yt=xe+Me*R[2];for(let mt=0;mt<u.inChannels;++mt){const gt=N[kt+mt];for(let xt=0;xt<u.outChannels;++xt)I[Ee+xt]+=gt*S[yt+xt];yt+=u.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}},VE={kernelName:Ru,backendName:"cpu",kernelFunc:function zE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:l}=s;Ne([r,o],"conv3dBackpropFilterV2");const u=Fe(r.shape),c=Fe(o.shape),h=ws(r.shape,l,a,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=new tn(h.filterShape,"float32"),C=x.values,[w,N,S,I]=x.strides,E=e.data.get(o.dataId).values,[R,z,K,J]=c,Y=e.data.get(r.dataId).values,[Q,Z,X,ne]=u,ee=h.padInfo.front,se=h.padInfo.left,oe=h.padInfo.top;for(let le=0;le<m;++le){const pe=Math.max(0,Math.ceil((ee-le)/d)),fe=Math.min(h.outDepth,(h.inDepth+ee-le)/d),me=le*w;for(let xe=0;xe<g;++xe){const ge=Math.max(0,Math.ceil((oe-xe)/p)),ke=Math.min(h.outHeight,(h.inHeight+oe-xe)/p),Ee=xe*N+me;for(let De=0;De<y;++De){const Me=Math.max(0,Math.ceil((se-De)/f)),Xe=Math.min(h.outWidth,(h.inWidth+se-De)/f),rt=De*S+Ee;for(let kt=0;kt<h.inChannels;++kt){const yt=kt*I+rt;for(let mt=0;mt<h.outChannels;++mt){let gt=0;for(let xt=0;xt<h.batchSize;++xt){const At=xt*Q,ms=xt*R;for(let Yt=pe;Yt<fe;++Yt){const bn=(le+Yt*d-ee)*Z+At,cr=Yt*z+ms;for(let Wn=ge;Wn<ke;++Wn){const Ps=(xe+Wn*p-oe)*X+bn,Ls=Wn*K+cr;for(let Ms=Me;Ms<Xe;++Ms)gt+=Y[(De+Ms*f-se)*ne+Ps+kt]*E[Ms*J+Ls+mt]}}}C[yt+mt]=gt}}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}},WE={kernelName:Ou,backendName:"cpu",kernelFunc:function BE(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:l}=s;Ne([r],"conv3dBackpropInputV2");const u=Fe(r.shape),c=Fe(o.shape),h=ws(l,o.shape,i,1,a),d=new tn(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,x=e.data.get(r.dataId).values,[C,w,N,S]=u,I=e.data.get(o.dataId).values,[E,R,z,K]=c,{batchSize:J,filterDepth:Y,filterHeight:Q,filterWidth:Z,inChannels:X,inDepth:ne,inHeight:ee,inWidth:se,outChannels:oe,outDepth:le,outHeight:pe,outWidth:fe,strideDepth:me,strideHeight:xe,strideWidth:ge}=h,ke=Y-1-h.padInfo.front,Ee=Q-1-h.padInfo.top,De=Z-1-h.padInfo.left;for(let Me=0;Me<J;++Me)for(let Xe=0;Xe<X;++Xe)for(let rt=0;rt<ne;++rt){const kt=rt-ke,yt=Math.max(0,Math.ceil(kt/me)),mt=Math.min(le,(Y+kt)/me);for(let gt=0;gt<ee;++gt){const xt=gt-Ee,At=Math.max(0,Math.ceil(xt/xe)),ms=Math.min(pe,(Q+xt)/xe);for(let Yt=0;Yt<se;++Yt){const ss=Yt-De,bn=Math.max(0,Math.ceil(ss/ge)),cr=Math.min(fe,(Z+ss)/ge);let Wn=0;for(let gs=yt;gs<mt;++gs){const Ps=gs*me-kt;for(let Ls=At;Ls<ms;++Ls){const Ms=Ls*xe-xt;for(let za=bn;za<cr;++za){const wp=C*Me+w*gs+N*Ls+S*za,zW=E*(Y-1-Ps)+R*(Q-1-Ms)+z*(Z-1-(za*ge-ss))+K*Xe;for(let wu=0;wu<oe;++wu)Wn+=x[wp+wu]*I[zW+wu]}}}p[f*Me+m*rt+g*gt+y*Yt+Xe]=Wn}}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}},GE=st(go,n=>Math.cos(n)),UE={kernelName:go,backendName:"cpu",kernelFunc:GE},HE=st(yo,n=>Math.cosh(n)),jE={kernelName:yo,backendName:"cpu",kernelFunc:HE},qE={kernelName:Fu,backendName:"cpu",kernelFunc:function KE(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:a}=t,{cropSize:i,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=o.shape[0],[m,g]=i,y=Ke([f,m,g,p],"float32"),x=e.data.get(o.dataId).values,C=e.data.get(a.dataId).values,w=e.data.get(r.dataId).values,N=Fe(r.shape),S=Fe(y.shape);for(let I=0;I<f;I++){const E=4*I,R=x[E],z=x[E+1],K=x[E+2],J=x[E+3],Y=C[I];if(Y>=c)continue;const Q=m>1?(K-R)*(h-1)/(m-1):0,Z=g>1?(J-z)*(d-1)/(g-1):0;for(let X=0;X<m;X++){const ne=m>1?R*(h-1)+X*Q:.5*(R+K)*(h-1);if(ne<0||ne>h-1)for(let ee=0;ee<g;ee++)for(let se=0;se<p;se++)y.values[se+ee*S[2]+X*S[1]+I*S[0]]=u;else if("bilinear"===l){const ee=Math.floor(ne),se=Math.ceil(ne),oe=ne-ee;for(let le=0;le<g;le++){const pe=g>1?z*(d-1)+le*Z:.5*(z+J)*(d-1);if(pe<0||pe>d-1){for(let ge=0;ge<p;ge++)y.values[ge+le*S[2]+X*S[1]+I*S[0]]=u;continue}const fe=Math.floor(pe),me=Math.ceil(pe),xe=pe-fe;for(let ge=0;ge<p;ge++){let ke=ge+fe*N[2]+ee*N[1]+Y*N[0];const Ee=w[ke];ke=ge+me*N[2]+ee*N[1]+Y*N[0];const De=w[ke];ke=ge+fe*N[2]+se*N[1]+Y*N[0];const Me=w[ke];ke=ge+me*N[2]+se*N[1]+Y*N[0];const Xe=w[ke],rt=Ee+(De-Ee)*xe;ke=ge+le*S[2]+X*S[1]+I*S[0],y.values[ke]=rt+(Me+(Xe-Me)*xe-rt)*oe}}}else for(let ee=0;ee<g;++ee){const se=g>1?z*(d-1)+ee*Z:.5*(z+J)*(d-1);if(se<0||se>d-1){for(let pe=0;pe<p;pe++)y.values[pe+ee*S[2]+X*S[1]+I*S[0]]=u;continue}const oe=Math.round(se),le=Math.round(ne);for(let pe=0;pe<p;pe++)y.values[pe+ee*S[2]+X*S[1]+I*S[0]]=w[pe+oe*N[2]+le*N[1]+Y*N[0]]}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}},ZE={kernelName:Ja,backendName:"cpu",kernelFunc:function XE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;Ne(r,"cumsum");const l=_t([o],r.shape.length);let u=r;null!=l&&(u=Dn({inputs:{x:r},backend:e,attrs:{perm:l}}));const c=Rt(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=fn(u.dtype,"int32"),d=en(U(u.shape),h),p=e.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<p.length;y+=f)for(let x=0;x<f;x++){const C=m(y,x);if(0===x)d[C]=a?0:p[C];else{const w=m(y,x-1);d[C]=a?p[w]+d[w]:p[C]+d[w]}}const g=e.makeTensorInfo(u.shape,h,d);if(null!=l){const x=Dn({inputs:{x:g},backend:e,attrs:{perm:Sr(l)}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(u),x}return g}},JE={kernelName:Ap,backendName:"cpu",kernelFunc:function YE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a,binaryOutput:i}=s;if(1===r.shape.length){const c=Zd(e.data.get(r.dataId).values,e.data.get(o.dataId).values,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,c)}if(2===r.shape.length){const c=zy(e.bufferSync(r),e.bufferSync(o),a,i);return e.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},eD={kernelName:Pu,backendName:"cpu",kernelFunc:function QE(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:a}=s;k("NHWC"===a,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`),k(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const i=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*o,d=u*o,p=c/(o*o),f=e.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let y=0;y<i;++y)for(let x=0;x<h;++x){const C=Math.floor(x/o),w=x%o;for(let N=0;N<d;++N){const S=Math.floor(N/o),E=(w*o+N%o)*p;for(let R=0;R<p;++R)m[g++]=f[R+E+c*(S+u*(C+l*y))]}}return e.makeTensorInfo([i,h,d,p],r.dtype,m)}};function Gy(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=s;Ne([r,o],"depthwiseConv2DNative");const c=Fe(r.shape),h=Fe(o.shape);let d=l;null==d&&(d=[1,1]),k(St(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=Bt(r.shape,o.shape,a,d,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=p,C=x.left,w=x.top,N=p.outChannels/p.inChannels,S=new tn(p.outShape,r.dtype),I=e.data.get(r.dataId).values,E=e.data.get(o.dataId).values,R=S.values;for(let z=0;z<p.batchSize;++z){const K=z*c[0],J=z*S.strides[0];for(let Y=0;Y<p.outHeight;++Y){const Q=J+Y*S.strides[1],Z=Y*p.strideHeight-C;for(let X=0;X<f;++X){const ne=Z+X*g;if(ne<0||ne>=p.inHeight)continue;const ee=X*h[0],se=K+ne*c[1];for(let oe=0;oe<p.outWidth;++oe){const le=Q+oe*S.strides[2],pe=oe*p.strideWidth-w;for(let fe=0;fe<m;++fe){const me=pe+fe*y;if(me<0||me>=p.inWidth)continue;const ge=se+me*p.inChannels;let ke=le,Ee=ee+fe*h[1];for(let De=0;De<p.inChannels;++De){const Me=I[ge+De];for(let Xe=0;Xe<N;++Xe)R[ke+Xe]+=Me*E[Ee+Xe];ke+=N,Ee+=N}}}}}}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const tD={kernelName:Qa,backendName:"cpu",kernelFunc:Gy},sD={kernelName:Lu,backendName:"cpu",kernelFunc:function nD(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s;Ne([r,o],"depthwiseConv2dNativeBackpropFilter");const h=Bt(r.shape,c,a,i,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new tn(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,C=h.outChannels/h.inChannels,w=e.data.get(r.dataId).values,N=new tn(r.shape,r.dtype,w),S=e.data.get(o.dataId).values,I=new tn(o.shape,o.dtype,S);for(let E=0;E<f;++E){const R=Math.max(0,Math.ceil((x-E)/d)),z=Math.min(h.outHeight,(h.inHeight+x-E)/d);for(let K=0;K<m;++K){const J=Math.max(0,Math.ceil((y-K)/p)),Y=Math.min(h.outWidth,(h.inWidth+y-K)/p);for(let Q=0;Q<h.outChannels;++Q){const Z=Math.trunc(Q/C),X=Q%C;let ne=0;for(let ee=0;ee<h.batchSize;++ee)for(let se=R;se<z;++se){const oe=E+se*d-x;for(let le=J;le<Y;++le)ne+=N.get(ee,oe,K+le*p-y,Z)*I.get(ee,se,le,Q)}g.set(ne,E,K,Z,X)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}},oD={kernelName:Mu,backendName:"cpu",kernelFunc:function rD(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s;Ne([r,o],"depthwiseConv2DNativeBackpropInput");const h=Fe(r.shape),d=Fe(o.shape),p=Bt(c,o.shape,a,i,l,u,!0),f=new tn(p.inShape,"float32"),m=f.values,[g,y,x]=f.strides,C=e.data.get(r.dataId).values,[w,N,S]=h,I=e.data.get(o.dataId).values,[E,R,z]=d,{batchSize:K,filterHeight:J,filterWidth:Y,inChannels:Q,inHeight:Z,inWidth:X,outChannels:ne,outHeight:ee,outWidth:se,strideHeight:oe,strideWidth:le}=p,pe=J-1-p.padInfo.top,fe=Y-1-p.padInfo.left,me=ne/Q;for(let xe=0;xe<K;++xe)for(let ge=0;ge<Q;++ge)for(let ke=0;ke<Z;++ke){const Ee=ke-pe,De=Math.max(0,Math.ceil(Ee/oe)),Me=Math.min(ee,(J+Ee)/oe);for(let Xe=0;Xe<X;++Xe){const rt=Xe-fe,kt=Math.max(0,Math.ceil(rt/le)),yt=Math.min(se,(Y+rt)/le);let mt=0;for(let gt=De;gt<Me;++gt){const xt=gt*oe-Ee;for(let At=kt;At<yt;++At){const Yt=w*xe+N*gt+S*At,ss=E*(J-1-xt)+R*(Y-1-(At*le-rt))+z*ge;for(let bn=0;bn<me;++bn)mt+=C[Yt+(ge*me+bn)]*I[ss+bn]}}m[g*xe+y*ke+x*Xe+ge]=mt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}},iD={kernelName:"Diag",backendName:"cpu",kernelFunc:function aD(n){const{inputs:t,backend:e}=n,{x:s}=t,r=U(s.shape),o=e.data.get(s.dataId).values,a=Ke([r,r],s.dtype),i=a.values;for(let u=0;u<o.length;u++)i[u*r+u]=o[u];const l=[...s.shape,...s.shape];return e.makeTensorInfo(l,a.dtype,a.values)}},lD={kernelName:ei,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r}=n,{strides:o,pad:a,dilations:i}=e,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:C,strideHeight:w,strideWidth:N,filterHeight:S,filterWidth:I,dilationHeight:E,dilationWidth:R,outShape:z}=oa(s.shape,r.shape,o,a,"NHWC",i),K=U(z),J=z.length,Y=hr(s.dtype,K);for(let Z=0;Z<p;++Z)for(let X=0;X<y;++X){const ne=X*w-C.top;for(let ee=0;ee<x;++ee){const se=ee*N-C.left;for(let oe=0;oe<g;++oe){let le=Number.MIN_SAFE_INTEGER;for(let fe=0;fe<S;++fe){const me=ne+fe*E;if(me>=0&&me<f)for(let xe=0;xe<I;++xe){const ge=se+xe*R;if(ge>=0&&ge<m){const ke=Un([Z,me,ge,oe],c,Fe(s.shape)),Ee=Un([fe,xe,oe],d,Fe(r.shape)),De=u[ke]+h[Ee];De>le&&(le=De)}}}Y[Un([Z,X,ee,oe],J,Fe(z))]=le}}}return{dataId:l.write(Vs(Y,s.dtype),z,s.dtype),shape:z,dtype:s.dtype}}},uD={kernelName:Vu,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:l}=e,u=t,c=On(s.shape,u.data.get(s.dataId).values),h=On(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:C,strideWidth:w,filterHeight:N,filterWidth:S,dilationHeight:I,dilationWidth:E,outShape:R}=oa(s.shape,r.shape,a,i,"NHWC",l);k(o.rank===R.length,()=>`Error in ${Vu}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const z=On(R,u.data.get(o.dataId).values),K=kp(r.shape,r.dtype);for(let Y=0;Y<d;++Y)for(let Q=0;Q<g;++Q){const Z=Q*C-x.top;for(let X=0;X<y;++X){const ne=X*w-x.left;for(let ee=0;ee<m;++ee){let se=Number.MIN_SAFE_INTEGER,oe=0,le=0;for(let pe=0;pe<N;++pe){const fe=Z+pe*I;if(fe>=0&&fe<p)for(let me=0;me<S;++me){const xe=ne+me*E;if(xe>=0&&xe<f){const ge=c[Y][fe][xe][ee]+h[pe][me][ee];ge>se&&(se=ge,oe=pe,le=me)}}}K[oe][le][ee]+=z[Y][Q][X][ee]}}}return{dataId:u.write(Vs(K,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},cD={kernelName:zu,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:l}=e,u=t,c=On(s.shape,u.data.get(s.dataId).values),h=On(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:C,strideWidth:w,filterHeight:N,filterWidth:S,dilationHeight:I,dilationWidth:E,outShape:R}=oa(s.shape,r.shape,a,i,"NHWC",l);k(o.rank===R.length,()=>`Error in ${zu}, dy must have the same rank as output ${R.length}, but got ${o.rank}`);const z=On(R,u.data.get(o.dataId).values),K=kp(s.shape,s.dtype);for(let Y=0;Y<d;++Y)for(let Q=0;Q<g;++Q){const Z=Q*C-x.top;for(let X=0;X<y;++X){const ne=X*w-x.left;for(let ee=0;ee<m;++ee){let se=Number.MIN_SAFE_INTEGER,oe=Z<0?0:Z,le=ne<0?0:ne;for(let pe=0;pe<N;++pe){const fe=Z+pe*I;if(fe>=0&&fe<p)for(let me=0;me<S;++me){const xe=ne+me*E;if(xe>=0&&xe<f){const ge=c[Y][fe][xe][ee]+h[pe][me][ee];ge>se&&(se=ge,oe=fe,le=xe)}}}K[Y][oe][le][ee]+=z[Y][Q][X][ee]}}}return{dataId:u.write(Vs(K,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},dD={kernelName:Bu,backendName:"cpu",kernelFunc:function hD(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t;Ne([s,r],"eluGrad");const o=new Float32Array(U(r.shape)),a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values;for(let l=0;l<a.length;++l){const u=a[l];o[l]=u>=1?i[l]:i[l]*(u+1)}return e.makeTensorInfo(r.shape,"float32",o)}},pD=Ot((n,t)=>n===t?1:0),Uy=Ut(ti,pD,null,"bool"),fD={kernelName:ti,backendName:"cpu",kernelFunc:Uy},mD=Eh,gD=Dh,yD=Ah,xD=Rh,bD=Oh,wD=Fh,vD=st(wo,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+mD*e);return t*(1-((((wD*s+bD)*s+xD)*s+yD)*s+gD)*s*Math.exp(-e*e))}),ND={kernelName:wo,backendName:"cpu",kernelFunc:vD},Hy=Vr(n=>Math.exp(n)),jy=zr(vo,Hy),CD={kernelName:vo,backendName:"cpu",kernelFunc:jy};function Ql(n){const{inputs:t,backend:e,attrs:s}=n,{input:r}=t,{dim:o}=s,a=r.shape.length,i=r.shape.slice();let l=o;return o<0&&(k(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+o+1),i.splice(l,0,1),vt({inputs:{x:r},backend:e,attrs:{shape:i}})}const kD={kernelName:ni,backendName:"cpu",kernelFunc:Ql},Ky=Vr(n=>Math.expm1(n)),ID=zr(No,Ky),SD={kernelName:No,backendName:"cpu",kernelFunc:ID},Yd=Ot((n,t)=>n*t),TD=Kd((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),Jd=Ut(Oo,Yd,TD),$D={kernelName:Oo,backendName:"cpu",kernelFunc:Jd},_D=Ot((n,t)=>n/t),Qd=Ut(xo,_D),ep={kernelName:xo,backendName:"cpu",kernelFunc:Qd},qy=Ot((n,t)=>n-t),ED=Kd((n,t,e,s)=>({real:n-e,imag:t-s})),tp=Ut(Xo,qy,ED),DD={kernelName:Xo,backendName:"cpu",kernelFunc:tp};function Xy(n,t,e){const s=n.shape,r=s[0],o=s[1],a=e.data.get(n.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[r,o],c=U(u),h=Qt("float32",c),d=Qt("float32",c);for(let g=0;g<r;g++){const y=ar({inputs:{x:i},backend:e,attrs:{begin:[g,0],size:[1,o]}}),x=ar({inputs:{x:l},backend:e,attrs:{begin:[g,0],size:[1,o]}}),C=hn({inputs:{real:y,imag:x},backend:e}),{real:w,imag:N}=AD(C,t,e),S=hs(w,N);for(let I=0;I<o;I++){const E=Ph(S,I);h[g*o+I]=E.real,d[g*o+I]=E.imag}e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(C)}const p=e.makeTensorInfo(u,"float32",h),f=e.makeTensorInfo(u,"float32",d),m=hn({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),m}function AD(n,t,e){const s=U(n.shape),r=e.data.get(n.dataId),o=e.data.get(r.complexTensorInfos.real.dataId).values,a=e.data.get(r.complexTensorInfos.imag.dataId).values;if(function RD(n){return 0==(n&n-1)}(s)){const i=np(o,a,s,t,e),l=[n.shape[0],n.shape[1]];if(t){const u=e.makeTensorInfo(l,"float32",i.real),c=e.makeTensorInfo(l,"float32",i.imag),h=e.makeTensorInfo([],"float32",ys(s,"float32")),d=ts({inputs:{x:h},backend:e}),p=ep.kernelFunc({inputs:{a:u,b:h},backend:e}),f=ep.kernelFunc({inputs:{a:c,b:d},backend:e}),m=e.data.get(p.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}{const l=function OD(n,t,e){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let o=0,a=0;for(let i=0;i<t;i++){const l=cm(r*i,t,e),u=Ph(n,i);o+=u.real*l.real-u.imag*l.imag,a+=u.real*l.imag+u.imag*l.real}e&&(o/=t,a/=t),lm(s,o,a,r)}return s}(hs(o,a),s,t);return om(l)}}function np(n,t,e,s,r){if(1===e)return{real:n,imag:t};const o=hs(n,t),a=e/2,i=am(o),l=i.real,u=i.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=hn({inputs:{real:h,imag:d},backend:r}),f=im(o),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),C=r.makeTensorInfo(y,"float32",g),w=hn({inputs:{real:x,imag:C},backend:r}),N=np(l,u,a,s,r),S=N.real,I=N.imag,E=[S.length],R=r.makeTensorInfo(E,"float32",S),z=r.makeTensorInfo(E,"float32",I),K=hn({inputs:{real:R,imag:z},backend:r}),J=np(m,g,a,s,r),Y=J.real,Q=J.imag,Z=[Y.length],X=r.makeTensorInfo(Z,"float32",Y),ne=r.makeTensorInfo(Z,"float32",Q),ee=hn({inputs:{real:X,imag:ne},backend:r}),se=um(e,s),oe=[se.real.length],le=r.makeTensorInfo(oe,"float32",se.real),pe=r.makeTensorInfo(oe,"float32",se.imag),fe=hn({inputs:{real:le,imag:pe},backend:r}),me=Jd({inputs:{a:fe,b:ee},backend:r}),xe=Ea({inputs:{a:K,b:me},backend:r}),ge=tp({inputs:{a:K,b:me},backend:r}),ke=or({inputs:{input:xe},backend:r}),Ee=or({inputs:{input:ge},backend:r}),De=Br({inputs:{input:xe},backend:r}),Me=Br({inputs:{input:ge},backend:r}),Xe=Wr({inputs:[ke,Ee],backend:r,attrs:{axis:0}}),rt=Wr({inputs:[De,Me],backend:r,attrs:{axis:0}}),kt=r.data.get(Xe.dataId).values,yt=r.data.get(rt.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(fe),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(xe),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(ke),r.disposeIntermediateTensorInfo(De),r.disposeIntermediateTensorInfo(Ee),r.disposeIntermediateTensorInfo(Me),r.disposeIntermediateTensorInfo(Xe),r.disposeIntermediateTensorInfo(rt),{real:kt,imag:yt}}const PD={kernelName:"FFT",backendName:"cpu",kernelFunc:function FD(n){const{inputs:t,backend:e}=n,{input:s}=t,r=U(s.shape),o=s.shape[s.shape.length-1],i=vt({inputs:{x:s},backend:e,attrs:{shape:[r/o,o]}}),l=Xy(i,!1,e),u=vt({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}};function sp(n){const{backend:t,attrs:e}=n,{shape:s,value:r,dtype:o}=e,a=o||no(r),i=hr(a,U(s));return function MD(n,t,e){n.fill(t)}(i,r),t.makeTensorInfo(s,a,i)}const LD={kernelName:Gu,backendName:"cpu",kernelFunc:sp},zD={kernelName:Uu,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{image:s}=n,r=e,o=Qt(s.dtype,U(s.shape)),[a,i,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<a;d++){const p=d*l*i*u;for(let f=0;f<i;f++){const m=f*(l*u);for(let g=0;g<l;g++){const y=g*u;for(let x=0;x<u;x++){const N=Math.round(l-[a,f,g,x][2]),S=p+m+y+x;let I=c[S];N>=0&&N<l&&(I=c[p+m+N*u+x]),o[S]=I}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Zy=Vr(n=>Math.floor(n)),VD=zr(Co,Zy),BD={kernelName:Co,backendName:"cpu",kernelFunc:VD},WD=Ot((n,t)=>Math.floor(n/t)),GD=Ut(ko,WD,null,"int32"),UD={kernelName:ko,backendName:"cpu",kernelFunc:GD},jD={kernelName:Wi,backendName:"cpu",kernelFunc:function HD(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=Wy({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const g=m;m=Ea({inputs:{a:m,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=jd(e,m,p,i,f),e.disposeIntermediateTensorInfo(g)}return m}},qD={kernelName:Gi,backendName:"cpu",kernelFunc:function KD(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=Gy({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const g=m;m=Ea({inputs:{a:m,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=jd(e,m,p,i,f),e.disposeIntermediateTensorInfo(g)}return m}},ZD={kernelName:Op,backendName:"cpu",kernelFunc:function XD(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=U(s.shape),a=r.shape,i=a[a.length-1],[l,u,c,h]=_h(s,r);if(0===u)return e.makeTensorInfo(l,s.dtype,[]);const d=Ke([u,c],s.dtype),p=e.data.get(r.dataId).values,f=e.data.get(s.dataId).values;for(let m=0;m<u;m++){const g=[];let y=0;for(let x=0;x<i;x++){const C=p[m*i+x];y+=C*h[x],g.push(C)}if(y<0||y>=o/c)throw new Error(`Invalid indices: ${g} does not index into ${s.shape}`);for(let x=0;x<c;x++)d.values[m*c+x]=f[y*c+x]}return e.makeTensorInfo(l,d.dtype,d.values)}};function Yy(n,t,e){const s=Ke(e,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),u=t.locToIndex([a[0],a[2]]);a[2]=t.values[u];const c=n.locToIndex(a);s.values[r]=n.values[c]}return s}const JD={kernelName:ri,backendName:"cpu",kernelFunc:function YD(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:a,batchDims:i}=s;Ne([r,o],"gatherV2");let l=i;null==i&&(l=0);const u=U(o.shape),h=Mh(r,o,$e(a,r.shape)[0],l),d=vt({inputs:{x:r},backend:e,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),p=vt({inputs:{x:o},backend:e,attrs:{shape:[h.batchSize,u/h.batchSize]}}),f=[h.batchSize,h.outerSize,u/h.batchSize,h.sliceSize],m=e.bufferSync(p),y=Yy(e.bufferSync(d),m,f);return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.makeTensorInfo(h.outputShape,y.dtype,y.values)}},Jy=Ot((n,t)=>n>t?1:0),QD=Ut(oi,Jy,null,"bool"),e2={kernelName:oi,backendName:"cpu",kernelFunc:QD},t2=Ot((n,t)=>n>=t?1:0),n2=Ut(Io,t2,null,"bool"),s2={kernelName:Io,backendName:"cpu",kernelFunc:n2},o2={kernelName:Hu,backendName:"cpu",kernelFunc:function r2(n){const{inputs:t,backend:e}=n,{input:s}=t,r=U(s.shape),o=s.shape[s.shape.length-1],i=vt({inputs:{x:s},backend:e,attrs:{shape:[r/o,o]}}),l=Xy(i,!0,e),u=vt({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}},a2=st(So,n=>Number.isFinite(n)?1:0,"bool"),i2={kernelName:So,backendName:"cpu",kernelFunc:a2},l2=st(To,n=>Math.abs(n)===1/0?1:0,"bool"),u2={kernelName:To,backendName:"cpu",kernelFunc:l2},c2=st($o,n=>Number.isNaN(n)?1:0,"bool"),h2={kernelName:$o,backendName:"cpu",kernelFunc:c2},Qy=Ot((n,t)=>n<t?1:0),d2=Ut(li,Qy,null,"bool"),p2={kernelName:li,backendName:"cpu",kernelFunc:d2},f2=Ot((n,t)=>n<=t?1:0),m2=Ut(ui,f2,null,"bool"),g2={kernelName:ui,backendName:"cpu",kernelFunc:m2};function ex(n,t,e){const s=(t-n)/(e-1),r=en(e,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}const x2={kernelName:Fp,backendName:"cpu",kernelFunc:function y2(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,a=ex(s,r,o);return t.makeTensorInfo([a.length],"float32",a)}},tx=Vr(n=>Math.log(n)),b2=zr(_o,tx),w2={kernelName:_o,backendName:"cpu",kernelFunc:b2},v2=st(Eo,n=>Math.log1p(n)),N2={kernelName:Eo,backendName:"cpu",kernelFunc:v2},C2=Ot((n,t)=>n&&t),k2=Ut(ci,C2,null,"bool"),I2={kernelName:ci,backendName:"cpu",kernelFunc:k2},S2=st(hi,n=>n?0:1,"bool"),T2={kernelName:hi,backendName:"cpu",kernelFunc:S2},$2=Ot((n,t)=>n||t),_2=Ut(di,$2,null,"bool"),E2={kernelName:di,backendName:"cpu",kernelFunc:_2},A2={kernelName:pi,backendName:"cpu",kernelFunc:function D2(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:l}=s;Ne(r,"LRN");const u=r.shape[3],c=u-1,h=e.data.get(r.dataId).values,d=U(r.shape),p=new Float32Array(d);function f(m){const g=m%u;let y=m-g+Math.max(0,g-o);const x=m-g+Math.min(g+o,c);let C=0;for(;y<=x;y++){const w=h[y];C+=w*w}return C}for(let m=0;m<d;m++){const g=f(m),y=h[m]*Math.pow(a+i*g,-l);p[m]=y}return e.makeTensorInfo(r.shape,r.dtype,p)}},O2={kernelName:Ku,backendName:"cpu",kernelFunc:function R2(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s;Ne(a,"LRNGrad");const h=U(a.shape),d=a.shape[3],p=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,m=e.data.get(o.dataId).values,g=new Float32Array(h),y=h;for(let x=0;x<y;x++){const C=x%d,w=x-C+Math.max(0,C-i),N=x-C+Math.min(d,C+i+1);let S=0;for(let I=w;I<N;I++)S+=Math.pow(f[I],2);S=u*S+l;for(let I=w;I<N;I++){let E=-2*u*c*f[I]*m[x]/S;x===I&&(E+=Math.pow(S,-c)),E*=p[x],g[I]+=E}}return e.makeTensorInfo(a.shape,r.dtype,g)}};function nx(n,t,e,s){const r=Qt(s,U(e));for(let o=0;o<r.length;++o){const a=o*t;let i=n[a];for(let l=0;l<t;++l){const u=n[a+l];u>i&&(i=u)}r[o]=i}return r}function sx(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:a}=s,i=e;let l=r.shape;const u=l.length,c=$e(o,l);let h=c;const d=_t(h,u);let p=i.data.get(r.dataId).values;if(null!=d){const w=new Array(u);for(let N=0;N<w.length;N++)w[N]=l[d[N]];p=qd(p,l,r.dtype,d,w),h=Rt(h.length,u),l=w}Ne(r,"max"),qt("max",h,u);const[f,m]=Wt(l,h),y=nx(p,U(m),f,r.dtype),x=i.write(y,f,r.dtype);let C=f;return a&&(C=$t(f,c)),{dataId:x,shape:C,dtype:r.dtype}}const F2={kernelName:fi,backendName:"cpu",kernelFunc:sx},rx=Ot((n,t)=>Math.max(n,t)),P2=Ut(Do,rx),L2={kernelName:Do,backendName:"cpu",kernelFunc:P2},z2={kernelName:mi,backendName:"cpu",kernelFunc:function M2(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Ne(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s;k(St(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const c=Nn(r.shape,o,a,1,i,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))h=ts({inputs:{x:r},backend:e});else{const d=e.data.get(r.dataId).values,p=Fe(r.shape),f=Xd(d,0,r.dtype,p,c,"max");h=e.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}},B2={kernelName:gi,backendName:"cpu",kernelFunc:function V2(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:u,dilations:c}=s;Ne(r,"maxPool3d");let h=c;null==h&&(h=[1,1,1]);const d=os(r.shape,o,a,h,i,l,u),f=Ly(e.data.get(r.dataId).values,0,r.dtype,Fe(r.shape),d,"max");return e.makeTensorInfo(f.shape,"float32",f.values)}},G2={kernelName:Xu,backendName:"cpu",kernelFunc:function W2(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l,dilations:u,dimRoundingMode:c}=s;Ne([r,o],"maxPool3DGrad");const h=os(o.shape,a,i,u,l,c),p=function uE(n,t){const e=Ke(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const x=y*s-d;let C=x;for(;C<0;)C+=a;const w=Math.min(t.inDepth,u+x);for(let N=0;N<t.outHeight;++N){const S=N*r-p;let I=S;for(;I<0;)I+=i;const E=Math.min(t.inHeight,c+S);for(let R=0;R<t.outWidth;++R){const z=R*o-f;let K=z;for(;K<0;)K+=l;const J=Math.min(t.inWidth,h+z);let Y=Number.NEGATIVE_INFINITY,Q=-1;for(let Z=C;Z<w;Z+=a){const X=Z-x;for(let ne=I;ne<E;ne+=i){const ee=ne-S;for(let se=K;se<J;se+=l){const oe=se-z,le=n.get(m,Z,ne,se,g);le>=Y&&(Y=le,Q=X*c*h+ee*c+oe)}}}e.set(Q,m,y,N,R,g)}}}return e}(e.bufferSync(o),h),f=h.strideDepth,m=h.strideHeight,g=h.strideWidth,y=h.dilationDepth,x=h.dilationHeight,C=h.dilationWidth,w=h.effectiveFilterDepth,N=h.effectiveFilterHeight,S=h.effectiveFilterWidth,I=w-1-h.padInfo.front,E=S-1-h.padInfo.left,R=N-1-h.padInfo.top,z=Ke(o.shape,"float32"),K=e.bufferSync(r);for(let J=0;J<h.batchSize;++J)for(let Y=0;Y<h.inChannels;++Y)for(let Q=0;Q<h.inDepth;++Q)for(let Z=0;Z<h.inHeight;++Z)for(let X=0;X<h.inWidth;++X){const ne=Q-I,ee=Z-R,se=X-E;let oe=0;for(let le=0;le<w;le+=y){const pe=(ne+le)/f;if(!(pe<0||pe>=h.outDepth||Math.floor(pe)!==pe))for(let fe=0;fe<N;fe+=x){const me=(ee+fe)/m;if(!(me<0||me>=h.outHeight||Math.floor(me)!==me))for(let xe=0;xe<S;xe+=C){const ge=(se+xe)/g;if(ge<0||ge>=h.outWidth||Math.floor(ge)!==ge)continue;const De=w*N*S-1-p.get(J,pe,me,ge,Y)===le*N*S+fe*S+xe?1:0;0!==De&&(oe+=K.get(J,pe,me,ge,Y)*De)}}}z.set(oe,J,Q,Z,X,Y)}return e.makeTensorInfo(z.shape,z.dtype,z.values)}},H2={kernelName:qu,backendName:"cpu",kernelFunc:function U2(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:a}=t,i=o;Ne([o,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Nn(i.shape,l,u,1,c,h),p=e.data.get(i.dataId).values,f=Ke(d.outShape,i.dtype,Py(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,x=d.dilationWidth,C=d.effectiveFilterHeight,w=d.effectiveFilterWidth,N=w-1-d.padInfo.left,S=C-1-d.padInfo.top,I=Ke(i.shape,"float32"),E=e.data.get(r.dataId).values,R=Ke(r.shape,"float32",E);for(let z=0;z<d.batchSize;++z)for(let K=0;K<d.inChannels;++K)for(let J=0;J<d.inHeight;++J)for(let Y=0;Y<d.inWidth;++Y){const Q=J-S,Z=Y-N;let X=0;for(let ne=0;ne<C;ne+=y){const ee=(Q+ne)/m;if(!(ee<0||ee>=d.outHeight||Math.floor(ee)!==ee))for(let se=0;se<w;se+=x){const oe=(Z+se)/g;if(oe<0||oe>=d.outWidth||Math.floor(oe)!==oe)continue;const fe=C*w-1-f.get(z,ee,oe,K)===ne*w+se?1:0;0!==fe&&(X+=R.get(z,ee,oe,K)*fe)}}I.set(X,z,J,Y,K)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}},K2={kernelName:Pp,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=t,l=e;Ne(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Nn(s.shape,r,o,[1,1],a),[h,d]=function j2(n,t,e,s,r){const a=Xd(n,0,e,Fe(t),r,"max"),i=Py(n,t,e,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,i,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function eu(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;let i;Ne(r,"sum"),i="bool"===r.dtype?As({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):ts({inputs:{x:r},backend:e});const l=i.shape.length,u=$e(o,i.shape),c=_t(u,l);let h=u,d=i;null!=c&&(d=Dn({inputs:{x:i},backend:e,attrs:{perm:c}}),h=Rt(h.length,l)),qt("sum",h,d.shape.length);const[p,f]=Wt(d.shape,h);let g=Jl(e,p,fn(d.dtype,"int32"));const y=U(f),x=e.data.get(g.dataId).values,C=e.data.get(d.dataId).values;for(let w=0;w<x.length;++w){const N=w*y;let S=0;for(let I=0;I<y;++I)S+=C[N+I];x[w]=S}if(a){const N=g;g=vt({inputs:{x:g},backend:e,attrs:{shape:$t(g.shape,u)}}),e.disposeIntermediateTensorInfo(N)}return e.disposeIntermediateTensorInfo(i),null!=c&&e.disposeIntermediateTensorInfo(d),g}const q2={kernelName:Ri,backendName:"cpu",kernelFunc:eu},Z2={kernelName:yi,backendName:"cpu",kernelFunc:function X2(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=$e(o,r.shape),c=U(Wt(r.shape,i)[1]),h=[],d=e.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=As({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});h.push(p);const f=Qd({inputs:{a:p,b:d},backend:e});h.push(f);const m=eu({inputs:{x:f},backend:e,attrs:{axis:o,keepDims:a}});return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}},J2={kernelName:xi,backendName:"cpu",kernelFunc:function Y2(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;Ne(r,"min");const i=$e(o,r.shape);let l=i;const u=_t(l,r.shape.length);let c=r;null!=u&&(c=Dn({inputs:{x:r},backend:e,attrs:{perm:u}}),l=Rt(l.length,r.shape.length)),qt("min",l,c.shape.length);const[h,d]=Wt(c.shape,l),p=U(d),f=en(U(h),c.dtype),m=e.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const x=y*p;let C=m[x];for(let w=0;w<p;++w){const N=m[x+w];N<C&&(C=N)}f[y]=C}null!=u&&e.disposeIntermediateTensorInfo(c);const g=e.makeTensorInfo(h,c.dtype,f);if(a){const x=vt({inputs:{x:g},backend:e,attrs:{shape:$t(h,i)}});return e.disposeIntermediateTensorInfo(g),x}return g}},ox=Ot((n,t)=>Math.min(n,t)),Q2=Ut(Ao,ox),eA={kernelName:Ao,backendName:"cpu",kernelFunc:Q2},nA={kernelName:bi,backendName:"cpu",kernelFunc:function tA(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,mode:a}=s;Ne(r,"mirrorPad");const i=o.map((C,w)=>C[0]+r.shape[w]+C[1]),l=o.map(C=>C[0]),u=o.map((C,w)=>C[0]+r.shape[w]),c="reflect"===a?0:1,h=e.data.get(r.dataId).values,d=r.shape.length,p=Fe(r.shape),f=U(i),m=i.length,g=Fe(i),y=Qt(r.dtype,f);for(let C=0;C<f;C++){let w=so(C,m,g);for(let S=0;S<m;S++)w[S]<l[S]?w[S]=2*l[S]-w[S]-c:w[S]>=u[S]&&(w[S]=2*(u[S]-1)-w[S]+c);w=w.map((S,I)=>S-l[I]);const N=Un(w,d,p);y[C]=h[N]}return{dataId:e.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},sA=Ot((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),rA=Ut(Ro,sA),oA={kernelName:Ro,backendName:"cpu",kernelFunc:rA};var aA=B(60537);function ax(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,a=r.shape.length;let i=o;if(-1===i&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const l=$e([i],r.shape),u=sx({inputs:{x:r},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),c=$t(u.shape,l),h=vt({inputs:{x:u},backend:e,attrs:{shape:c}}),d=tp({inputs:{a:r,b:h},backend:e}),p=jy({inputs:{x:d},backend:e}),f=eu({inputs:{x:p},backend:e,attrs:{axis:l,keepDims:!1}}),m=vt({inputs:{x:f},backend:e,attrs:{shape:c}}),g=Qd({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const iA={kernelName:Pi,backendName:"cpu",kernelFunc:ax},uA={kernelName:Lp,backendName:"cpu",kernelFunc:function lA(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s;Ne(r,"multinomial");const l=i?r:ax({inputs:{logits:r},backend:e,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=e.data.get(l.dataId).values,d=[u,o],p=en(U(d),"int32");for(let f=0;f<u;++f){const m=f*c,g=new Float32Array(c-1);g[0]=h[m];for(let C=1;C<g.length;++C)g[C]=g[C-1]+h[m+C];const y=aA.alea(a.toString()),x=f*o;for(let C=0;C<o;++C){const w=y();p[x+C]=g.length;for(let N=0;N<g.length;N++)if(w<g[N]){p[x+C]=N;break}}}return i||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(d,"int32",p)}};function ix(n,t,e){const s=ys(-1,e);return Yd([],t,s,n,e)}const hA={kernelName:wi,backendName:"cpu",kernelFunc:function cA(n){const{inputs:t,backend:e}=n,{x:s}=t;Ne(s,"neg");const r=e.data.get(s.dataId).values,[o,a]=ix(r,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,o)}},dA=uh,fA={kernelName:Zu,backendName:"cpu",kernelFunc:function pA(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=s;Ne(r,"NonMaxSuppression");const u=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,{selectedIndices:h}=dA(u,c,a,i,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},mA=ch,yA={kernelName:Yu,backendName:"cpu",kernelFunc:function gA(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s;Ne(r,"NonMaxSuppressionPadded");const c=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=mA(c,h,a,i,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}},xA=hh,wA={kernelName:Ju,backendName:"cpu",kernelFunc:function bA(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s;Ne(r,"NonMaxSuppressionWithScore");const c=e.data.get(r.dataId).values,h=e.data.get(o.dataId).values,d=a,p=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=xA(c,h,d,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},lx=Ot((n,t)=>n!==t?1:0),vA=Ut(vi,lx,null,"bool"),NA={kernelName:vi,backendName:"cpu",kernelFunc:vA},kA={kernelName:Ci,backendName:"cpu",kernelFunc:function CA(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{depth:o,onValue:a,offValue:i}=s;Ne(r,"oneHot");const l=U(r.shape),u=new Float32Array(l*o);u.fill(i);const c=e.data.get(r.dataId).values;for(let h=0;h<l;++h)c[h]>=0&&c[h]<o&&(u[h*o+c[h]]=a);return e.makeTensorInfo([...r.shape,o],"int32",u)}};function tu(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const r=or({inputs:{input:s},backend:e}),o=tu({inputs:{x:r},backend:e}),a=Br({inputs:{input:s},backend:e}),i=tu({inputs:{x:a},backend:e}),l=hn({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}return sp({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const IA={kernelName:Vi,backendName:"cpu",kernelFunc:tu},SA={kernelName:Ni,backendName:"cpu",kernelFunc:function ux(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const r=or({inputs:{input:s},backend:e}),o=ux({inputs:{x:r},backend:e}),a=Br({inputs:{input:s},backend:e}),i=tu({inputs:{x:a},backend:e}),l=hn({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}return sp({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function cx(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(1===t.length)return Ql({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(c=>{Le(o,c.shape,"All tensors passed to stack must have matching shapes"),k(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=Wr({inputs:t.map(c=>{const h=Ql({inputs:{input:c},backend:e,attrs:{dim:r}});return i.push(h),h}),backend:e,attrs:{axis:r}});return i.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}const TA={kernelName:ki,backendName:"cpu",kernelFunc:cx},hx={kernelName:Ii,backendName:"cpu",kernelFunc:function $A(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:a}=s;Ne(r,"pad");const i=o.map((x,C)=>x[0]+r.shape[C]+x[1]),l=o.map(x=>x[0]),u=e.data.get(r.dataId).values,c=U(r.shape),h=r.shape.length,d=Fe(r.shape),p=U(i),f=i.length,m=Fe(i),g=Qt(r.dtype,p);0!==a&&g.fill(a);for(let x=0;x<c;x++)g[Un(so(x,h,d).map((S,I)=>S+l[I]),f,m)]=u[x];return{dataId:e.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},_A=Ot((n,t)=>Math.pow(n,t)),EA=Ut(Fo,_A),DA={kernelName:Fo,backendName:"cpu",kernelFunc:EA};function dx(n,t,e,s){const[r,o]=Wt(n,s),a=fn(t,"int32"),i=en(U(r),a),l=U(o);for(let u=0;u<i.length;++u){const c=u*l;let h=1;for(let d=0;d<l;++d)h*=e[c+d];i[u]=h}return{outVals:i,outShape:r,outDtype:a}}const RA={kernelName:Qu,backendName:"cpu",kernelFunc:function AA(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;Ne(r,"prod");const i=r.shape.length,l=$e(o,r.shape),u=_t(l,i);let c=l,h=r;const d=[];null!=u&&(h=Dn({inputs:{x:r},backend:e,attrs:{perm:u}}),d.push(h),c=Rt(c.length,i));const p=e.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=dx(h.shape,h.dtype,p,c);let y=m;return a&&(y=$t(m,l)),d.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(y,g,f)}};function px(n,t,e,s){if(n===t||n<t&&e<0||t<n&&e>1)return en(0,s);const l=en(Math.abs(Math.ceil((t-n)/e)),s);t<n&&1===e&&(e=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}const FA={kernelName:ec,backendName:"cpu",kernelFunc:function OA(n){const{backend:t,attrs:e}=n,{start:s,stop:r,dtype:o,step:a}=e,i=px(s,r,a,o);return t.makeTensorInfo([i.length],o,i)}},PA=st(Po,n=>1/n),LA={kernelName:Po,backendName:"cpu",kernelFunc:PA},zA={kernelName:_i,backendName:"cpu",kernelFunc:function MA(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s;Ne(r,"resizeBilinear");const l=Fe(r.shape),[u,c]=i,[h,d,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(U([h,u,c,f])),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],x=[o&&u>1?u-1:u,o&&c>1?c-1:c];let C=0;const w=y[0]/x[0],N=y[1]/x[1];for(let S=0;S<h;S++)for(let I=0;I<u;I++){let E;E=a?w*(I+.5)-.5:w*I;const R=Math.max(0,Math.floor(E)),z=E-R,K=Math.min(d-1,Math.ceil(E)),J=S*l[0]+R*l[1],Y=S*l[0]+K*l[1];for(let Q=0;Q<c;Q++){let Z;Z=a?N*(Q+.5)-.5:N*Q;const X=Math.max(0,Math.floor(Z)),ne=Z-X,ee=Math.min(p-1,Math.ceil(Z)),se=J+X*l[2],oe=Y+X*l[2],le=J+ee*l[2],pe=Y+ee*l[2];for(let fe=0;fe<f;fe++){const me=m[se+fe],xe=m[oe+fe],Ee=me+(m[le+fe]-me)*ne;g[C++]=Ee+(xe+(m[pe+fe]-xe)*ne-Ee)*z}}}return e.makeTensorInfo([h,u,c,f],"float32",g)}},BA={kernelName:sc,backendName:"cpu",kernelFunc:function VA(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s;Ne([o,r],"resizeBilinearGrad");const i=Fe(r.shape),[l,u,c,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(l*u*c*h),m=[a&&d>1?u-1:u,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],y=m[0]/g[0],x=m[1]/g[1],C=e.data.get(o.dataId).values;let w=0;for(let N=0;N<l;N++){const S=N*i[0];for(let I=0;I<d;I++){const E=I*y,R=Math.floor(E),z=Math.min(Math.ceil(E),u-1),K=S+R*i[1],J=S+z*i[1],Y=E-R,Q=1-Y;for(let Z=0;Z<p;Z++){const X=Z*x,ne=Math.floor(X),ee=Math.min(Math.ceil(X),c-1),se=X-ne,oe=1-se,le=K+ne*i[2],pe=K+ee*i[2],fe=J+ne*i[2],me=J+ee*i[2],xe=Q*oe,ge=Q*se,ke=Y*oe,Ee=Y*se;for(let De=0;De<h;De++){const Me=C[w++];f[le+De]+=Me*xe,f[pe+De]+=Me*ge,f[fe+De]+=Me*ke,f[me+De]+=Me*Ee}}}}return e.makeTensorInfo([l,c,u,h],"float32",f)}},GA={kernelName:$i,backendName:"cpu",kernelFunc:function WA(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s;Ne(r,"resizeNearestNeighbor");const l=Fe(r.shape),[u,c]=i,[h,d,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],x=[o&&u>1?u-1:u,o&&c>1?c-1:c],C=y[0]/x[0],w=y[1]/x[1];let N=0;for(let S=0;S<h;S++){const I=S*l[0];for(let E=0;E<u;E++){const R=a?C*(E+.5):C*E;let z=Math.min(d-1,o?Math.round(R):Math.floor(R));a&&(z=Math.max(0,z));const K=I+z*l[1];for(let J=0;J<c;J++){const Y=a?w*(J+.5):w*J;let Q=Math.min(p-1,o?Math.round(Y):Math.floor(Y));a&&(Q=Math.max(0,Q));const Z=K+Q*l[2];for(let X=0;X<f;X++)g[N++]=m[Z+X]}}}return e.makeTensorInfo([h,u,c,f],r.dtype,g)}},HA={kernelName:nc,backendName:"cpu",kernelFunc:function UA(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s;Ne([o,r],"resizeNearestNeighborGrad");const i=Fe(r.shape),l=Fe(o.shape),[u,c,h,d]=r.shape,[,p,f]=o.shape,m=new Float32Array(u*c*h*d),g=e.data.get(o.dataId).values,y=[a&&p>1?c-1:c,a&&f>1?h-1:h],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],C=y[0]/x[0],w=y[1]/x[1],N=1/C,S=1/w,I=2*Math.ceil(N)+2,E=2*Math.ceil(S)+2;for(let R=0;R<u;R++){const z=R*i[0];for(let K=0;K<c;K++){const J=z+K*i[1],Y=Math.floor(K*N),Q=Math.floor(Y-I/2);for(let Z=0;Z<h;Z++){const X=J+Z*i[2],ne=Math.floor(Z*S),ee=Math.floor(ne-E/2);for(let se=0;se<d;se++){let oe=0;for(let le=0;le<I;le++){const pe=le+Q;if(pe<0||pe>=p)continue;const fe=z+pe*l[1],me=pe*C;if(K===Math.min(c-1,a?Math.round(me):Math.floor(me)))for(let ge=0;ge<E;ge++){const ke=ge+ee;if(ke<0||ke>=f)continue;const Ee=fe+ke*l[2],De=ke*w;Z===Math.min(h-1,a?Math.round(De):Math.floor(De))&&(oe+=g[Ee+se])}}m[X+se]=oe}}}}return e.makeTensorInfo(r.shape,r.dtype,m)}},KA={kernelName:Ei,backendName:"cpu",kernelFunc:function jA(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s;Ne(r,"reverse");const a=r.shape.length,i=$e(o,r.shape);if(0===a)return ts({inputs:{x:r},backend:e});const l=new tn(r.shape,r.dtype),u=e.bufferSync(r);for(let c=0;c<l.size;c++){const h=l.indexToLoc(c),d=h.slice();i.forEach(p=>d[p]=r.shape[p]-1-d[p]),l.set(u.get(...d),...h)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}},qA={kernelName:lc,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=t,i=e,l=Qt(s.dtype,U(s.shape)),[u,c,h,d]=s.shape,[p,f]=Sh(a,c,h),g=Math.sin(r),y=Math.cos(r),x=i.data.get(s.dataId).values;for(let w=0;w<u;w++){const N=w*h*c*d;for(let S=0;S<c;S++){const I=S*(h*d);for(let E=0;E<h;E++){const R=E*d;for(let z=0;z<d;z++){const K=[u,S,E,z],J=K[2],Y=K[1];let Q=(J-p)*y-(Y-f)*g,Z=(J-p)*g+(Y-f)*y;Q=Math.round(Q+p),Z=Math.round(Z+f);let X=o;"number"!=typeof o&&(X=3===z?255:o[z]),Q>=0&&Q<h&&Z>=0&&Z<c&&(X=x[N+Z*(h*d)+Q*d+z]),l[N+I+R+z]=X}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},XA=st(zo,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2==0?t:t+1}),ZA={kernelName:zo,backendName:"cpu",kernelFunc:XA},fx=Vr(n=>1/Math.sqrt(n)),YA=zr(Vo,fx),JA={kernelName:Vo,backendName:"cpu",kernelFunc:YA};function mx(n,t,e,s,r,o,a,i,l,u){const c=[s/r,r],h=n.values,d=t.values;if(0===s)return Ke(e,t.dtype);const p=Ke(c,t.dtype);p.values.fill(l);for(let f=0;f<o;f++){const m=[];let g=0;for(let y=0;y<a;y++){const x=h[f*a+y];m.push(x),g+=x*i[y]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${e}`);for(let y=0;y<r;y++)u?p.values[g*r+y]+=d[f*r+y]:p.values[g*r+y]=0===t.rank?d[0]:d[f*r+y]}return p}const eR={kernelName:Mp,backendName:"cpu",kernelFunc:function QA(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:a}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=fa(0,r,a),m=mx(e.bufferSync(r),e.bufferSync(o),a,h,u,l,i,c,0,!0);return e.makeTensorInfo(a,m.dtype,m.values)}},nR={kernelName:Di,backendName:"cpu",kernelFunc:function tR(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t;Ne([s,r,o],"select");const a=s.shape.length,i=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,c=fn(r.dtype,o.dtype),h=en(U(r.shape),c);let d=0;const p=0===a||a>1||1===r.shape.length?1:U(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)h[d++]=1===i[f]?l[f]:u[f];return e.makeTensorInfo(r.shape,c,h)}},sR=Nl,rR=Cl,oR=st(Bo,n=>n>=0?rR*n:sR*(Math.exp(n)-1)),aR={kernelName:Bo,backendName:"cpu",kernelFunc:oR},iR=st(Ho,n=>1/(1+Math.exp(-n))),lR={kernelName:Ho,backendName:"cpu",kernelFunc:iR},uR=st(Uo,n=>n<0?-1:n>0?1:0),cR={kernelName:Uo,backendName:"cpu",kernelFunc:uR},hR=st(Wo,n=>Math.sin(n)),dR={kernelName:Wo,backendName:"cpu",kernelFunc:hR},pR=st(Go,n=>Math.sinh(n)),fR={kernelName:Go,backendName:"cpu",kernelFunc:pR},gx=Math.log(1.1920928955078125e-7)+2,mR=st(jo,n=>{const t=n>-gx,e=n<gx,s=Math.exp(n);let r;return r=e?s:t?n:Math.log(1+s),r}),gR={kernelName:jo,backendName:"cpu",kernelFunc:mR},xR={kernelName:Oi,backendName:"cpu",kernelFunc:function yR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s;Ne([r],"spaceToBatchND");const i=U(o),l=[[0,0]];l.push(...a);for(let S=1+o.length;S<r.shape.length;++S)l.push([0,0]);const u=hx.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),c=ha(u.shape,o,i,!1),h=da(c.length,o.length,!1),d=pa(u.shape,o,i,!1),m=vt({inputs:{x:u},backend:e,attrs:{shape:c}}),x=Dn({inputs:{x:m},backend:e,attrs:{perm:h}}),N=vt({inputs:{x},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),N}},wR={kernelName:zp,backendName:"cpu",kernelFunc:function bR(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=fa(0,r,i),y=mx(e.bufferSync(r),e.bufferSync(o),i,d,c,u,l,h,e.data.get(a.dataId).values[0],!1);return e.makeTensorInfo(i,y.dtype,y.values)}},NR={kernelName:Fi,backendName:"cpu",kernelFunc:function vR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=s,i=$e(a,r.shape)[0],l=Lh(r,o,i),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map(h=>{const d=[...c];d[i]=h;const p=ar({inputs:{x:r},backend:e,attrs:{begin:u,size:d}});return u[i]+=h,p})}},CR=st(Ko,n=>Math.sqrt(n)),kR={kernelName:Ko,backendName:"cpu",kernelFunc:CR},IR={kernelName:rc,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;Ne(e,"square");const r=s.data.get(e.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const l=r[i];o[i]=l*l}return{dataId:s.write(o,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},yx=Ot((n,t)=>{const e=n-t;return e*e}),SR=Ut(qo,yx),TR={kernelName:qo,backendName:"cpu",kernelFunc:SR},$R=st(Qo,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),_R={kernelName:Qo,backendName:"cpu",kernelFunc:$R};function xx(n,t,e,s){const r=Ke(n,t.dtype);for(let o=0;o<r.size;o++){const a=r.indexToLoc(o),i=new Array(a.length);for(let l=0;l<i.length;l++)i[l]=a[l]*e[l]+s[l];r.set(t.get(...i),...a)}return r}const DR={kernelName:oc,backendName:"cpu",kernelFunc:function ER(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Ne(r,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:x}=Fc(r.shape,o,a,i,l,u,c,h,d),C=vt({inputs:{x:r},backend:e,attrs:{shape:y}});let w;if(p){const S=ar({inputs:{x:C},backend:e,attrs:{begin:f,size:g}});w=vt({inputs:{x:S},backend:e,attrs:{shape:x}}),e.disposeIntermediateTensorInfo(S)}else if(x.some(S=>0===S))w=e.makeTensorInfo(x,r.dtype,[]);else{const I=xx(x,e.bufferSync(C),m,f);w=e.makeTensorInfo(I.shape,I.dtype,I.values)}const N=vt({inputs:{x:w},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(w),N}},AR=st(Zo,n=>Math.tan(n)),RR={kernelName:Zo,backendName:"cpu",kernelFunc:AR},OR=st(Yo,n=>Math.tanh(n));function bx(n,t){const e=new Array(n.rank);for(let r=0;r<e.length;r++)e[r]=n.shape[r]*t[r];const s=Ke(e,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),a=new Array(n.rank);for(let l=0;l<a.length;l++)a[l]=o[l]%n.shape[l];const i=n.locToIndex(a);s.values[r]=n.values[i]}return s}function wx(n,t,e,s,r){const o=t[t.length-1],[a,i]=[n.length/o,o],l=Qt(e,a*s),u=Qt("int32",a*s);for(let h=0;h<a;h++){const d=h*i,p=n.subarray(d,d+i),f=[];for(let x=0;x<p.length;x++)f.push({value:p[x],index:x});f.sort((x,C)=>C.value-x.value);const m=h*s,g=l.subarray(m,m+s),y=u.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,y[x]=f[x].index}const c=t.slice();return c[c.length-1]=s,[Ke(c,e,l),Ke(c,"int32",u)]}function vx(n,t,e,s){const r=$e(t,e)[0],o=[1,e[0],1];for(let f=0;f<r;f++)o[0]*=e[f];o[1]=e[r];for(let f=r+1;f<e.length;f++)o[2]*=e[f];const a={},i=new Int32Array(e[r]),l=new tn(o,s,n),u=[],c=1===o[0]&&1===o[2];for(let f=0;f<e[r];f++){let m;if(c)m=n[f].toString();else{const g=[];for(let y=0;y<o[0];y++)for(let x=0;x<o[2];x++)g.push(l.get(y,f,x));m=g.join(",")}if(void 0!==a[m])i[f]=a[m];else{const g=Object.keys(a).length;a[m]=g,i[f]=g,u.push(f)}}const h=o.slice();h[1]=Object.keys(a).length;const d=new tn(h,s);u.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let y=0;y<o[2];y++)d.set(l.get(g,f,y),g,m,y)});const p=e.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const jR=[F_,P_,M_,V_,D_,W_,H_,K_,X_,Y_,Q_,tE,sE,aE,lE,hE,pE,mE,yE,R_,bE,NE,kE,__,SE,$E,T_,_E,DE,OE,PE,AE,VE,WE,ME,UE,jE,qE,ZE,JE,eD,tD,sD,oD,iD,lD,cD,uD,ep,w_,dD,fD,ND,CD,kD,SD,PD,LD,zD,BD,UD,jD,qD,ZD,JD,e2,s2,v_,o2,EE,i2,u2,h2,N_,p2,g2,x2,w2,N2,I2,T2,E2,A2,O2,L2,z2,B2,G2,H2,K2,F2,Z2,J2,eA,nA,oA,uA,$D,hA,fA,yA,wA,NA,kA,SA,TA,hx,DA,k_,RA,FA,$_,LA,I_,S_,A_,zA,BA,GA,HA,KA,qA,ZA,JA,eR,nR,aR,lR,cR,dR,fR,wE,iA,gR,xR,wR,NR,kR,IR,TR,_R,DR,DD,q2,RR,{kernelName:Yo,backendName:"cpu",kernelFunc:OR},{kernelName:Jo,backendName:"cpu",kernelFunc:function PR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;Ne(r,"tile");const a=bx(e.bufferSync(r),o);return e.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:ac,backendName:"cpu",kernelFunc:function MR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o}=s;Ne(r,"topk");const i=e.data.get(r.dataId).values,[l,u]=wx(i,r.shape,r.dtype,o);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}},G_,{kernelName:ic,backendName:"cpu",kernelFunc:function VR(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;Ne(o,"unique");const a=s.data.get(o.dataId).values,{outputValues:i,outputShape:l,indices:u}=vx(a,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Mi,backendName:"cpu",kernelFunc:function WR(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape.length,i=r.shape[o],l=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==o&&(l[u++]=r.shape[p]);const c=new Array(a).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(i);for(let p=0;p<d.length;p++){c[o]=p;const f=ar({inputs:{x:r},backend:e,attrs:{begin:c,size:h}});d[p]=vt({inputs:{x:f},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(f)}return d}},{kernelName:zi,backendName:"cpu",kernelFunc:function UR(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:a}=s;Ne(r,"unsortedSegmentSum");const u=[],c=[],h=r.shape.length-o.shape.length;let d=o;for(let f=0;f<h;++f){const m=Ql({inputs:{input:d},backend:e,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<a;++f){const m=ys(f,"int32"),g=e.makeTensorInfo([],"int32",m),y=Uy({inputs:{a:g,b:d},backend:e}),x=As({inputs:{x:y},backend:e,attrs:{dtype:"float32"}}),C=Jd({inputs:{a:x,b:r},backend:e}),w=eu({inputs:{x:C},backend:e,attrs:{axis:0,keepDims:!1}});u.push(w),c.push(g),c.push(y),c.push(x),c.push(C),c.push(w)}const p=cx({inputs:u,backend:e,attrs:{axis:0}});return c.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},IA];for(const n of jR)cc(n);const Rs={},rp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ns(n){if(!(n in Rs)){const e=function XR(n){if(1!==n&&2!==n)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function qR(n){if(typeof OffscreenCanvas<"u"&&2===n)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(n);return t.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete Rs[n]},!1),1===n?t.getContext("webgl",rp)||t.getContext("experimental-webgl",rp):t.getContext("webgl2",rp)}(n);if(null===e)return console.log("Could not get context for WebGL version",n),null;Rs[n]=e}const t=Rs[n];return t.isContextLost()?(delete Rs[n],ns(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Rs[n])}var Gr=(()=>{return(n=Gr||(Gr={}))[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH",Gr;var n})(),dn=(()=>{return(n=dn||(dn={}))[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD",dn;var n})(),Ht=(()=>{return(n=Ht||(Ht={}))[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",Ht;var n})();function Da(n,t){return[t,n]}function Aa(n){const t=U(n);return Ge(Math.ceil(t/4))}function Ur(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function op(n,t){const e=n;let s,r,o,a,i,l,u,c,h,d;return 2===te().getNumber("WEBGL_VERSION")?(s=e.R32F,r=e.R16F,o=e.RGBA16F,a=e.RGBA32F,i=e.RED,u=4,c=1,h=e.HALF_FLOAT,d=e.FLOAT):(s=n.RGBA,r=n.RGBA,o=n.RGBA,a=e.RGBA,i=n.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=n.FLOAT),l=n.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function Ce(n,t){const e=t();return te().getBool("DEBUG")&&function JR(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+function nO(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(n,t))}(n),e}function nu(n,t){return fs(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}const oO=/ERROR: [0-9]+:([0-9]+):/g;function ap(n,t){if(Ce(n,()=>n.validateProgram(t)),!1===n.getProgramParameter(t,n.VALIDATE_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Nx(n,t,e,s,r,o,a){const i=n.getAttribLocation(t,e);return-1!==i&&(Ce(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Ce(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,o,a)),Ce(n,()=>n.enableVertexAttribArray(i)),!0)}function yO(n,t,e,s){Ce(n,()=>function fO(n,t,e){(function kx(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${e}].`)})(n,e),Ce(n,()=>n.activeTexture(n.TEXTURE0+e)),Ce(n,()=>n.bindTexture(n.TEXTURE_2D,t))}(n,t,s)),Ce(n,()=>n.uniform1i(e,s))}function ip(n,t,e){Ce(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Ce(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function Cx(n,t){Ce(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Ce(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function su(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function xO(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(n,t))}function fs(n,t,e){const s=Ce(n,()=>t());if(null==s)throw new Error(e);return s}function Hr(n,t=2){return U(n.slice(0,n.length-t))}function jr(n){if(0===n.length)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function lp(n){let t=[1,1,1];return 0===n.length||1===n.length&&1===n[0]||(t=[Hr(n),...jr(n)]),t}function ru(n){return n%2==0}function ou(n,t){if(he(n=n.slice(-2),t=t.slice(-2))||!n.length||!t.length||0===n[0]||0===n[1]||0===t[0]||0===t[1])return!0;if(n.length!==t.length){const e=n.slice(-1)[0],s=t.slice(-1)[0];if(e===s||ru(e)&&ru(s)&&(1===n[0]||1===t[0]))return!0}return n[1]===t[1]&&ru(n[0])&&ru(t[0])}let au,iu;function An(n,t){return null!=n.getExtension(t)}function Ix(n){try{if(null!=ns(n))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function up(n){const t=op(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(o),a}function Ra(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&k("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const Pe=te();function rn(){let n,t,e,s,r,o,a,i,l,u;return 2===te().getNumber("WEBGL_VERSION")?(n="#version 300 es",t="in",e="out",s="in",r="texture",o="outputColor",a="out vec4 outputColor;",i="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(n="",t="attribute",e="varying",s="varying",r="texture2D",o="gl_FragColor",a="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:r,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function ir(n,t,e="index"){const s=Fe(t);return s.map((r,o)=>`int ${n[o]} = ${e} / ${r}; ${o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`};`).join("")}function cp(n){const t=Fe(n).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Pe.registerFlag("HAS_WEBGL",()=>Pe.getNumber("WEBGL_VERSION")>0),Pe.registerFlag("WEBGL_VERSION",()=>Ix(2)?2:Ix(1)?1:0),Pe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Pe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Pe.get("WEBGL_VERSION")),Pe.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Pe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Pe.registerFlag("WEBGL_PACK",()=>Pe.getBool("HAS_WEBGL")),Pe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Pe.getBool("WEBGL_PACK")),Pe.registerFlag("WEBGL_PACK_CLIP",()=>Pe.getBool("WEBGL_PACK")),Pe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Pe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK")),Pe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK")),Pe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Pe.getBool("WEBGL_PACK")),Pe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Pe.getBool("WEBGL_PACK")),Pe.registerFlag("WEBGL_PACK_REDUCE",()=>Pe.getBool("WEBGL_PACK")),Pe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Pe.getBool("WEBGL_PACK")),Pe.registerFlag("WEBGL_CONV_IM2COL",()=>Pe.getBool("WEBGL_PACK")),Pe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function wO(n){if(null==au){const t=ns(n);au=t.getParameter(t.MAX_TEXTURE_SIZE)}return au}(Pe.getNumber("WEBGL_VERSION"))),Pe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function vO(n){if(null==iu){const t=ns(n);iu=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,iu)}(Pe.getNumber("WEBGL_VERSION"))),Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Pe.getNumber("WEBGL_VERSION");return 0===n?0:function NO(n){if(0===n)return 0;let t;const e=ns(n);return t=An(e,"EXT_disjoint_timer_query_webgl2")&&2===n?2:An(e,"EXT_disjoint_timer_query")?1:0,t}(n)}),Pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Pe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function v0(){if(function w0(){return typeof navigator<"u"&&null!=navigator}()){const n=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4))}return!1}()),Pe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function CO(n){if(0===n)return!1;const t=ns(n);if(1===n){if(!An(t,"OES_texture_float"))return!1}else if(!An(t,"EXT_color_buffer_float"))return!1;return up(t)}(Pe.getNumber("WEBGL_VERSION"))),Pe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Pe.getBool("WEBGL_FORCE_F16_TEXTURES")&&Pe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Pe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function kO(n){if(0===n)return!1;const t=ns(n);if(1!==n){if(An(t,"EXT_color_buffer_float"))return up(t);const s="EXT_color_buffer_half_float";if(An(t,s)){const r=t.getExtension(s);return function IO(n,t){const e=op(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),i}(t,r)}return!1}return!(!An(t,"OES_texture_float")||!An(t,"WEBGL_color_buffer_float"))&&up(t)}(Pe.getNumber("WEBGL_VERSION"))),Pe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>function SO(n){return 2===n&&null!=ns(n).fenceSync}(Pe.getNumber("WEBGL_VERSION"))),Pe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Pe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Pe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&-1!==n)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});const Sx="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class TO{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Gr.DENSE;const e=Aa(t),s=rn();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ir(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${s.output} = result;\n      }\n    `}}class $O{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Gr.DENSE;const e=Aa(t),s=rn();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${ir(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${s.output} = result;\n      }\n    `}}class _O{constructor(t){this.variableNames=["A"],this.outTexUsage=dn.DOWNLOAD;const e=rn();this.outputShape=t,this.userCode=`\n      ${Sx}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class EO{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=dn.DOWNLOAD;const e=rn();this.outputShape=t,this.userCode=`\n      ${Sx}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class DO{constructor(t,e,s=!1){this.variableNames=["A"];const r=rn(),[o,a]=e;this.outputShape=t;let i="result";s&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${cp(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${o}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class AO{constructor(t,e,s=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=rn(),[o,a]=e;this.outputShape=t;let i="",l="result";s&&(l="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let c=0;c<=1;c++){const h=2*u+c;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${c} < ${t[2]}) {\n            localCoords[2] += ${c};\n            if(localCoords[1] + ${u} < ${t[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${o}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${h}] = values[0];\n              } else if(offset == 1) {\n                result[${h}] = values[1];\n              } else if(offset == 2) {\n                result[${h}] = values[2];\n              } else {\n                result[${h}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${cp(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${l};\n      }\n    `}}function Oa(n,t,e,s,r,o){!function dO(n,t){const e=te().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0)throw new Error(`Requested texture size [${n}x${t}] is invalid.`);if(n>e||t>e)throw new Error(`Requested texture size [${n}x${t}] greater than WebGL maximum on this browser / GPU [${e}x${e}].`)}(t,e);const a=function hO(n){return fs(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}(n),i=n.TEXTURE_2D;return Ce(n,()=>n.bindTexture(i,a)),Ce(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Ce(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Ce(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),Ce(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),Ce(n,()=>n.texImage2D(i,0,s,t,e,0,r,o,null)),Ce(n,()=>n.bindTexture(n.TEXTURE_2D,null)),a}function Tx(n){return n.internalFormatFloat}function $x(n){return n.internalFormatHalfFloat}function _x(n){return n.downloadTextureFormat}function Ex(n){return n.internalFormatPackedFloat}function Dx(n){return n.internalFormatPackedHalfFloat}class XO{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=te().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function KR(n,t){Rs[n]=t}(e,t)):this.gl=ns(e);let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===te().getNumber("WEBGL_VERSION")){const a="OES_texture_half_float";if(this.textureFloatExtension=nu(this.gl,"OES_texture_float"),An(this.gl,a))this.textureHalfFloatExtension=nu(this.gl,a);else if(te().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),An(this.gl,r))this.colorBufferHalfFloatExtension=nu(this.gl,r);else if(te().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",An(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else{if(!An(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function OO(n){return function uO(n,t){const e=fs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ce(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Ce(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}(n,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function FO(n){return function cO(n,t){const e=fs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ce(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),Ce(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}(n,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function pO(n){return fs(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=op(this.gl,this.textureHalfFloatExtension)}get debug(){return te().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Ce(t,()=>t.finish()),Ce(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ce(t,()=>t.deleteFramebuffer(this.framebuffer)),Ce(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ce(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ce(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function PO(n,t,e,s){const[r,o]=Da(t,e);return Oa(n,r,o,Tx(s),s.textureFormatFloat,n.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function LO(n,t,e,s){const[r,o]=Da(t,e);return Oa(n,r,o,$x(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function MO(n,t,e,s){const[r,o]=Da(t,e);return Oa(n,r,o,_x(s),n.RGBA,n.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function GO(n,t,e){Ce(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?Ce(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):Ce(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),Ce(n,()=>n.bindTexture(n.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,r){this.throwIfDisposed(),function WO(n,t,e,s,r,o){let a,i,l;Ce(n,()=>n.bindTexture(n.TEXTURE_2D,t)),r instanceof Uint8Array?(a=new Uint8Array(e*s*4),i=n.UNSIGNED_BYTE,l=n.RGBA):(a=new Float32Array(e*s*4),i=n.FLOAT,l=o.internalFormatPackedFloat),a.set(r),Ce(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,e,s,0,n.RGBA,i,a)),Ce(n,()=>n.bindTexture(n.TEXTURE_2D,null))}(this.gl,t,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function VO(n,t,e,s){const[r,o]=Ur(t,e);return Oa(n,r,o,Dx(s),n.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function zO(n,t,e,s){const[r,o]=Ur(t,e);return Oa(n,r,o,Ex(s),n.RGBA,n.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Cx(this.gl,this.framebuffer),this.outputTexture=null),Ce(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>function jO(n,t,e,s){const[r,o]=Da(t,e),i=new Uint8Array(function ZR(n,t){return n*t}(t*e,4));return Ce(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,r,o,a){return function KO(n,t,e,s,r,o,a,i){const l=n,u=new Float32Array(function YR(n,t){const[e,s]=Ur(n,t);return e*s*4}(o,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,o,a)}downloadFloat32MatrixFromBuffer(t,e){return function HO(n,t,e){const s=n,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const r=function UO(n,t,e,s){const r=n.createBuffer();Ce(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=16*t*e;return Ce(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),Ce(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),Ce(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}(this.gl,e,s);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(te().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const a=r.clientWaitSync(o,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},e=o}else te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>function qO(n,t,e){const s=new Float32Array(t*e*4);return Ce(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl,s=function rO(n,t){const e=fs(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ce(n,()=>n.shaderSource(e,t)),Ce(n,()=>n.compileShader(e)),!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw function aO(n,t){const e=oO.exec(t);if(null==e)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(n);const s=+e[1],r=n.split("\n"),o=r.length.toString().length+2,a=r.map((h,d)=>He((d+1).toString(),o)+h);let i=0;for(let h=0;h<a.length;h++)i=Math.max(a[h].length,i);const l=a.slice(0,s-1),u=a.slice(s-1,s),c=a.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${He(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}(e,t),r=function RO(n){const t=rn();return function sO(n,t){const e=fs(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ce(n,()=>n.shaderSource(e,t)),Ce(n,()=>n.compileShader(e)),!1===n.getShaderParameter(e,n.COMPILE_STATUS))throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}(n,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),o=function iO(n){return fs(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}(e);return Ce(e,()=>e.attachShader(o,r)),Ce(e,()=>e.attachShader(o,s)),function lO(n,t){if(Ce(n,()=>n.linkProgram(t)),!1===n.getProgramParameter(t,n.LINK_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(e,o),this.debug&&ap(e,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=function BO(n,t,e){return Ce(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Nx(n,t,"clipSpacePos",e,3,20,0)&&Nx(n,t,"uv",e,2,20,12)}(e,this.program,this.vertexBuffer)),o}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Ce(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&ap(this.gl,this.program),Ce(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?function mO(n,t,e){return fs(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}(this.gl,t,e):function gO(n,t,e){return n.getUniformLocation(t,e)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ce(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),yO(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[r,o]=Ur(e,s);this.setOutputMatrixTextureDriver(t,r,o)}setOutputMatrixWriteRegion(t,e,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ap(this.gl,this.program),su(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Ce(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=nu(this.gl,2===te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();return void e.endQuery(s.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){var e=this;return(0,A.Z)(function*(){return yield ot(()=>e.disposed||e.isQueryAvailable(t,te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),e.getQueryTime(t,te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(t,e){if(0===e)return null;if(2===e){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function ZO(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),!(this.itemsToPoll.length>1)&&ot(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),ip(this.gl,t,this.framebuffer),this.debug&&su(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(ip(this.gl,this.outputTexture,this.framebuffer),this.debug&&su(this.gl)):Cx(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const r=this.gl;ip(r,t,this.framebuffer),this.debug&&su(r),this.outputTexture=t,Ce(r,()=>r.viewport(0,0,e,s)),Ce(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,r){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.scissor(t,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Ax}=q;function YO(n,t,e,s){const r=[];n.forEach(f=>{const m=U(f.shapeInfo.logicalShape);f.shapeInfo.isUniform?r.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${f.name};`),r.push(`uniform int offset${f.name};`))});const o=r.join("\n"),a=n.map(f=>function JO(n,t,e=!1){let s="";return s+=e?Rx(n):Kr(n),n.shapeInfo.logicalShape.length<=t.logicalShape.length&&(s+=e?function DF(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=t.logicalShape.length,i=Ax(n.shapeInfo.logicalShape,t.logicalShape),l=ct(a),u=a-o;let c;const h=["x","y","z","w","u","v"];c=0===o?"":a<2&&i.length>=1?"coords = 0;":i.map(x=>`coords.${h[x+u]} = 0;`).join("\n");let d="";d=a<2&&o>0?"coords":n.shapeInfo.logicalShape.map((x,C)=>`coords.${h[C+u]}`).join(", ");let p="return outputValue;";const m=1===U(n.shapeInfo.logicalShape),y=1===U(t.logicalShape);if(1!==o||m||y){if(m&&!y)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const x=o-2,C=o-1;i.indexOf(x)>-1&&i.indexOf(C)>-1?p="return vec4(outputValue.x);":i.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(C)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}(n,t):function AF(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!n.shapeInfo.isUniform&&i===l&&null==n.shapeInfo.flatOffset&&he(n.shapeInfo.texShape,t.texShape))return`\n      float ${r}() {\n        return sampleTexture(${e}, resultUV);\n      }\n    `;const u=ct(l),c=Ax(n.shapeInfo.logicalShape,t.logicalShape),h=l-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":l<2&&c.length>=1?"coords = 0;":c.map(m=>`coords.${p[m+h]} = 0;`).join("\n");let f="";return f=l<2&&i>0?"coords":n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}(n,t)),s}(f,t,s)).join("\n"),i=t.texShape,l=rn(),u=function tF(n){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${n.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function rF(n){return`${n.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${n.varyingFs} vec2 resultUV;\n    ${n.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${n.defineSpecialNaN}\n    ${n.defineSpecialInf}\n    ${n.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${oF}\n    ${aF}\n    ${iF}\n  `}(l);return t.isPacked?(c=function QO(n,t){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function uF(n,t){const e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===e[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${e[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return 2 * (resTexRC.x * ${e[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function yF(n,t){const e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(he(n,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;const s=Math.ceil(n[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(n,t);case 3:return function hF(n,t){const e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(n[2]/2),r=s*Math.ceil(n[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(n,t);default:return function pF(n,t){const e=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(n[n.length-1]/2),r=s*Math.ceil(n[n.length-2]/2);let o=r,a="",i="b, r, c";for(let l=2;l<n.length-1;l++)o*=n[n.length-l-1],a=`\n      int b${l} = index / ${o};\n      index -= b${l} * ${o};\n    `+a,i=`b${l}, `+i;return`\n    ivec${n.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${n.length}(${i});\n    }\n  `}(n,t)}}(t.logicalShape,i),h=function sF(n){return`\n    void setOutput(vec4 val) {\n      ${n.output} = val;\n    }\n  `}(l)):(c=function eF(n,t){switch(n.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function cF(n,t){return 1===t[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function xF(n,t){return he(n,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===n[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===n[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${n[1]};\n      int c = index - r * ${n[1]};\n      return ivec2(r, c);\n    }\n  `}(n,t);case 3:return function dF(n,t){const e=ir(["r","c","d"],n);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${e}\n      return ivec3(r, c, d);\n    }\n  `}(n,t);case 4:return function fF(n,t){const e=ir(["r","c","d","d2"],n);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${e}\n      return ivec4(r, c, d, d2);\n    }\n  `}(n,t);case 5:return function mF(n,t){const e=ir(["r","c","d","d2","d3"],n);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(n,t);case 6:return function gF(n,t){const e=ir(["r","c","d","d2","d3","d4"],n);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${e}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}(t.logicalShape,i),h=function nF(n){return`\n    void setOutput(float val) {\n      ${n.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),s&&(d+=lF),[d,u,h,o,c,a,e].join("\n")}function Kr(n){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return function wF(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${e}() {return ${t};}`;const[s,r]=n.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${e}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[o,a]=n.shapeInfo.texShape;return`\n    float ${e}() {\n      vec2 uv = uvFromFlat(${o}, ${a}, ${lr(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(n);case 1:return function NF(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`\n      float ${e}(int index) {\n        ${qr(n)}\n      }\n    `;const s=n.shapeInfo.texShape,r=s[0],o=s[1];if(1===o&&1===r)return`\n      float ${e}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const a=lr(t);return 1===o?`\n      float ${e}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===r?`\n      float ${e}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${e}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${o}, index + ${a});\n      return sampleTexture(${t}, uv);\n    }\n  `}(n);case 2:return function kF(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape;if(null!=r&&he(t,r))return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${r[0]}.0);\n      return sampleTexture(${e}, uv);\n    }\n  `;const{newShape:o,keptDims:a}=zs(t);if(o.length<t.length){const d=["row","col"];return`\n      ${Kr(Xr(n,o))}\n      float ${s}(int row, int col) {\n        return ${s}(${Zr(d,a)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${qr(n)}\n      }\n    `;const l=r[0],u=r[1],c=lr(e);return 1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${e}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${e}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${e}, uv);\n  }\n`}(n);case 3:return function SF(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[1]*t[2],o=t[2],{newShape:a,keptDims:i}=zs(t);if(a.length<t.length){const m=["row","col","depth"];return`\n        ${Kr(Xr(n,a))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${Zr(m,i)});\n        }\n      `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${o}, 1)));\n        ${qr(n)}\n      }\n    `;const u=n.shapeInfo.texShape,c=u[0],h=u[1],d=n.shapeInfo.flatOffset;if(h===r&&null==d)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${e}, uv);\n        }\n      `;if(h===o&&null==d)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${e}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${o} + depth + ${lr(e)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${e}, uv);\n      }\n  `}(n);case 4:return function $F(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[3],o=t[2]*r,a=t[1]*o,{newShape:i,keptDims:l}=zs(t);if(i.length<t.length){const m=["row","col","depth","depth2"];return`\n      ${Kr(Xr(n,i))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${Zr(m,l)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${o}, ${r}, 1)));\n        ${qr(n)}\n      }\n    `;const u=n.shapeInfo.flatOffset,c=n.shapeInfo.texShape,h=c[0],d=c[1];if(d===a&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(d===r&&null==u)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${o} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${lr(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);case 5:return function _F(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[4],o=t[3]*r,a=t[2]*o,i=t[1]*a,{newShape:l,keptDims:u}=zs(t);if(l.length<t.length){const g=["row","col","depth","depth2","depth3"];return`\n      ${Kr(Xr(n,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${Zr(g,u)});\n      }\n    `}if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${a}, ${o}, ${r})) +\n          depth3;\n        ${qr(n)}\n      }\n    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${o}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} + depth * ${o} +\n          depth2 * ${r} + depth3 + ${lr(e)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);case 6:return function EF(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:o}=zs(t);if(r.length<t.length){const y=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Kr(Xr(n,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${Zr(y,o)});\n      }\n    `}const a=t[5],i=t[4]*a,l=t[3]*i,u=t[2]*l,c=t[1]*u;if(n.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${qr(n)}\n      }\n    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${i}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${i} + depth3 * ${a} + depth4 + ${lr(e)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${e}, uv);\n    }\n  `}(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Rx(n){switch(n.shapeInfo.logicalShape.length){case 0:return function bF(n){const t=n.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${rn().texture2D}(${t}, halfCR);\n    }\n  `}(n);case 1:return function vF(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=rn();return`\n    vec4 ${e}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${o.texture2D}(${t}, uv);\n    }\n  `}(n);case 2:return function CF(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,o=r[0],a=r[1],i=rn();if(null!=r&&he(t,r))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);\n\n        return ${i.texture2D}(${e}, uv);\n      }\n    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(n);case 3:return function IF(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===t[0]){const d=[1,2],f=["b","row","col"];return`\n        ${Rx(Xr(n,t.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${Zr(f,d)});\n        }\n      `}const a=o[0],i=o[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${i}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${rn().texture2D}(${e}, uv);\n    }\n  `}(n);default:return function TF(n){const t=n.shapeInfo.logicalShape,e=t.length,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],i=a[0],l=a[1],u=Math.ceil(t[e-1]/2);let c=u*Math.ceil(t[e-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let f=2;f<e-1;f++)h=`int b${f}, `+h,c*=t[e-f-1],d=`b${f} * ${c} + `+d;return`\n    vec4 ${r}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${i});\n      return ${rn().texture2D}(${s}, uv);\n    }\n  `}(n)}}const oF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",aF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",lF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function lr(n){return`offset${n}`}function qr(n){const t=n.name,e=U(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`\n    for (int i = 0; i < ${e}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function ct(n){if(n<=1)return"int";if(2===n)return"ivec2";if(3===n)return"ivec3";if(4===n)return"ivec4";if(5===n)return"ivec5";if(6===n)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Xr(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function Zr(n,t){return t.map(e=>n[e]).join(", ")}function Fx(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const r=e.logicalShape,o=t[s],a=o.shape;if(!he(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&o.isUniform)return;const i=e.texShape,l=o.isUniform?null:o.texData.texShape;if(!he(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}const{addImpl:PF,bincountImpl:Px,bincountReduceImpl:LF,ceilImpl:MF,concatImpl:zF,expImpl:VF,expm1Impl:BF,floorImpl:WF,gatherV2Impl:GF,greaterImpl:UF,lessImpl:HF,linSpaceImpl:jF,logImpl:KF,maxImpl:qF,maximumImpl:XF,minimumImpl:ZF,multiplyImpl:YF,negImpl:JF,prodImpl:QF,rangeImpl:eP,rsqrtImpl:tP,simpleAbsImpl:Lx,sliceImpl:nP,stridedSliceImpl:sP,subImpl:rP,tileImpl:oP,topKImpl:aP,transposeImpl:hp,uniqueImpl:iP}=ze;function Mx(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function on(n,t){return 1===t?[n]:Mx(n,t)}class uP{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const s=on("rc",e),r=ct(e),o=function hP(n,t,e){if(1===n)return`rc > ${t[0]}`;let s="";for(let r=n-2;r<n;r++)s+=`${e[r]} >= ${t[r]}`,r<n-1&&(s+="||");return s}(e,t,s),a=function dP(n,t,e,s){if(1===n)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${e};\n  `}(e,t[t.length-1],t[t.length-2],s),i=function pP(n,t){const e=n.length,s=function cP(n,t){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let a=2;a<n;a++)o=`${t[t.length-1-a]},`+o;e.push(o)}return e}(e,t);return 1===e?`getA(rc),\n            rc + 1 >= ${n[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(t,s);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${o}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class zx{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2==1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`\n        ${o}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${function fP(n){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${ir(["r","c","d"],n)}\n      return ivec3(r, c, d);\n    }\n  `}(e)}\n      ${cp(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class mP{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,s){const r=Bx(e,s),o=Wx(t,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=Vx(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[o].shift();return this.usedTextures[o].push(l),l}let i;return r===Ht.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Ht.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Ht.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Ht.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Ht.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,s,r){if(null==this.freeTextures)return;const o=Bx(s,r),a=Wx(e,o,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Vx(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=te().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],c=u.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Vx(n,t,e,s,r){const o=function yP(n,t){switch(n){case Ht.PACKED_2X2_FLOAT32:return Ex(t);case Ht.PACKED_2X2_FLOAT16:return Dx(t);case Ht.UNPACKED_FLOAT32:return Tx(t);case Ht.UNPACKED_FLOAT16:return $x(t);case Ht.PACKED_4X1_UNSIGNED_BYTE:return _x(t);default:throw new Error(`Unknown physical texture type ${n}`)}}(t,s);let a;if(r){const[l,u]=Ur(n[0],n[1]);a=l*u}else{const[l,u]=Da(n[0],n[1]);a=l*u}const i=function gP(n,t){if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(e,o);return a*i}function Bx(n,t){if(n===dn.UPLOAD)return Ht.PACKED_2X2_FLOAT32;if(n===dn.RENDER||null==n)return function xP(n){return te().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Ht.PACKED_2X2_FLOAT32:Ht.UNPACKED_FLOAT32:n?Ht.PACKED_2X2_FLOAT16:Ht.UNPACKED_FLOAT16}(t);if(n===dn.DOWNLOAD||n===dn.PIXELS)return Ht.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Wx(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}class Os{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Gx="return abs(x);",uu="return x;";class Yr{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class TP{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,s=on("rc",e),r=ct(e),o=function lP(n,t){if(1===n)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}(e,s),a=s.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const $P=fm,cu={};class FP extends D{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!te().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const e=ns(te().getNumber("WEBGL_VERSION"));this.binaryCache=function DP(n){return n in cu||(cu[n]={}),cu[n]}(te().getNumber("WEBGL_VERSION")),this.gpgpu=new XO(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;this.textureManager=new mP(this.gpgpu),this.numMBBeforeWarning=function OP(){return null==te().global.screen?1024:te().global.screen.height*te().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new _(this,Cr())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,s){if((te().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||te().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===s&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:s,values:t,usage:dn.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}decComplexRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.complexParentRefCount>0&&e.refCount--}}move(t,e,s,r){if(te().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:r,values:e,usage:dn.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const s=this.texData.get(e);s.refCount--,s.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:s,dtype:r,complexTensorInfos:o,slice:a,shape:i,isPacked:l}=e;if(null!=a){let d;d=l?new Yr(i,uu):new Os(i,uu);const p=this.runWebGLProgram(d,[{dataId:t,shape:i,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(null!=s)return this.convertAndCacheOnCPU(t);if("string"===r)return s;const u=null!=this.activeTimers;let c,h;return u&&(c=wn()),h="complex64"===r?hs(this.readSync(o.real.dataId),this.readSync(o.imag.dataId)):this.getValuesFromTexture(t),u&&(this.downloadWaitMs+=wn()-c),this.convertAndCacheOnCPU(t,h)}read(t){var e=this;return(0,A.Z)(function*(){if(e.pendingRead.has(t)){const m=e.pendingRead.get(t);return new Promise(g=>m.push(g))}const s=e.texData.get(t),{values:r,shape:o,slice:a,dtype:i,complexTensorInfos:l,isPacked:u}=s;if(null!=a){let m;m=u?new Yr(o,uu):new Os(o,uu);const g=e.runWebGLProgram(m,[{dataId:t,shape:o,dtype:i}],i),y=e.read(g.dataId);return e.disposeIntermediateTensorInfo(g),y}if(null!=r)return e.convertAndCacheOnCPU(t);if(!te().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===te().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let h,d,c=null;if("complex64"!==i&&te().get("WEBGL_BUFFER_SUPPORTED")){h=e.decode(t);const m=e.texData.get(h.dataId);c=e.gpgpu.createBufferFromTexture(m.texture,...Aa(o))}if(e.pendingRead.set(t,[]),"complex64"!==i&&(yield e.gpgpu.createAndWaitForFence()),"complex64"===i){const m=yield Promise.all([e.read(l.real.dataId),e.read(l.imag.dataId)]);d=hs(m[0],m[1])}else if(null==c)d=e.getValuesFromTexture(t);else{const m=U(o);d=e.gpgpu.downloadFloat32MatrixFromBuffer(c,m)}null!=h&&e.disposeIntermediateTensorInfo(h);const p=e.convertAndCacheOnCPU(t,d),f=e.pendingRead.get(t);return e.pendingRead.delete(t),f.forEach(m=>m(p)),e.pendingDisposal.has(t)&&(e.pendingDisposal.delete(t),e.disposeData(t),e.pendingDeletes--),p})()}bufferSync(t){const e=this.readSync(t.dataId);let s=e;if("string"===t.dtype)try{s=e.map(r=>fr(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ke(t.shape,t.dtype,s)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const s=t[e];if(n=s,!(te().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===n||5.96e-8<Math.abs(n)&&Math.abs(n)<65504))throw te().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}var n}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:r}=this.texData.get(t),o=U(e);if(te().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture,...Aa(e)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const a=te().getBool("WEBGL_PACK")&&!0===r,i=a?lp(e):e,l=a?new EO(i):new _O(i),u=this.runWebGLProgram(l,[{shape:i,dtype:s,dataId:t}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),h}time(t){var e=this;return(0,A.Z)(function*(){const s=e.activeTimers,r=[];let o=!1;null==e.programTimersStack?(e.programTimersStack=r,o=!0):e.activeTimers.push(r),e.activeTimers=r,t();const a=ce(e.activeTimers.map(u=>u.query)).filter(u=>null!=u),i=ce(e.activeTimers.map(u=>u.name)).filter(u=>null!=u);e.activeTimers=s,o&&(e.programTimersStack=null);const l={uploadWaitMs:e.uploadWaitMs,downloadWaitMs:e.downloadWaitMs,kernelMs:null,wallMs:null};if(te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=yield Promise.all(a);l.kernelMs=function Be(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}(u),l.getExtraProfileInfo=()=>u.map((c,h)=>({name:i[h],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return e.uploadWaitMs=0,e.downloadWaitMs=0,l})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:wn(),endMs:null}}endTimer(t){return te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=wn(),t)}getQueryTime(t){var e=this;return(0,A.Z)(function*(){return te().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?e.gpgpu.waitForQueryAndGetTime(t):t.endMs-t.startMs})()}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:s,texShape:r,usage:o,isPacked:a,slice:i}=this.texData.get(t),l=i&&i.origDataId||t,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(e,r,o,a)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return te().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Cr().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const s=this.getCPUBackend();return!te().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&null==s&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=s&&t.every(r=>null==this.texData.get(r.dataId).texture&&U(r.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Dr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return $P(t.shape,e)}packedUnaryOp(t,e,s){const r=new Yr(t.shape,e);return this.compileAndRun(r,[t],s)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const s=Lx(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,s)}if(te().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Gx,t.dtype);const e=new Os(t.shape,Gx);return this.compileAndRun(e,[t])}makeTensorInfo(t,e,s){let r;if("string"===e&&null!=s&&s.length>0&&to(s[0])){const o=s.map(a=>ra(a));r=this.write(o,t,e)}else r=this.write(s,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,s){const{dataId:r}=this.makeTensorInfo(t,e,s);return Cr().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new TP(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new uP(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[Hr(t.shape),...jr(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},o=[Hr(e),...jr(e)],a=new zx(o,s),l=this.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:l.dataId,shape:e,dtype:l.dtype}}decode(t){const e=this.texData.get(t),{isPacked:s,shape:r,dtype:o}=e,a=lp(r);let i;return i=s?new $O(a):new TO(a),{dtype:o,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:o,dataId:t}],o,null,!0).dataId}}runWebGLProgram(t,e,s,r,o=!1){const a=this.makeTensorInfo(t.outputShape,s),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===Gr.DENSE){const m=Aa(t.outputShape);i.texShape=m.map(g=>2*g)}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===U(a.shape))return i.values=Qt(a.dtype,0),a;const l=[],u=e.map(m=>{if("complex64"===m.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let g=this.texData.get(m.dataId);if(null==g.texture){if(!t.packedInputs&&U(m.shape)<=te().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:m.shape,texData:null,isUniform:!0,uniformValues:g.values};t.packedInputs&&(g.isPacked=!0,g.shape=m.shape)}else if(!!g.isPacked!=!!t.packedInputs)m=g.isPacked?this.unpackTensor(m):this.packTensor(m),l.push(m),g=this.texData.get(m.dataId);else if(g.isPacked&&!ou(g.shape,m.shape)){const y=m,x=m.shape;m.shape=g.shape,m=this.packedReshape(m,x),l.push(m),g=this.texData.get(m.dataId),y.shape=x}return this.uploadToGPU(m.dataId),{shape:m.shape,texData:g,isUniform:!1}});this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:i,isUniform:!1},h=function FF(n,t,e){let s="";t.concat(e).forEach(a=>{s+=`${a.shape}_${a.isUniform?"uniform":a.texData.texShape}_${null!=a.texData&&null!=a.texData.slice&&a.texData.slice.flatOffset>0}`});let o=n.constructor.name;return o+="_"+s+"_"+n.userCode,o}(t,u,c),d=this.getAndSaveBinary(h,()=>function RF(n,t,e,s){const r=t.userCode,o=e.map((p,f)=>{const m={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:!p.isUniform&&p.texData.isPacked,flatOffset:null};return null!=p.texData&&null!=p.texData.slice&&p.texData.slice.flatOffset>0&&(m.flatOffset=p.texData.slice.flatOffset),{name:t.variableNames[f],shapeInfo:m}}),a=o.map(p=>p.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=YO(o,i,r,t.packedInputs),u=n.createProgram(l);let c=null;const h=n.getUniformLocation(u,"NAN",!1);1===te().getNumber("WEBGL_VERSION")&&(c=n.getUniformLocation(u,"INFINITY",!1));const d={};for(let p=0;p<t.variableNames.length;p++){const f=t.variableNames[p],m=!1;d[f]=n.getUniformLocation(u,f,m),d[`offset${f}`]=n.getUniformLocation(u,`offset${f}`,m)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:a,outShapeInfo:i,infLoc:c,nanLoc:h}}(this.gpgpu,t,u,c)),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function OF(n,t,e,s,r){Fx(t.inShapeInfos,e),Fx([t.outShapeInfo],[s]);const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o,a[0],a[1]):n.setOutputMatrixTexture(o,a[0],a[1]),n.setProgram(t.webGLProgram),1===te().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&n.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&n.gl.uniform1f(t.nanLoc,NaN),e.forEach((i,l)=>{const u=t.program.variableNames[l],c=t.uniformLocations[u],h=t.uniformLocations[`offset${u}`];if(null!=c){if(i.isUniform){if(U(i.shape)<2)n.gl.uniform1f(c,i.uniformValues[0]);else{let d=i.uniformValues;d instanceof Float32Array||(d=new Float32Array(d)),n.gl.uniform1fv(c,d)}return}null!=i.texData.slice&&null!=h&&n.gl.uniform1i(h,i.texData.slice.flatOffset),n.setInputMatrixTexture(i.texData.texture,c,l)}}),r?.(n,t.webGLProgram),n.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach(m=>this.disposeIntermediateTensorInfo(m)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!te().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===o){const m=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),m}return a}compileAndRun(t,e,s,r,o=!1){const a=this.runWebGLProgram(t,e,s=s||e[0].dtype,r,o);return Cr().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(te().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=H(()=>{if(!te().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=te().getBool("DEBUG");te().set("DEBUG",!1);const e=this.abs(Oe(1e-8)).dataSync()[0];if(te().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:r,values:o,texture:a,usage:i,isPacked:l}=e;if(null!=a)return;const u=null!=this.activeTimers;let c;u&&(c=wn());let h=e.texShape;if(null==h&&(h=function bO(n,t=!1){let e=te().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(e*=2,1===(n=n.map((r,o)=>o>=n.length-2?G(n[o]):n[o])).length&&(n=[2,n[0]])),2!==n.length&&(n=zs(n).newShape);let s=U(n);if(n.length<=1&&s<=e)return[1,s];if(2===n.length&&n[0]<=e&&n[1]<=e)return n;if(3===n.length&&n[0]*n[1]<=e&&n[2]<=e)return[n[0]*n[1],n[2]];if(3===n.length&&n[0]<=e&&n[1]*n[2]<=e)return[n[0],n[1]*n[2]];if(4===n.length&&n[0]*n[1]*n[2]<=e&&n[3]<=e)return[n[0]*n[1]*n[2],n[3]];if(4===n.length&&n[0]<=e&&n[1]*n[2]*n[3]<=e)return[n[0],n[1]*n[2]*n[3]];if(t){const r=Hr(n);let o=2,a=2;return n.length&&([o,a]=jr(n)),s=r*(o/2)*(a/2),Ge(s).map(i=>2*i)}return Ge(s)}(s,l),e.texShape=h),null!=o){const d=lp(s);let p,f=h[1],m=h[0];const g=o instanceof Uint8Array;l?([f,m]=Ur(h[0],h[1]),p=new AO(d,[m,f],g)):p=new DO(d,[m,f],g);const y=this.makeTensorInfo([m,f],r);this.texData.get(y.dataId).usage=g?dn.PIXELS:dn.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),f,m,o);const C=this.runWebGLProgram(p,[y],r,null,!0),w=this.texData.get(C.dataId);e.texture=w.texture,e.texShape=w.texShape,e.isPacked=w.isPacked,e.usage=w.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(C.dataId),e.values=null,u&&(this.uploadWaitMs+=wn()-c)}else{const d=this.acquireTexture(h,i,r,l);e.texture=d}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:r}=s;return this.releaseGPUData(t),null!=e&&(s.values=function PP(n,t){if("float32"===t||"complex64"===t)return n;if("int32"===t||"bool"===t){const e="int32"===t?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}throw new Error(`Unknown dtype ${t}`)}(e,r)),s.values}acquireTexture(t,e,s,r){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*vp(e)}}qp()&&Sf("webgl",()=>new FP,2);class Jr{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=qe(e,s),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Fa{constructor(t,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=qe(e,s);const o=this.outputShape.length;let a="";if(r)if(0===o||1===U(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${ct(o)} coords = getOutputCoords();\n        `,1===o)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const l=on("coords",o);a+=`\n            bool nextRowOutOfBounds =\n              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};\n            bool nextColOutOfBounds =\n              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function pn(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const zP={kernelName:ai,backendName:"webgl",kernelFunc:pn};function Fs(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.makeTensorInfo(s.shape,"complex64"),a=e.texData.get(o.dataId),i=pn({inputs:{x:s},backend:e});e.texData.get(i.dataId).complexParentRefCount++;const u=pn({inputs:{x:r},backend:e});return e.texData.get(u.dataId).complexParentRefCount++,a.complexTensorInfos={real:i,imag:u},o}const VP={kernelName:Du,backendName:"webgl",kernelFunc:Fs},Hx="return (a < 0.) ? b * a : a;",jx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",WP={kernelName:ii,backendName:"webgl",kernelFunc:function BP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s,a=e.makeTensorInfo([],"float32",ys(o,"float32")),i=te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fa(jx,r.shape,a.shape):new Jr(Hx,r.shape,a.shape),l=e.runWebGLProgram(i,[r,a],r.dtype);return e.disposeIntermediateTensorInfo(a),l}},Kx="return (a < 0.) ? b * a : a;",qx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",UP={kernelName:Si,backendName:"webgl",kernelFunc:function GP(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,o=te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fa(qx,s.shape,r.shape):new Jr(Kx,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],s.dtype)}};function Qe({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:o})=>{const{x:a}=r,i=o,l=s||a.dtype;if(i.shouldExecuteOnCPU([a])&&null!=e){const h=i.texData.get(a.dataId),d=e(h.values,l);return i.makeTensorInfo(a.shape,l,d)}let c;return c=te().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Yr(a.shape,t):new Os(a.shape,n),i.runWebGLProgram(c,[a],l)}}function Zt({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:a,backend:i})=>{const{a:l,b:u}=a,c=i;if(s&&"complex64"===l.dtype){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(C=>{const[w,N]=C,S={dataId:w.dataId,dtype:w.dtype,shape:l.shape},I={dataId:N.dataId,dtype:N.dtype,shape:u.shape},E=new Jr(n,l.shape,u.shape);return c.runWebGLProgram(E,[S,I],fn(w.dtype,N.dtype))}),x=Fs({inputs:{real:g,imag:y},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(y),x}const h=o||fn(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=r){const f=c.texData.get(l.dataId),m=c.texData.get(u.dataId),[g,y]=r(l.shape,u.shape,f.values,m.values,h),x=c.makeTensorInfo(y,h);return c.texData.get(x.dataId).values=g,x}let p;return p=te().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Fa(t,l.shape,u.shape,e):new Jr(n,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function du(n,t=!1){if("linear"===n)return"return x;";if("relu"===n)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===n)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===n)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===n)return t?qx:Kx;if("leakyrelu"===n)return t?jx:Hx;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}class Zx{constructor(t,e,s,r=!1,o=!1,a=!1,i=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const h=Math.ceil((r?t[1]:t[2])/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";i&&(g=l?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,y="result = activation(result);");const x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let C="rc.x",w="rc.x";t[0]<e[0]?C=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(w=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${g}\n\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${C};\n          int batchB = ${w};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${f[0]} * ${m[0]});\n          result += (${f[1]} * ${m[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${x}\n\n        ${y}\n\n        setOutput(result);\n      }\n    `}}class Jx{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=qe(e,s),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Qx="return a * b;";function eb(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=fn(s.dtype,r.dtype);if("complex64"===s.dtype){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),u=new Jx("return areal * breal - aimag * bimag;",s.shape,r.shape),c=new Jx("return areal * bimag + aimag * breal;",s.shape,r.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=e.runWebGLProgram(u,h,"float32"),p=e.runWebGLProgram(c,h,"float32"),f=Fs({inputs:{real:d,imag:p},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}if(e.shouldExecuteOnCPU([s,r])){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),[u,c]=YF(s.shape,r.shape,i.values,l.values,o),h=e.makeTensorInfo(c,o);return e.texData.get(h.dataId).values=u,h}let a;return a=te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fa(Qx,s.shape,r.shape):new Jr(Qx,s.shape,r.shape),e.runWebGLProgram(a,[s,r],o)}const KP={kernelName:Oo,backendName:"webgl",kernelFunc:eb};function ve(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,a=e,i=U(r.shape),l=Jt(o,i),u=U(l);k(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const c=a.texData.get(r.dataId);return!c.isPacked||ou(r.shape,l)||null!==c.texture&&ou(c.shape,l)?(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function qP(n,t,e){const s=[Hr(n.shape),...jr(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[Hr(t),...jr(t)],a=new zx(o,s),l=e.runWebGLProgram(a,[r],n.dtype,null,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,a)}const XP={kernelName:Ti,backendName:"webgl",kernelFunc:ve};class tb{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=t;this.outputShape=[r,a];const i=4*Math.floor(s/4),l=s%4;let u="sumValue += dot(values, ones);";if(null!=e){const h=1/e;u=`sumValue += dot(values * ${Te(h)?h.toPrecision(2):h}, ones);`}let c="";o%s>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class ZP{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=t;this.outputShape=[r,a];let i="0.0",l="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",l="min"):"max"===e&&(i="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(s/4),h=s%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${l}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let f="";o%s>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${f}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===h}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function ur(n,t,e,s){const r=function YP(n){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const e=t.length?t[t.length-1].outSize:n[1],s=vl(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}(n.shape);let o=n;for(let a=0;a<r.length;a++){const{inSize:i,windowSize:l,outSize:u}=r[a];let c,h;c="mean"===e?0===a?new tb({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:u},i):new tb({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:u}):new ZP({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:u},e),h=o,o=s.runWebGLProgram(c,[o],t),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return o}class JP{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let a=0;a<s.length;a++)s[a]=t[e[a]];this.outputShape=s,this.rank=s.length;const r=ct(this.rank),o=function QP(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<n.length;r++)s[n[r]]=e[r];return s.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${o}));\n    }\n    `}}class eL{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let c=0;c<s.length;c++)s[c]=t[e[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ct(this.rank),o=Mx("rc",this.rank),a=new Array(this.rank);for(let c=0;c<e.length;c++)a[e[c]]=o[c];const i=`vec2(${a.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${l}) {\n        result[1] = ${u};\n      }\n      --${o[this.rank-1]};\n      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {\n        result[2] = ${u};\n        if(${l}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function pu(n,t,e){const s=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eL(n.shape,t):new JP(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}function dp(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;return function tL(n,t,e,s){const o=n.shape.length,a=$e(t,n.shape);let i=a;const l=_t(i,o),u=null!=l;let c=n;u&&(c=pu(n,l,s),i=Rt(i.length,o)),qt("sum",i,o);const[h,d]=Wt(c.shape,i);let p=h;e&&(p=$t(h,a));const f=U(d),y=ve({inputs:{x:c},attrs:{shape:[U(n.shape)/f,f]},backend:s}),C=ur(y,pc(n.dtype),"sum",s),w=ve({inputs:{x:C},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(C),u&&s.disposeIntermediateTensorInfo(c),w}(r,o,a,e)}const nL={kernelName:Ri,backendName:"webgl",kernelFunc:dp};function ln(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{perm:o}=s,a=e,l=new Array(r.shape.length);for(let c=0;c<l.length;c++)l[c]=r.shape[o[c]];let u;if(a.shouldExecuteOnCPU([r])){const h=a.texData.get(r.dataId).values,d=hp(h,r.shape,r.dtype,o,l);u=a.makeTensorInfo(l,r.dtype),a.texData.get(u.dataId).values=d}else u=pu(r,o,a);return u}const sL={kernelName:Li,backendName:"webgl",kernelFunc:ln};function fu({a:n,b:t,transposeA:e,transposeB:s,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const u=n.shape.length,c=t.shape.length,h=e?n.shape[u-2]:n.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=e?n.shape[u-1]:n.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=n.shape.slice(0,-2),g=t.shape.slice(0,-2),y=U(m),x=U(g);k(u>=2&&c>=2&&(y===x||1===y||1===x),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const N=(y>x?n.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);k(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const S=e?[y,h,p]:[y,p,h],I=s?[x,f,d]:[x,d,f],E=ve({inputs:{x:n},backend:r,attrs:{shape:S}}),R=ve({inputs:{x:t},backend:r,attrs:{shape:I}}),z=[E,R],K=Math.max(y,x),J=e?E.shape[1]:E.shape[2],Y=null!=o,Q=null!=a,Z="leakyrelu"===l,X=null!=l?du(l,!0):null;let ee;if((1===p||1===f)&&J>1e3&&!1===(Y||Q||Z||null!=X)){let oe=E,le=R;e&&(oe=ln({inputs:{x:E},backend:r,attrs:{perm:[0,2,1]}}),z.push(oe)),s&&(le=ln({inputs:{x:R},backend:r,attrs:{perm:[0,2,1]}}),z.push(le));const fe=1===f;let me=oe;1!==f&&(me=ve({inputs:{x:oe},backend:r,attrs:{shape:[K,J,1]}}),z.push(me));const xe=1===f?2:1;let ge=le;fe&&(ge=ve({inputs:{x:le},backend:r,attrs:{shape:[K,1,J]}}),z.push(ge));const ke=eb({inputs:{a:me,b:ge},backend:r});ee=dp({inputs:{x:ke},backend:r,attrs:{axis:xe,keepDims:!0}}),z.push(ke)}else{const oe=fn(n.dtype,t.dtype),le=new Zx(S,I,[K,p,f],e,s,Y,X,Q,Z),pe=[E,R];if(null!=o&&pe.push(o),Q&&pe.push(a),Z){const fe=r.makeTensorInfo([],"float32",ys(i,"float32"));pe.push(fe),z.push(fe)}ee=r.runWebGLProgram(le,pe,oe)}const se=ve({inputs:{x:ee},backend:r,attrs:{shape:N}});z.push(ee);for(const oe of z)r.disposeIntermediateTensorInfo(oe);return se}const oL={kernelName:Bi,backendName:"webgl",kernelFunc:function rL(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return fu({a:r,b:o,transposeA:l,transposeB:u,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}},sb="return abs(x);",iL={kernelName:Va,backendName:"webgl",kernelFunc:function aL(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const o=e.texData.get(s.dataId),a=Lx(o.values);return e.makeTensorInfo(s.shape,s.dtype,a)}let r;return r=te().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Yr(s.shape,sb):new Os(s.shape,sb),e.runWebGLProgram(r,[s],s.dtype)}},uL=Qe({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),cL={kernelName:ro,backendName:"webgl",kernelFunc:uL},dL=Qe({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),pL={kernelName:oo,backendName:"webgl",kernelFunc:dL},rb="return a + b;",fL=Zt({opSnippet:rb,packedOpSnippet:rb,supportsComplex:!0,cpuKernelImpl:PF}),mL={kernelName:dr,backendName:"webgl",kernelFunc:fL};class gL{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class yL{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const xL={kernelName:Su,backendName:"webgl",kernelFunc:function mu(n){const{inputs:t,backend:e}=n,s=t;if(1===s.length)return pn({inputs:{x:s[0]},backend:e});if(s.length>te().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),u=mu({inputs:s.slice(0,l),backend:e}),c=mu({inputs:s.slice(l),backend:e});return mu({inputs:[u,c],backend:e})}const r=s.map(l=>l.dtype).reduce((l,u)=>fn(l,u)),o=s.map(l=>l.shape),i=te().getBool("WEBGL_PACK")?new yL(s[0].shape,o):new gL(s[0].shape,o);return e.runWebGLProgram(i,s,r)}},wL={kernelName:"All",backendName:"webgl",kernelFunc:function bL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=$e(o,r.shape);let u=l;const c=_t(u,i);let h=r;null!=c&&(h=ln({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Rt(u.length,i)),qt("all",u,i);const[d,p]=Wt(h.shape,u),m=ve({inputs:{x:h},backend:e,attrs:{shape:[-1,U(p)]}}),g=ur(m,m.dtype,"all",e);let y;return y=ve(a?{inputs:{x:g},backend:e,attrs:{shape:$t(d,l)}}:{inputs:{x:g},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),null!=c&&e.disposeIntermediateTensorInfo(h),y}},NL={kernelName:"Any",backendName:"webgl",kernelFunc:function vL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=$e(o,r.shape);let u=l;const c=_t(u,i);let h=r;null!=c&&(h=ln({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Rt(u.length,i)),qt("any",u,i);const[d,p]=Wt(h.shape,u),m=ve({inputs:{x:h},backend:e,attrs:{shape:[-1,U(p)]}}),g=ur(m,m.dtype,"any",e);let y;return y=ve(a?{inputs:{x:g},backend:e,attrs:{shape:$t(d,l)}}:{inputs:{x:g},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),null!=c&&e.disposeIntermediateTensorInfo(h),y}};class CL{constructor(t,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:a}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===e?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class kL{constructor(t,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const a=Math.ceil(t[t.length-1]/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,l=i.length,u=ct(l),c=on("coords",l);let h,d;if(1===a){d=l+1;const E=ct(d);h=`\n        ${E} sourceLocR = ${E}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${E} sourceLocG = ${E}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${E} sourceLocA = ${E}(${c.join()}, 0);\n        --${c[l-1]};\n        ${E} sourceLocB = ${E}(${c.join()}, 0);\n        --${c[l-2]};`}else d=l,h=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(E=>"int "+E),g=on("sourceLocR",d-1).concat("inIdx.r"),y=on("sourceLocG",d-1).concat("inIdx.g"),x=on("sourceLocB",d-1).concat("inIdx.b"),C=on("sourceLocA",d-1).concat("inIdx.a"),w="max"===s?"greaterThan":"lessThan",N=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${C.join()})));`,S=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${C.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${S};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${N}\n          vec4 candidate = ${S};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function ob(n,t,e,s=null){let r=t.shape[0],o=t.shape[1];null!=s&&(r=s.shape[0],o=s.shape[1]);const a=vl(o),i={windowSize:a,inSize:o,batchSize:r,outSize:Math.ceil(o/a)},l=new CL(i,e,null==s),u=[t];null!=s&&u.push(s);const c=n.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=ob(n,t,e,c);return n.disposeIntermediateTensorInfo(c),h}function ab(n,t,e,s=null){const r=null!=s?s.shape:t.shape,a=vl(r[r.length-1]),i=new kL(r,a,e,null==s),u=n.runWebGLProgram(i,null==s?[t]:[t,s],"int32");if(u.shape.length===t.shape.length){const c=ab(n,t,e,u);return n.disposeIntermediateTensorInfo(u),c}return u}function ib(n,t,e,s){const r=[e];if(qt("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!te().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const o=[],[a,i]=Wt(t.shape,r),l=U(i),u=ve({inputs:{x:t},backend:n,attrs:{shape:[-1,l]}});o.push(u);const c=ob(n,u,s);o.push(c);const h=ve({inputs:{x:c},backend:n,attrs:{shape:a}});return o.forEach(d=>n.disposeIntermediateTensorInfo(d)),h}return ab(n,t,s)}const SL={kernelName:Ba,backendName:"webgl",kernelFunc:function IL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let a=$e(o,r.shape);const i=_t(a,r.shape.length);let l=r;const u=[];null!=i&&(l=ln({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),a=Rt(a.length,l.shape.length)),qt("argMax",[a[0]],l.shape.length);const c=ib(e,l,a[0],"max");return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),c}},$L={kernelName:Wa,backendName:"webgl",kernelFunc:function TL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let a=$e(o,r.shape);const i=_t(a,r.shape.length);let l=r;const u=[];null!=i&&(l=ln({inputs:{x:r},backend:e,attrs:{perm:i}}),u.push(l),a=Rt(a.length,l.shape.length)),qt("argMin",[a[0]],l.shape.length);const c=ib(e,l,a[0],"min");return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),c}},EL=Qe({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),DL={kernelName:ao,backendName:"webgl",kernelFunc:EL},RL=Qe({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),OL={kernelName:lo,backendName:"webgl",kernelFunc:RL},PL=Qe({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),LL={kernelName:uo,backendName:"webgl",kernelFunc:PL},VL=Zt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),BL={kernelName:ho,backendName:"webgl",kernelFunc:VL},GL=Qe({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),UL={kernelName:co,backendName:"webgl",kernelFunc:GL};class Pa{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const m="avg"===e;let x="0.0";if(m||(x="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${l});\n        const ivec2 pads = ivec2(${p}, ${f});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?o?`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`:`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const N=4*Math.floor(a/4),S=a%4,I=`\n      if (${m}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${l});\n      const ivec2 pads = ivec2(${p}, ${f});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${N}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${I}\n          }\n\n          int xC = xCCorner + ${N};\n          if (${1===S}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${I}\n          } else if (${2===S}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${I}\n          } else if (${3===S}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${I}\n          }\n        }\n        setOutput(${w});\n      }\n    `}}class pp{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],"avg"===e&&s)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,y=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const C="avg"===e;let w="0.0";if(C||(w="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${l}, ${u});\n        const ivec3 pads = ivec3(${g}, ${y}, ${x});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${f};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${m};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?o?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +\n                      wR * ${m} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let S=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(S="avgValue / count");const I=4*Math.floor(a/4),E=a%4,R=`\n      if (${C}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${l}, ${u});\n      const ivec3 pads = ivec3(${g}, ${y}, ${x});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${f};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${I}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${R}\n            }\n\n            int xC = xCCorner + ${I};\n            if (${1===E}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${R}\n            } else if (${2===E}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${R}\n            } else if (${3===E}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${R}\n            }\n          }\n          setOutput(${S});\n        }\n      }\n    `}}const jL={kernelName:Ga,backendName:"webgl",kernelFunc:function HL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Ra(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s;k(St(a,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const c=Nn(r.shape,o,a,1,i,l);if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))return pn({inputs:{x:r},backend:e});const h=new Pa(c,"avg",!1);return e.runWebGLProgram(h,[r],"float32")}},qL={kernelName:Ua,backendName:"webgl",kernelFunc:function KL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=s,h=os(r.shape,o,a,[1,1,1],i,l,u),d=new pp(h,"avg",!1);return e.runWebGLProgram(d,[r],"float32")}};class XL{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const l=t.effectiveFilterHeight,u=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${l-1-t.padInfo.top}, ${u-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${l};\n            wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${t.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZL{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${h-1-t.padInfo.front}, ${d-1-t.padInfo.top}, ${p-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterDepth*t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const JL={kernelName:Eu,backendName:"webgl",kernelFunc:function YL(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,d=os(a.shape,i,l,[1,1,1],u,c),p=new ZL(d);return e.runWebGLProgram(p,[r],a.dtype)}},eM={kernelName:_u,backendName:"webgl",kernelFunc:function QL(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o;Ra([r,o],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=s,c=Nn(a.shape,i,l,1,u),h=new XL(c);return e.runWebGLProgram(h,[r],a.dtype)}},nM={kernelName:Ha,backendName:"webgl",kernelFunc:function tM(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;return fu({a:r,b:o,transposeA:a,transposeB:i,backend:e})}};class sM{constructor(t,e,s,r,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],qe(t,e),qe(t,s);let i="0.0";null!=r&&(qe(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";null!=o&&(qe(t,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class rM{constructor(t,e,s,r,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],qe(t,e),qe(t,s);let i="vec4(0.0)";null!=r&&(qe(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=o&&(qe(t,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const oM={kernelName:si,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:r,variance:o,offset:a,scale:i}=n;k(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(null==a||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(null==i||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;null==l&&(l=.001);const u=[s,r,o];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=i&&(h=i.shape,u.push(i));const d=te().getBool("WEBGL_PACK_NORMALIZATION")?new rM(s.shape,r.shape,o.shape,c,h,l):new sM(s.shape,r.shape,o.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class aM{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ct(this.rank),s=`uniform int start[${this.rank}];`,r=function iM(n){if(1===n)return"sourceLoc";if(n<=6)return fp.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}(this.rank);let o;o=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((i,l)=>`sourceLoc.${fp[l]} = start[${l}] + coords.${fp[l]};`).join("\n")}\n      `,this.userCode=`\n      ${s}\n      void main() {\n        ${o}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,s)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(s,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const fp=["x","y","z","w","u","v"];class lM{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=ct(this.rank),s=on("coords",this.rank),r=on("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${o})`,i=`\n      result.x = ${a};\n      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,l=1===this.rank?"":`\n      --${s[this.rank-1]};\n      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((c,h)=>`start[${h}]`).join()});`:t.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${l}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,s)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(s,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function La(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:a}=s,[i,l]=sl(r,o,a);if(Ac(r,i,l),0===U(l))return e.makeTensorInfo(l,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||"string"===r.dtype){const h=e.texData.get(r.dataId),d=nP(h.values,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,d)}const{isPacked:u}=e.texData.get(r.dataId),c=Rc(r.shape,i,l);if(u||!c){const h=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lM(l):new aM(l),d=h.getCustomSetupFunc(i);return e.runWebGLProgram(h,[r],r.dtype,d)}return e.uploadToGPU(r.dataId),function uM(n,t,e,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(e,n.dtype),a=s.texData.get(o.dataId);Object.assign(a,r),a.complexParentRefCount=0,a.refCount=1,a.shape=e,a.dtype=n.dtype;let i=Oc(t,Fe(n.shape));r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),o}(r,i,l,e)}const cM={kernelName:Ai,backendName:"webgl",kernelFunc:La},hM={kernelName:ja,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s;k(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((x,C)=>x*C),l=ha(r.shape,o,i),u=da(l.length,o.length),c=pa(r.shape,o,i),h=Th(a,o.length),d=$h(c,a,o.length),p=[],f=ve({inputs:{x:r},backend:e,attrs:{shape:l}}),m=ln({inputs:{x:f},backend:e,attrs:{perm:u}}),g=ve({inputs:{x:m},backend:e,attrs:{shape:c}}),y=La({inputs:{x:g},backend:e,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>e.disposeIntermediateTensorInfo(x)),y}},pM={kernelName:Dp,backendName:"webgl",kernelFunc:function dM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a}=s,i=e.readSync(r.dataId),l=e.readSync(o.dataId),u=Px(i,l,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,u)}},lb=Zt({opSnippet:"return float(a != b);",dtype:"bool"}),fM={kernelName:vi,backendName:"webgl",kernelFunc:lb};function Ma(n){const{inputs:t,backend:e}=n,{input:s}=t;return pn({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.real},backend:e})}const mM={kernelName:tc,backendName:"webgl",kernelFunc:Ma},xM={kernelName:po,backendName:"webgl",kernelFunc:function mp(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if("complex64"===o){if("complex64"===r.dtype)return pn({inputs:{x:r},backend:e});const a=Pt(r.shape),i=mp({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=Fs({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeIntermediateTensorInfo(i),l}if("complex64"===r.dtype){const a=Ma({inputs:{input:r},backend:e}),i=mp({inputs:{x:a},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(a),i}if(!vu(r.dtype,o)){const a=pn({inputs:{x:r},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:o}}if("int32"===o)return function yM(n,t){const e=new Os(n.shape,"return float(int(x));"),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(r,e);if("bool"===o){const a=e.makeTensorInfo([],"bool",Qt("bool",1)),l=lb({inputs:{a:r,b:a},backend:e});return e.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}},ub="return ceil(x);",bM=Qe({opSnippet:ub,packedOpSnippet:ub,cpuKernelImpl:MF}),wM={kernelName:fo,backendName:"webgl",kernelFunc:bM};class vM{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(s,r)=>{null==this.minLoc&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,t),s.gl.uniform1f(this.maxLoc,e)}}}class NM{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(s,r)=>{null==this.minLoc&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,t),s.gl.uniform1f(this.maxLoc,e)}}}const kM={kernelName:mo,backendName:"webgl",kernelFunc:function CM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:o,clipValueMax:a}=s;let i;i=te().getBool("WEBGL_PACK_CLIP")?new NM(r.shape):new vM(r.shape);const l=i.getCustomSetupFunc(o,a);return e.runWebGLProgram(i,[r],r.dtype,l)}};class IM{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function cb(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}const TM={kernelName:Ka,backendName:"webgl",kernelFunc:function SM(n){const{inputs:t,backend:e}=n,{x:s}=t,r=e.texData.get(s.dataId),o=new IM(s.shape),a=[cb(s,r.complexTensorInfos.real),cb(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(o,a,a[0].dtype)}};class $M{constructor(t){this.outputShape=[],this.outputShape=cs(t,1),this.variableNames=t.map((a,i)=>`T${i}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<e.length;a++)s.push(`else if (yC < ${e[a]}) setOutput(getT${a}(yR, yC-${e[a-1]}));`);s.push(`else setOutput(getT${e.length}(yR, yC-${e[e.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${s.join("\n        ")}\n      }\n    `}}class _M{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=cs(t,e);const s=this.outputShape,r=s.length,o=ct(r),a=on("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((m,g)=>`T${g}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let m=1;m<l.length;m++)l[m]=l[m-1]+t[m][e];const u=i[e],c=i.slice(-2),h=i.join();let d=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let m=1;m<l.length;m++){const g=l[m-1];d+=`\n        if (${u} < ${l[m]}  && ${u} >= ${l[m-1]}) {\n          return getChannel(\n            getT${m}(${gu(i,u,g)}),\n            vec2(${gu(c,u,g)}));\n        }`}const f=l[l.length-1];d+=`\n        return getChannel(\n          getT${l.length}(${gu(i,u,f)}),\n          vec2(${gu(c,u,f)}));`,this.userCode=`\n      float getValue(${i.map(m=>"int "+m)}) {\n        ${d}\n      }\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${s[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${s[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${s[r-2]} &&\n            ${a[r-1]} < ${s[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function gu(n,t,e){const s=n.indexOf(t);return n.map((o,a)=>a===s?`${o} - ${e}`:o).join()}function yu(n){const{inputs:t,backend:e}=n,{input:s}=t;return pn({inputs:{x:e.texData.get(s.dataId).complexTensorInfos.imag},backend:e})}const EM={kernelName:ju,backendName:"webgl",kernelFunc:yu};function Qr(n,t,e){const s=n[0].dtype;if("complex64"===s){const u=n.map(f=>Ma({inputs:{input:f},backend:e})),c=n.map(f=>yu({inputs:{input:f},backend:e})),h=Qr(u,t,e),d=Qr(c,t,e),p=Fs({inputs:{real:h,imag:d},backend:e});return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),c.forEach(f=>e.disposeIntermediateTensorInfo(f)),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),p}if("string"===s){const{tensors2D:u,outShape:c}=hb(n,t,e),h=u.map(g=>({vals:e.readSync(g.dataId),shape:g.shape})),p=zF(h,c,s,1===u[0].shape[0]),f=cs(n.map(g=>g.shape),t),m=e.makeTensorInfo(f,s,p);return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}if(n.length>te().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(n.length/2),c=Qr(n.slice(0,u),t,e),h=Qr(n.slice(u),t,e),d=Qr([c,h],t,e);return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),d}if(te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&n[0].shape.length>1){const u=new _M(n.map(c=>c.shape),t);return e.runWebGLProgram(u,n,s)}const{tensors2D:r,outShape:o}=hb(n,t,e),a=new $M(r.map(u=>u.shape)),i=e.runWebGLProgram(a,r,s);r.forEach(u=>e.disposeIntermediateTensorInfo(u));const l=ve({inputs:{x:i},attrs:{shape:o},backend:e});return e.disposeIntermediateTensorInfo(i),l}function hb(n,t,e){const s=cs(n.map(o=>o.shape),t);return{tensors2D:n.map(o=>ve({inputs:{x:o},attrs:{shape:[-1,U(o.shape.slice(t))]},backend:e})),outShape:s}}function db(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=$e(r,t[0].shape)[0],a=cs(t.map(u=>u.shape),o);if(0===U(a))return e.makeTensorInfo(a,t[0].dtype,[]);const i=t.filter(u=>U(u.shape)>0);return 1===i.length?pn({inputs:{x:i[0]},backend:e}):(kh(i.map(u=>u.shape),o),Qr(i,o,e))}const DM={kernelName:qa,backendName:"webgl",kernelFunc:db};class pb{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,i=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=4*Math.floor(t.inChannels/4),m=t.inChannels%4,g="channelsLast"===t.dataFormat,y=g?1:2,x=g?2:3,C=g?3:1;let w="",N="";s&&(w=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,N="result = activation(result);");const S=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${C}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${y}], coords[${x}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${f}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===m}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${f}) *\n                    getW(wR, wC, ${f}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${f}, xR, xC) *\n                    getW(wR, wC, ${f}, d2);\n              }\n\n            } else if (${2===m}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===m}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2),\n                getW(wR, wC, ${f} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1),\n                  getX(batch, xR, xC, ${f} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC),\n                  getX(batch, ${f} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${S}\n        ${N}\n        setOutput(result);\n      }\n    `}}class AM{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,p=t.filterWidth,f=4*Math.floor(t.inChannels/4),m=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${o}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${s}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${l};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${f}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===m}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${f}) *\n                  getW(wF, wR, wC, ${f}, d2);\n              } else if (${2===m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1),\n                  getX(batch, xF, xR, xC, ${f} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2),\n                  getW(wF, wR, wC, ${f} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class RM{constructor(t,e,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:o,strideWidth:a,strideHeight:i,padInfo:l,outWidth:u,dilationWidth:c,dilationHeight:h,dataFormat:d}=s,{left:p,top:f}=l,m=o*r,g=rn(),y="channelsLast"===d,x=y?0:1,C=y?1:2;let w="";for(let N=0;N<=1;N++)for(let S=0;S<=1;S++)w+=`\n          blockIndex = rc.y + ${S};\n          pos = rc.x + ${N};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${f};\n            d0 = offsetY + ${h} * (pos / ${m});\n\n            if(d0 < ${e[x]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${m}.) / ${o}.));\n\n              if(d1 < ${e[C]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${o}.));\n\n                if (${y}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*N+S}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*N+S}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${w}\n\n        ${g.output} = result;\n      }\n    `}}function fb({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const l=n.shape,u=s.texData.get(n.dataId),p="channelsLast"===e.dataFormat;let g;const y=[],C=l[2]%2!=0&&!!u.isPacked;if((1!=l[0]*l[1]*l[2]&&1!==e.outChannels||!(e.inChannels>1e3))&&te().getBool("WEBGL_LAZILY_UNPACK")&&te().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&C){const N={dataId:n.dataId,shape:[1,p?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),e.inChannels],dtype:n.dtype},S=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,k(ou(u.shape,N.shape),()=>`packed reshape ${u.shape} to ${N.shape} isn't free`);const I=ve({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});y.push(I);const E=fu({a:N,b:I,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),R=s.texData.get(E.dataId);k(R.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=S,R.shape=e.outShape,g=pn({inputs:{x:E},backend:s}),g.shape=e.outShape,y.push(E)}else{const N=ve({inputs:{x:n},backend:s,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],e.inChannels]}}),S=ve({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),I=fu({a:N,b:S,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a});g=ve({inputs:{x:I},backend:s,attrs:{shape:e.outShape}}),y.push(N),y.push(S),y.push(I)}for(const w of y)s.disposeIntermediateTensorInfo(w);return g}function mb({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=e,f="channelsLast"===p,m=l*u*c,g=d*h,y=[m,g],w=[],N=ve({inputs:{x:n},backend:s,attrs:{shape:n.shape.slice(1)}}),S=ve({inputs:{x:t},backend:s,attrs:{shape:[1,m,U(t.shape)/m]}});w.push(N),w.push(S);const I=new RM(y,N.shape,e),E=s.runWebGLProgram(I,[N],"float32"),R=ve({inputs:{x:E},backend:s,attrs:{shape:[1,y[0],y[1]]}});w.push(E),w.push(R);const z=null!=r,K=null!=o,J="leakyrelu"===i,Y=i?du(i,!0):null,Q=new Zx(R.shape,S.shape,[1,g,e.outChannels],!0,!1,z,Y,K,J),Z=[R,S];if(r&&Z.push(r),K&&Z.push(o),J){const se=s.makeTensorInfo([],"float32",ys(a,"float32"));Z.push(se),w.push(se)}const X=s.runWebGLProgram(Q,Z,"float32"),ee=ve({inputs:{x:X},backend:s,attrs:{shape:f?[1,d,h,e.outChannels]:[1,e.outChannels,d,h]}});w.push(X);for(const se of w)s.disposeIntermediateTensorInfo(se);return ee}const FM={kernelName:Xa,backendName:"webgl",kernelFunc:function OM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=as(l),d=Bt(r.shape,o.shape,a,u,i,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(te().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])p=mb({x:r,filter:o,convInfo:d,backend:e});else{const m=new pb(d);p=e.runWebGLProgram(m,[r,o],"float32")}else p=fb({x:r,filter:o,convInfo:d,backend:e});const f=ve({inputs:{x:p},backend:e,attrs:{shape:d.outShape}});return e.disposeIntermediateTensorInfo(p),f}};class PM{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===t.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LM{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a="channelsLast"===t.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${a?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${a?1:2}], coords[${a?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class MM{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${t.strideDepth} - ${t.padInfo.front};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zM{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${s-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${t.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${s}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${s} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const BM={kernelName:Au,backendName:"webgl",kernelFunc:function VM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=as(l),d=Bt(r.shape,c,a,1,i,u,!1,h),p=new PM(d);return e.runWebGLProgram(p,[r,o],"float32")}},GM={kernelName:Za,backendName:"webgl",kernelFunc:function WM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=as(u),d=Bt(a,o.shape,i,1,l,c,!1,h),p=new LM(d);return e.runWebGLProgram(p,[r,o],"float32")}},HM={kernelName:Ya,backendName:"webgl",kernelFunc:function UM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s,u=ws(r.shape,o.shape,a,l,i),c=new AM(u);return e.runWebGLProgram(c,[r,o],"float32")}},KM={kernelName:Ru,backendName:"webgl",kernelFunc:function jM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:l}=s,u=ws(r.shape,l,a,1,i),c=new MM(u);return e.runWebGLProgram(c,[r,o],"float32")}},XM={kernelName:Ou,backendName:"webgl",kernelFunc:function qM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:l}=s,u=ws(l,o.shape,i,1,a),c=new zM(u);return e.runWebGLProgram(c,[r,o],"float32")}},YM=Qe({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),JM={kernelName:go,backendName:"webgl",kernelFunc:YM},QM=Qe({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),ez={kernelName:yo,backendName:"webgl",kernelFunc:QM};class tz{constructor(t,e,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,l,u]=t,[c]=e,[h,d]=s;this.outputShape=[c,h,d,u];const p="bilinear"===r?1:0,[f,m]=[i-1+".0",l-1+".0"],[g,y,x]=h>1?[""+(i-1)/(h-1),"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[C,w,N]=d>1?[""+(l-1)/(d-1),"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${C});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${y};\n        float width_scale = ${w};\n\n        float in_y = ${x};\n        if( in_y < 0.0 || in_y > ${f} ) {\n          setOutput(float(${o}));\n          return;\n        }\n        float in_x = ${N};\n        if( in_x < 0.0 || in_x > ${m} ) {\n          setOutput(float(${o}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const nz={kernelName:Fu,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:a}=t,{cropSize:i,method:l,extrapolationValue:u}=s,c=new tz(r.shape,o.shape,i,l,u);return e.runWebGLProgram(c,[r,o,a],"float32")}};class gb{constructor(t,e,s){this.variableNames=["x"],this.outputShape=t;const r=t.length,o=e?"0.0":`getX(${yb(r,"coords")})`,a=t[t.length-1];let i="",l="";e?(i=s?"end != "+(a-1):"end != 0",l=s?"end + 1":"end - 1"):(i=s?`end + pow2 < ${a}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${ct(r)} coords = getOutputCoords();\n        int end = ${xb(r,"coords")};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${l};\n          ${xb(r,"coords")} = idx;\n          val += getX(${yb(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,s)=>{null==this.index&&(this.index=e.getUniformLocation(s,"index")),e.gl.uniform1f(this.index,t)}}}function yb(n,t){if(1===n)return`${t}`;if(2===n)return`${t}.x, ${t}.y`;if(3===n)return`${t}.x, ${t}.y, ${t}.z`;if(4===n)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}function xb(n,t){if(1===n)return`${t}`;if(2===n)return`${t}.y`;if(3===n)return`${t}.z`;if(4===n)return`${t}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}const rz={kernelName:Ja,backendName:"webgl",kernelFunc:function sz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s,l=r.shape.length,u=_t([o],l);let c=r;null!=u&&(c=ln({inputs:{x:r},backend:e,attrs:{perm:u}}));const h=Rt(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${o}`);const d=c.shape[h];let p=pn({inputs:{x:c},backend:e});for(let f=0;f<=Math.ceil(Math.log2(d))-1;f++){const m=new gb(c.shape,!1,i),g=m.getCustomSetupFunc(f),y=p;p=e.runWebGLProgram(m,[p],p.dtype,g),e.disposeIntermediateTensorInfo(y)}if(a){const f=new gb(c.shape,a,i),m=p;p=e.runWebGLProgram(f,[p],p.dtype),e.disposeIntermediateTensorInfo(m)}if(null!=u){const m=ln({inputs:{x:p},backend:e,attrs:{perm:Sr(u)}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(c),m}return p}},az={kernelName:Ap,backendName:"webgl",kernelFunc:function oz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a,binaryOutput:i}=s;if(1===r.shape.length){const l=e.readSync(r.dataId),u=e.readSync(o.dataId),c=Px(l,u,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,c)}if(2===r.shape.length){const l=e.bufferSync(r),u=e.bufferSync(o),c=LF(l,u,a,i);return e.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class iz{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const uz={kernelName:Pu,backendName:"webgl",kernelFunc:function lz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:a}=s;k(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const i=r.shape[0],h=("NHWC"===a?r.shape[1]:r.shape[2])*o,d=("NHWC"===a?r.shape[2]:r.shape[3])*o,p=("NHWC"===a?r.shape[3]:r.shape[1])/(o*o),m=new iz("NHWC"===a?[i,h,d,p]:[i,p,h,d],o,a);return e.runWebGLProgram(m,[r],r.dtype)}};class bb{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,l=t.padInfo.top,u=t.padInfo.left,c=t.strideHeight,h=t.strideWidth,d=t.dilationHeight,p=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,g=t.outChannels/t.inChannels;let y="",x="";s&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,x="result = activation(result);");const C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${l}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${g};\n        int q = d2 - d1 * ${g};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${f}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${m}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${C}\n        ${x}\n        setOutput(result);\n      }\n    `}}class wb{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,l=t.padInfo.top,u=t.padInfo.left,c=t.strideHeight,h=t.strideWidth,d=t.dilationHeight,p=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,g=m;let y="int xR; int xC; int xCOffset;";for(let N=0;N<f;N++)for(let S=0;S<m;S++)y+=`\n          vec4 xTexelR${N}C${2*S} = vec4(0.);\n          vec4 wR${N}C${S} = vec4(0.);\n          vec4 xR${N}C${S} = vec4(0.);`;for(let N=0;N<f;N++)for(let S=0;S<g;S++){const I=2*S;if(y+=`\n          xR = xRCorner + ${N*d};\n          xC = xCCorner + ${I*p};\n        `,1===h){if(I<m&&(y+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${N}C${I} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${N}C${I}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${N}C${I} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${N}C${I} = vec4(previous.zw, xTexelR${N}C${I}.xy);\n                } else {\n                  xR${N}C${I} = vec4(0, 0, xTexelR${N}C${I}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${N}C${I} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${N}C${I} = vec4(0.);\n                }\n\n                xR${N}C${I} = xTexelR${N}C${I};\n              `,I+1<m)){const E=u%2==0?G(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(y+=`\n                  xCOffset = xC + ${u%2} + ${E};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${N}C${I+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(y+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${N}C${I} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${N}C${I} = vec4(0.);\n                    }\n                  `),y+=`\n                  xR${N}C${I+1} = vec4(\n                    xTexelR${N}C${I}.zw, xTexelR${N}C${I+2}.xy);\n                `):y+=`\n                  xCOffset = xC + ${E};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${N}C${I+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${N}C${I+1} = xTexelR${N}C${I+2};\n                `}}else I<m&&(y+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,u%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${N}C${I} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${N}C${I} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${N}C${I+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${N}C${I+2} = vec4(0.);\n                }\n\n                xR${N}C${I} = vec4(\n                  xTexelR${N}C${I}.zw, xTexelR${N}C${I+2}.zw);\n              `,I+1<m&&(y+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${N}C${I+1} = vec4(xTexelR${N}C${I+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${N}C${I} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${N}C${I} = vec4(0.);\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${N}C${I+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${N}C${I+2} = vec4(0.);\n                }\n\n                xR${N}C${I} = vec4(\n                  xTexelR${N}C${I}.xy, xTexelR${N}C${I+2}.xy);\n              `,I+1<m&&(y+=`\n                  xR${N}C${I+1} = vec4(\n                    xTexelR${N}C${I}.zw, xTexelR${N}C${I+2}.zw);\n                `)),y+="}");I<m&&(y+=`\n            vec4 wTexelR${N}C${I} = getW(${N}, ${I}, d1, q);\n            wR${N}C${I} = vec4(wTexelR${N}C${I}.xz, wTexelR${N}C${I}.xz);\n          `,I+1<m&&(y+=`\n              vec4 wTexelR${N}C${I+1} = getW(${N}, ${I+1}, d1, q);\n              wR${N}C${I+1} =\n                vec4(wTexelR${N}C${I+1}.xz, wTexelR${N}C${I+1}.xz);`))}for(let N=0;N<f;N++)for(let S=0;S<m;S++)y+=`dotProd += xR${N}C${S} * wR${N}C${S};`;let x="",C="";s&&(x=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,C="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${l}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${y}\n\n        vec4 result = dotProd;\n        ${w}\n        ${C}\n        setOutput(result);\n      }\n    `}}const hz={kernelName:Qa,backendName:"webgl",kernelFunc:function cz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),k(St(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const h=Bt(r.shape,o.shape,a,c,i,u,!0);let d;return d=te().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new wb(h):new bb(h),e.runWebGLProgram(d,[r,o],"float32")}};class dz{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${t.outChannels/t.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pz{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,l=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${l}; dm++) {\n              int d2 = d1 * ${l} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const mz={kernelName:Lu,backendName:"webgl",kernelFunc:function fz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Bt(r.shape,c,a,i,l,u,!0),d=new dz(h);return e.runWebGLProgram(d,[r,o],"float32")}},yz={kernelName:Mu,backendName:"webgl",kernelFunc:function gz(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Bt(c,o.shape,a,i,l,u,!0),d=new pz(h);return e.runWebGLProgram(d,[r,o],"float32")}};class xz{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const wz={kernelName:"Diag",backendName:"webgl",kernelFunc:function bz(n){const{inputs:t,backend:e}=n,{x:s}=t,r=[...s.shape,...s.shape],o=U(s.shape),a=ve({inputs:{x:s},backend:e,attrs:{shape:[o]}}),i=new xz(o),l=e.runWebGLProgram(i,[a],a.dtype),u=ve({inputs:{x:l},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),u}};class vz{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:h,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${a});\n      const ivec2 pads = ivec2(${h}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${l}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${s}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Cz={kernelName:ei,backendName:"webgl",kernelFunc:function Nz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s,u=oa(r.shape,o.shape,a,i,"NHWC",l);let c;const h=new vz(u);c=e.runWebGLProgram(h,[r,o],"float32");const d=ve({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),d}},kz=Qe({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Iz={kernelName:bo,backendName:"webgl",kernelFunc:kz},$z={kernelName:Bu,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e}=n,{dy:s,y:r}=t,o=te().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Fa("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new Jr("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return e.runWebGLProgram(o,[s,r],s.dtype)}},_z=Zt({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Ez={kernelName:ti,backendName:"webgl",kernelFunc:_z},Az=Qe({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Eh};\n  float a1 = ${Dh};\n  float a2 = ${Ah};\n  float a3 = ${Rh};\n  float a4 = ${Oh};\n  float a5 = ${Fh};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Rz={kernelName:wo,backendName:"webgl",kernelFunc:Az},vb="return exp(x);",Nb=Qe({opSnippet:vb,packedOpSnippet:vb,cpuKernelImpl:VF}),Oz={kernelName:vo,backendName:"webgl",kernelFunc:Nb};function gp(n){const{inputs:t,attrs:e,backend:s}=n,{dim:r}=e,{input:o}=t,a=o.shape.length,i=o.shape.slice();let l=r;return r<0&&(k(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),i.splice(l,0,1),ve({inputs:{x:o},backend:s,attrs:{shape:i}})}const Fz={kernelName:ni,backendName:"webgl",kernelFunc:gp},Cb="return exp(x) - 1.0;",Pz=Qe({opSnippet:Cb,packedOpSnippet:Cb,cpuKernelImpl:BF}),Lz={kernelName:No,backendName:"webgl",kernelFunc:Pz};class kb{constructor(t,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${o};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Ib(n,t,e){const s=e.texData.get(n.dataId),r=U(n.shape),o=n.shape[n.shape.length-1],i=ve({inputs:{x:n},backend:e,attrs:{shape:[r/o,o]}}),l=i.shape,u=new kb("real",l,t),c=new kb("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=e.runWebGLProgram(u,h,"float32"),p=e.runWebGLProgram(c,h,"float32"),f=Fs({inputs:{real:d,imag:p},backend:e});e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p);const m=ve({inputs:{x:f},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),m}const zz={kernelName:"FFT",backendName:"webgl",kernelFunc:function Mz(n){const{inputs:t,backend:e}=n,{input:s}=t;return Ib(s,!1,e)}};class Vz{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,s)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(s,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function yp(n){const{backend:t,attrs:e}=n,{shape:s,value:r}=e;let{dtype:o}=e;if(o=o||no(r),"string"===o){const a=hr(o,U(s));return a.fill(r),t.makeTensorInfo(s,o,a)}{const a=new Vz(s,r),i=a.getCustomSetupFunc(r);return t.runWebGLProgram(a,[],o,i)}}const Bz={kernelName:Gu,backendName:"webgl",kernelFunc:yp};class Wz{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Gz={kernelName:Uu,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,r=new Wz(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}},Sb="return floor(x);",Uz=Qe({opSnippet:Sb,packedOpSnippet:Sb,cpuKernelImpl:WF}),Hz={kernelName:Co,backendName:"webgl",kernelFunc:Uz},jz=Zt({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Kz={kernelName:ko,backendName:"webgl",kernelFunc:jz};class qz{constructor(t){this.variableNames=["A"];const e=rn(),[s,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Xz{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=rn(),[s,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${s}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const Zz={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function Yz(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:r}=t;const{numChannels:o}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[u,c]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[c,u],d=[c,u,o];(i||a||l)&&(null==eo&&(eo=document.createElement("canvas").getContext("2d")),eo.canvas.width=u,eo.canvas.height=c,eo.drawImage(r,0,0,u,c),r=eo.canvas);const p=e.makeTensorInfo(h,"int32");e.texData.get(p.dataId).usage=dn.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(p.dataId),r);const f=te().getBool("WEBGL_PACK")?new Xz(d):new qz(d),m=e.runWebGLProgram(f,[p],"int32");return e.disposeData(p.dataId),m}};let eo;const Qz={kernelName:Wi,backendName:"webgl",kernelFunc:function Jz(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=as(c),g=Bt(r.shape,o.shape,l,h,u,d,!1,m);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(te().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=mb({x:r,filter:o,convInfo:g,backend:e,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const w=null!=a,N=null!=i,S="leakyrelu"===p,I=p?du(p,!1):null,E=new pb(g,w,I,N,S),R=[r,o];if(a&&R.push(a),i&&R.push(i),S){const z=e.makeTensorInfo([],"float32",ys(f,"float32"));R.push(z),x.push(z)}y=e.runWebGLProgram(E,R,"float32")}else y=fb({x:r,filter:o,convInfo:g,backend:e,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const C=ve({inputs:{x:y},backend:e,attrs:{shape:g.outShape}});return x.push(y),x.forEach(w=>e.disposeIntermediateTensorInfo(w)),C}},tV={kernelName:Gi,backendName:"webgl",kernelFunc:function eV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;null==m&&(m=[1,1]),k(St(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=Bt(r.shape,o.shape,l,m,u,h,!0),y=te().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=d?du(d,y):null,C=[r,o],w=null!=a,N=null!=i,S="leakyrelu"===d;if(w&&C.push(a),N&&C.push(i),S){const R=e.makeTensorInfo([],"float32",ys(p,"float32"));C.push(R),f.push(R)}let I;I=y?new wb(g,w,x,N,S):new bb(g,w,x,N,S);const E=e.runWebGLProgram(I,C,"float32");return f.forEach(R=>e.disposeIntermediateTensorInfo(R)),E}};class nV{constructor(t,e,s){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=s;const r=ct(e.length),o=ct(s.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${o} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const rV={kernelName:Op,backendName:"webgl",kernelFunc:function sV(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=r.shape,a=o[o.length-1],[i,l,u,c]=_h(s,r),h=ve({inputs:{x:r},backend:e,attrs:{shape:[l,a]}}),d=ve({inputs:{x:s},backend:e,attrs:{shape:[U(s.shape)/u,u]}}),p=new nV(a,c,[l,u]),f=e.runWebGLProgram(p,[d,h],d.dtype),m=ve({inputs:{x:f},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}};class oV{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ct(this.rank),r=function aV(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)s.push(2===r?"int(getIndices(resRC.x, resRC.z))":`${e[r]}`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const lV={kernelName:ri,backendName:"webgl",kernelFunc:function iV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:a,batchDims:i}=s,u=Mh(r,o,$e(a,r.shape)[0],i),c=U(o.shape),h=[],d=ve({inputs:{x:r},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=ve({inputs:{x:o},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([r,o])||"string"===r.dtype){const x=e.bufferSync(p),C=e.bufferSync(d),w=GF(C,x,f);return h.forEach(N=>e.disposeIntermediateTensorInfo(N)),e.makeTensorInfo(u.outputShape,w.dtype,w.values)}const m=new oV(d.shape,f),g=e.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=ve({inputs:{x:g},backend:e,attrs:{shape:u.outputShape}});return h.forEach(x=>e.disposeIntermediateTensorInfo(x)),y}},uV=Zt({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:UF,dtype:"bool"}),cV={kernelName:oi,backendName:"webgl",kernelFunc:uV},hV=Zt({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),dV={kernelName:Io,backendName:"webgl",kernelFunc:hV},fV={kernelName:Hu,backendName:"webgl",kernelFunc:function pV(n){const{inputs:t,backend:e}=n,{input:s}=t;return Ib(s,!0,e)}},mV=Qe({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),gV={kernelName:So,backendName:"webgl",kernelFunc:mV},yV=Qe({opSnippet:"return float(isinf(x));",dtype:"bool"}),xV={kernelName:To,backendName:"webgl",kernelFunc:yV},bV=Qe({opSnippet:"return float(isnan(x));",dtype:"bool"}),wV={kernelName:$o,backendName:"webgl",kernelFunc:bV},vV=Zt({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:HF,dtype:"bool"}),NV={kernelName:li,backendName:"webgl",kernelFunc:vV},CV=Zt({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),kV={kernelName:ui,backendName:"webgl",kernelFunc:CV},SV={kernelName:Fp,backendName:"webgl",kernelFunc:function IV(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,a=jF(s,r,o);return t.makeTensorInfo([a.length],"float32",a)}},TV=Qe({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:KF}),$V={kernelName:_o,backendName:"webgl",kernelFunc:TV},_V=Qe({opSnippet:"return log(1.0 + x);"}),EV={kernelName:Eo,backendName:"webgl",kernelFunc:_V},DV=Zt({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),AV={kernelName:ci,backendName:"webgl",kernelFunc:DV},RV=Qe({opSnippet:"return float(!(x >= 1.0));"}),OV={kernelName:hi,backendName:"webgl",kernelFunc:RV},FV=Zt({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),PV={kernelName:di,backendName:"webgl",kernelFunc:FV};class LV{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let l;this.outputShape=t;const u=`float(${s}) + float(${r}) * sum`;l=.5===o?`inversesqrt(${u})`:1===o?`1.0/(${u})`:`exp(log(${u}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${l};\n        setOutput(val);\n      }\n    `}}class MV{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let l;this.outputShape=t;const u=`float(${s}) + float(${r}) * sum`;l=.5===o?`inversesqrt(${u})`:1===o?`1.0/(${u})`:`exp(log(${u}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${l};\n        setOutput(result);\n      }\n    `}}const zV={kernelName:pi,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:l}=s,u=te().getBool("WEBGL_PACK_NORMALIZATION")?new MV(r.shape,o,a,i,l):new LV(r.shape,o,a,i,l);return e.runWebGLProgram(u,[r],r.dtype)}};class VV{constructor(t,e,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${s});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${o})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${o});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const BV={kernelName:Ku,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s,h=new VV(r.shape,i,l,u,c);return e.runWebGLProgram(h,[r,o,a],r.dtype)}};function Tb(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:a}=s,i=r.shape.length,l=$e(o,r.shape);let u=l;const c=_t(u,i),h=null!=c,d=e.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const C=e.texData.get(p.dataId).values,w=new Array(i);for(let I=0;I<w.length;I++)w[I]=r.shape[c[I]];const N=hp(C,r.shape,r.dtype,c,w);p=e.makeTensorInfo(w,r.dtype),e.texData.get(p.dataId).values=N}else p=pu(r,c,e);u=Rt(u.length,i)}qt("max",u,i);const[f,m]=Wt(p.shape,u);let y,g=f;if(a&&(g=$t(f,l)),d){const C=e.texData.get(p.dataId).values,w=qF(C,U(m),g,r.dtype);y=e.makeTensorInfo(g,r.dtype),e.texData.get(y.dataId).values=w}else y=function WV(n,t,e,s){const r=U(t),i=ve({inputs:{x:n},attrs:{shape:[U(n.shape)/r,r]},backend:s}),l=ur(i,n.dtype,"max",s),u=ve({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}(p,m,g,e);return h&&e.disposeIntermediateTensorInfo(p),y}const GV={kernelName:fi,backendName:"webgl",kernelFunc:Tb},jV=Zt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:XF}),KV={kernelName:Do,backendName:"webgl",kernelFunc:jV},XV={kernelName:mi,backendName:"webgl",kernelFunc:function qV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;Ra(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s;k(St(a,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`);const c=Nn(r.shape,o,a,1,i,l);if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))return pn({inputs:{x:r},backend:e});const h=new Pa(c,"max",!1);return e.runWebGLProgram(h,[r],r.dtype)}},YV={kernelName:gi,backendName:"webgl",kernelFunc:function ZV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dataFormat:l,dimRoundingMode:u}=s,h=os(r.shape,o,a,[1,1,1],i,u,l),d=new pp(h,"max",!1);return e.runWebGLProgram(d,[r],r.dtype)}};class JV{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const o=t.effectiveFilterHeight,a=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${o-1-t.padInfo.top}, ${a-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n          wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${o*a-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QV{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${l-1-t.padInfo.front}, ${u-1-t.padInfo.top}, ${c-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n           wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${l*u*c-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const t3={kernelName:Xu,backendName:"webgl",kernelFunc:function e3(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s,d=os(a.shape,i,l,[1,1,1],u,c),p=new pp(d,"max",!0),f=e.runWebGLProgram(p,[a],a.dtype),m=new QV(d),g=e.runWebGLProgram(m,[r,f],a.dtype);return e.disposeIntermediateTensorInfo(f),g}},s3={kernelName:qu,backendName:"webgl",kernelFunc:function n3(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:a}=t,i=o;Ra([o,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Nn(i.shape,l,u,1,c,h),f=new Pa(d,"max",!0),m=e.runWebGLProgram(f,[i],i.dtype),g=new JV(d),y=e.runWebGLProgram(g,[r,m],i.dtype);return e.disposeIntermediateTensorInfo(m),y}},o3={kernelName:Pp,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=t,l=e;k(4===s.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];k(St(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const c=Nn(s.shape,r,o,u,a),[h,d]=function r3(n,t,e,s){let r=new Pa(e,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");return r=new Pa(e,"max",!0,!0,t),[o,s.runWebGLProgram(r,[n],"float32")]}(s,i,c,l);return[h,d]}},i3={kernelName:yi,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:r,axis:o}=t,a=e,i=s.shape.length,l=$e(o,s.shape);let u=l;const c=_t(u,i),h=null!=c,d=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const w=a.texData.get(f.dataId).values,N=new Array(i);for(let E=0;E<N.length;E++)N[E]=s.shape[c[E]];const S=hp(w,s.shape,s.dtype,c,N);f=a.makeTensorInfo(N,s.dtype),a.texData.get(f.dataId).values=S}else f=pu(s,c,a);p.push(f),u=Rt(u.length,i)}qt("sum",u,i);const[m,g]=Wt(f.shape,u);let y=m;r&&(y=$t(m,l));const x=function a3(n,t,e,s){const r=U(t),i=ve({inputs:{x:n},attrs:{shape:[U(n.shape)/r,r]},backend:s}),l=ur(i,"float32","mean",s),u=ve({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),u}(f,g,y,a);for(const C of p)a.disposeIntermediateTensorInfo(C);return x}},u3={kernelName:xi,backendName:"webgl",kernelFunc:function l3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=$e(o,r.shape);let u=l;const c=_t(u,i);let h=r;null!=c&&(h=ln({inputs:{x:r},backend:e,attrs:{perm:c}}),u=Rt(u.length,r.shape.length)),qt("min",u,i);const[d,p]=Wt(h.shape,u),m=ve({inputs:{x:h},backend:e,attrs:{shape:[-1,U(p)]}}),g=ur(m,m.dtype,"min",e);let y;return y=ve(a?{inputs:{x:g},backend:e,attrs:{shape:$t(d,l)}}:{inputs:{x:g},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),null!=c&&e.disposeIntermediateTensorInfo(h),y}},d3=Zt({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:ZF}),p3={kernelName:Ao,backendName:"webgl",kernelFunc:d3};class f3{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((c,h)=>c[0]+t[h]+c[1]);const r=t.length,o=ct(r),a=e.map(c=>c[0]).join(","),i=e.map((c,h)=>c[0]+t[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===s?0:1;this.userCode=1!==r?`\n      ${o} start = ${o}(${a});\n      ${o} end = ${o}(${i});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${o} coords = outC - start;\n        setOutput(getX(${l}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class m3{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,m)=>f[0]+t[m]+f[1]);const r=t.length,o=ct(r),a=e.map(f=>f[0]).join(","),i=e.map((f,m)=>f[0]+t[m]).join(","),l=on("rc",r),u=on("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===s?0:1;let p="";if(1===r){const f=`\n        ${o} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${o} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${u.join()}), ${h});\n        ${l[r-1]} += 1;\n        if(${c}) {\n          ${f}\n          result[1] = getChannel(getX(${u.join()}), ${h});\n        }\n      `}else{const f=`\n        ${o} source = rc;\n        ${o} lt = ${o}(lessThan(source, start));\n        ${o} gte = ${o}(greaterThanEqual(source, end));\n        ${o} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${o} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${u.join()}), ${h});\n        ${l[r-1]} += 1;\n        if(${c}) {\n          ${f}\n          result[1] = getChannel(getX(${u.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${l[r-2]} += 1;\n        if(${l[r-2]} < ${this.outputShape[r-2]}) {\n          ${f}\n          result[2] = getChannel(getX(${u.join()}), ${h});\n          ${l[r-1]} += 1;\n          if(${c}) {\n            ${f}\n            result[3] = getChannel(getX(${u.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${o} start = ${o}(${a});\n      const ${o} end = ${o}(${i});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const g3={kernelName:bi,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:r,mode:o}=e,a=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new m3(s.shape,r,o):new f3(s.shape,r,o);return t.runWebGLProgram(a,[s],s.dtype)}},b3=Zt({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),w3={kernelName:Ro,backendName:"webgl",kernelFunc:b3};class v3{constructor(t,e,s){this.variableNames=["probs"],this.outputShape=[t,s],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,s)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(s,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const $b=Zt({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),N3={kernelName:xo,backendName:"webgl",kernelFunc:$b},_b="return a - b;",Eb=Zt({opSnippet:_b,packedOpSnippet:_b,supportsComplex:!0,cpuKernelImpl:rP}),C3={kernelName:Xo,backendName:"webgl",kernelFunc:Eb};function Db(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,a=$e([o],r.shape),i=Tb({inputs:{x:r},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),l=$t(i.shape,a),u=ve({inputs:{x:i},backend:e,attrs:{shape:l}}),c=Eb({inputs:{a:r,b:u},backend:e}),h=Nb({inputs:{x:c},backend:e}),d=dp({inputs:{x:h},backend:e,attrs:{axis:a,keepDims:!1}}),p=ve({inputs:{x:d},backend:e,attrs:{shape:l}}),f=$b({inputs:{a:h,b:p},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(p),f}const k3={kernelName:Pi,backendName:"webgl",kernelFunc:Db},S3={kernelName:Lp,backendName:"webgl",kernelFunc:function I3(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s,l=i?r:Db({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),h=new v3(l.shape[0],l.shape[1],o),d=h.getCustomSetupFunc(a),p=e.runWebGLProgram(h,[l],"int32",d);return i||e.disposeIntermediateTensorInfo(l),p}},Ab="return -x;",$3={kernelName:wi,backendName:"webgl",kernelFunc:function T3(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const o=e.texData.get(s.dataId),[a,i]=JF(o.values,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,a)}let r;return r=te().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Yr(s.shape,Ab):new Os(s.shape,Ab),e.runWebGLProgram(r,[s],s.dtype)}},_3=uh,D3={kernelName:Zu,backendName:"webgl",kernelFunc:function E3(n){Dr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=s,u=e.readSync(r.dataId),c=e.readSync(o.dataId),{selectedIndices:h}=_3(u,c,a,i,l);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},A3=ch,O3={kernelName:Yu,backendName:"webgl",kernelFunc:function R3(n){Dr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=s,c=e.readSync(r.dataId),h=e.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=A3(c,h,a,i,l,u);return[e.makeTensorInfo([d.length],"int32",new Int32Array(d)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}},F3=hh,L3={kernelName:Ju,backendName:"webgl",kernelFunc:function P3(n){Dr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=s,c=e.readSync(r.dataId),h=e.readSync(o.dataId),d=a,p=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=F3(c,h,d,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class M3{constructor(t,e,s,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${s}),\n                      float(index == coords.y)));\n      }\n    `}}const z3={kernelName:Ci,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{depth:o,onValue:a,offValue:i}=s,l=U(r.shape),u=new M3(l,o,a,i),c=ve({inputs:{x:r},backend:e,attrs:{shape:[l]}}),h=e.runWebGLProgram(u,[c],r.dtype);e.disposeIntermediateTensorInfo(c);const p=ve({inputs:{x:h},backend:e,attrs:{shape:[...r.shape,o]}});return e.disposeIntermediateTensorInfo(h),p}};function xu(n){const{inputs:t,backend:e}=n,{x:s}=t;if("complex64"===s.dtype){const r=Ma({inputs:{input:s},backend:e}),o=xu({inputs:{x:r},backend:e}),a=yu({inputs:{input:s},backend:e}),i=xu({inputs:{x:a},backend:e}),l=Fs({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}return yp({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:e})}const V3={kernelName:Vi,backendName:"webgl",kernelFunc:xu},B3={kernelName:Ni,backendName:"webgl",kernelFunc:function Rb(n){const{inputs:t,backend:e}=n,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const r=Ma({inputs:{input:s},backend:e}),o=Rb({inputs:{x:r},backend:e}),a=yu({inputs:{input:s},backend:e}),i=xu({inputs:{x:a},backend:e}),l=Fs({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}return yp({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}},G3={kernelName:ki,backendName:"webgl",kernelFunc:function W3(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(1===t.length)return gp({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(c=>{Le(o,c.shape,"All tensors passed to stack must have matching shapes"),k(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=db({inputs:t.map(c=>{const h=gp({inputs:{input:c},backend:e,attrs:{dim:r}});return i.push(h),h}),backend:e,attrs:{axis:r}});return i.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}};class U3{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);const r=t.length,o=ct(r),a=e.map(u=>u[0]).join(","),i=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${o} start = ${o}(${a});\n      ${o} end = ${o}(${i});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${s}));\n        } else {\n          ${o} coords = outC - start;\n          setOutput(getX(${l}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${s}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class H3{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((m,g)=>m[0]+t[g]+m[1]);const r=t.length,o=ct(r),a=e.map(m=>m[0]).join(","),i=e.map((m,g)=>m[0]+t[g]).join(","),l=on("rc",r),u=on("source",r),c=`${l[r-1]} < ${this.outputShape[r-1]}`,h=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${l[r-2]} += 1;\n       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${l[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=1===r?2:4;m<g;m++)f+=`\n        ${d[m]}\n        if (${p}) {\n          result[${m}] = float(${s});\n        } else {\n          ${o} source = rc - start;\n          result[${m}] = getChannel(getX(${u.join()}), ${h});\n        }\n      `;f+=1===r?"} ":"}}",this.userCode=`\n      const ${o} start = ${o}(${a});\n      const ${o} end = ${o}(${i});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}}const Ob=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:a}=s,i=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new H3(r.shape,o,a):new U3(r.shape,o,a);return e.runWebGLProgram(i,[r],r.dtype)},j3={kernelName:Ii,backendName:"webgl",kernelFunc:Ob},X3=Zt({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Z3={kernelName:Fo,backendName:"webgl",kernelFunc:X3},J3={kernelName:Qu,backendName:"webgl",kernelFunc:function Y3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=[],u=$e(o,r.shape);let c=u;const h=_t(c,i);let p,d=r;if(null!=h&&(d=ln({inputs:{x:r},backend:e,attrs:{perm:h}}),c=Rt(c.length,i),l.push(d)),qt("prod",c,i),e.shouldExecuteOnCPU([d])){const f=e.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=QF(d.shape,d.dtype,f,c);p=e.makeTensorInfo(g,y,m)}else{const[f,m]=Wt(d.shape,c),g=U(m),y=ve({inputs:{x:d},backend:e,attrs:{shape:[-1,g]}}),C=ur(y,pc(r.dtype),"prod",e);p=ve({inputs:{x:C},backend:e,attrs:{shape:f}}),l.push(y),l.push(C)}if(a){l.push(p);const f=$t(p.shape,u);p=ve({inputs:{x:p},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},Fb=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:o,dtype:a}=e,i=eP(s,r,o,a);return t.makeTensorInfo([i.length],a,i)},Q3={kernelName:ec,backendName:"webgl",kernelFunc:Fb},eB=Qe({opSnippet:"return 1.0 / x;"}),tB={kernelName:Po,backendName:"webgl",kernelFunc:eB},sB=Qe({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),rB={kernelName:Lo,backendName:"webgl",kernelFunc:sB},aB=Qe({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iB={kernelName:Mo,backendName:"webgl",kernelFunc:aB};class lB{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,l,u]=t;this.outputShape=[a,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;d=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class uB{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,l,u]=t;this.outputShape=[a,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let d;d=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]},\n          ${c[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,\n                                     ${l}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const hB={kernelName:_i,backendName:"webgl",kernelFunc:function cB(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,u]=i,c=te().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new uB(r.shape,l,u,o,a):new lB(r.shape,l,u,o,a);return e.runWebGLProgram(c,[r],"float32")}};class dB{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,a,i]=t,l=[s&&a>1?r-1:r,s&&i>1?o-1:o],u=[s&&a>1?a-1:a,s&&i>1?i-1:i],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=2*Math.ceil(d)+2,m=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const fB={kernelName:sc,backendName:"webgl",kernelFunc:function pB(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=new dB(o.shape,r.shape,a);return e.runWebGLProgram(i,[o],o.dtype)}};class mB{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,l,u]=t;this.outputShape=[a,e,s,u];const c=[r&&e>1?i-1:i,r&&s>1?l-1:l],h=[r&&e>1?e-1:e,r&&s>1?s-1:s];let p;p=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/h[0]},\n          ${c[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const yB={kernelName:$i,backendName:"webgl",kernelFunc:function gB(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,u]=i,c=new mB(r.shape,l,u,o,a);return e.runWebGLProgram(c,[r],r.dtype)}};class xB{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,a,i]=t,l=[s&&a>1?r-1:r,s&&i>1?o-1:o],u=[s&&a>1?a-1:a,s&&i>1?i-1:i],c=l[0]/u[0],h=l[1]/u[1],d=1/c,p=1/h,f=2*Math.ceil(d)+2,m=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${l[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${l[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${s} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${o}) - 1),\n                ${s} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const wB={kernelName:nc,backendName:"webgl",kernelFunc:function bB(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=new xB(o.shape,r.shape,a);return e.runWebGLProgram(i,[o],o.dtype)}};class vB{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,1===s)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const o=t.map((i,l)=>(i=>-1!==e.indexOf(i)&&1!==t[i]?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`)(l)).join(","),a=ct(s);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}class NB{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=on("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=ct(s);function d(f){const m=t.map((x,C)=>function p(f,m){return-1!==e.indexOf(f)&&1!==t[f]?`${t[f]} - ${m[f]} - 1`:`${m[f]}`}(C,f));return`getChannel(getX(${m.join(",")}), vec2(${m.slice(-2).join(",")}))`}this.userCode=1===s?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${o}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function l(f){return d(f)}(r.slice())};\n          if(${o}){\n            result.g = ${function u(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}(r.slice())};\n            if(${o}) {\n              result.a = ${function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const kB={kernelName:Ei,backendName:"webgl",kernelFunc:function CB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s,a=r.shape.length,i=$e(o,r.shape);if(0===a)return pn({inputs:{x:r},backend:e});const l=te().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NB(r.shape,i):new vB(r.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}};class IB{constructor(t,e,s,r){this.variableNames=["Image"],this.outputShape=[];const o=t[1],a=t[2],i=Math.sin(e).toFixed(3),l=Math.cos(e).toFixed(3);this.outputShape=t;const[u,c]=Sh(r,o,a),h=u.toFixed(3),d=c.toFixed(3);let p="";p="number"==typeof s?`float outputValue = ${s.toFixed(2)};`:`\n        vec3 fill = vec3(${s.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${h}) * ${l} - (float(y) - ${d}) * ${i};\n          float coordYFloat = (float(x) - ${h}) * ${i} + (float(y) - ${d}) * ${l};\n          int coordX = int(round(coordXFloat + ${h}));\n          int coordY = int(round(coordYFloat + ${d}));\n          ${p}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${o}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const SB={kernelName:lc,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=t,i=e,l=new IB(s.shape,r,o,a);return i.runWebGLProgram(l,[s],s.dtype)}},TB=Qe({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),$B={kernelName:zo,backendName:"webgl",kernelFunc:TB},_B=Qe({opSnippet:"return inversesqrt(x);",cpuKernelImpl:tP}),EB={kernelName:Vo,backendName:"webgl",kernelFunc:_B};class Pb{constructor(t,e,s,r,o,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=ct(o.length),u=ct(a.length);let c="";1===s?c="i":2===s&&(c="i, j");let d="";1===r?d="i":2===r&&(d="i, coords[1]"),this.userCode=`\n        ${l} strides = ${l}(${o});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(getIndices(${c}));\n              flattenedIndex += index * ${e>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${d});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const AB={kernelName:Mp,backendName:"webgl",kernelFunc:function DB(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:a}=s,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=fa(0,r,a),d=[h/u,u];if(0===h)return e.makeTensorInfo(a,r.dtype);const p=ve({inputs:{x:r},backend:e,attrs:{shape:[l,i]}}),f=ve({inputs:{x:o},backend:e,attrs:{shape:[l,u]}}),m=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new Pb(l,i,p.shape.length,f.shape.length,c,d),y=e.runWebGLProgram(g,[f,p,m],f.dtype),x=ve({inputs:{x:y},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(m),x}};class RB{constructor(t,e,s){let r,o;if(this.variableNames=["c","a","b"],this.outputShape=e,s>4)throw Error(`Where for rank ${s} is not yet supported`);if(1===s)o="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${i[c]}`),c<t&&l.push(`${i[c]}`);r=l.join(),o=u.join()}const a=ct(s);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${o}));\n        } else {\n          setOutput(getB(${o}));\n        }\n      }\n    `}}const FB={kernelName:Di,backendName:"webgl",kernelFunc:function OB(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t,a=new RB(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(a,[s,r,o],fn(r.dtype,o.dtype))}},LB=Qe({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Nl};\n  float scale = ${Cl};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),MB={kernelName:Bo,backendName:"webgl",kernelFunc:LB},zB=Qe({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),VB={kernelName:Ho,backendName:"webgl",kernelFunc:zB},BB=Qe({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),WB={kernelName:Uo,backendName:"webgl",kernelFunc:BB},UB=Qe({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),HB={kernelName:Wo,backendName:"webgl",kernelFunc:UB},jB=Qe({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),KB={kernelName:Go,backendName:"webgl",kernelFunc:jB},qB=Qe({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),XB={kernelName:jo,backendName:"webgl",kernelFunc:qB},ZB={kernelName:Oi,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s;k(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((y,x)=>y*x),l=[[0,0]];l.push(...a);for(let y=1+o.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=Ob({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),h=ha(c.shape,o,i,!1),d=da(h.length,o.length,!1),p=pa(c.shape,o,i,!1),f=ve({inputs:{x:c},backend:e,attrs:{shape:h}}),m=ln({inputs:{x:f},backend:e,attrs:{perm:d}}),g=ve({inputs:{x:m},backend:e,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach(y=>e.disposeIntermediateTensorInfo(y)),g}},JB={kernelName:zp,backendName:"webgl",kernelFunc:function YB(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=fa(0,r,i),p=new Pb(u,l,r.shape.length,o.shape.length,c,[h,1],!1),f=e.runWebGLProgram(p,[o,r,a],o.dtype),m=ve({inputs:{x:f},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(f),m}},eW={kernelName:Fi,backendName:"webgl",kernelFunc:function QB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=s,i=$e(a,r.shape)[0],l=Lh(r,o,i),c=new Array(r.shape.length).fill(0),h=r.shape.slice();return l.map(d=>{const p=[...h];p[i]=d;const f=La({inputs:{x:r},backend:e,attrs:{begin:c,size:p}});return c[i]+=d,f})}},tW=Qe({opSnippet:"return sqrt(x);"}),nW={kernelName:Ko,backendName:"webgl",kernelFunc:tW},rW={kernelName:rc,backendName:"webgl",kernelFunc:Qe({opSnippet:"return x * x;"})},Lb="return (a - b) * (a - b);",oW=Zt({opSnippet:Lb,packedOpSnippet:Lb}),aW={kernelName:qo,backendName:"webgl",kernelFunc:oW},lW={kernelName:Qo,backendName:"webgl",kernelFunc:function iW({inputs:n,attrs:t,backend:e}){const{x:s}=n,o=new Os(s.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return e.runWebGLProgram(o,[s],s.dtype)}};class uW{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=ct(s.length),a=ct(s.length);let i="";if(1===r)i="coords * strides + begin";else{let l=0;i=s.map((u,c)=>(l++,1===s.length?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`\n      ${o} begin = ${o}(${t});\n      ${o} strides = ${o}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const hW={kernelName:oc,backendName:"webgl",kernelFunc:function cW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:x}=Fc(r.shape,o,a,i,l,u,c,h,d),C=ve({inputs:{x:r},backend:e,attrs:{shape:y}});let w;if(p){const S=La({inputs:{x:C},backend:e,attrs:{begin:f,size:g}});w=ve({inputs:{x:S},backend:e,attrs:{shape:x}}),e.disposeIntermediateTensorInfo(S)}else if(x.some(S=>0===S))w=e.makeTensorInfo(x,r.dtype,[]);else if(e.shouldExecuteOnCPU([C])){const E=e.texData.get(C.dataId).values,R=Ke(C.shape,C.dtype,E),z=sP(x,R,m,f);w=e.makeTensorInfo(x,C.dtype,z.values)}else{const I=new uW(f,m,x);w=e.runWebGLProgram(I,[C],C.dtype)}const N=ve({inputs:{x:w},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(w),N}},dW=Qe({opSnippet:"return tan(x);"}),pW={kernelName:Zo,backendName:"webgl",kernelFunc:dW},fW=Qe({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),mW={kernelName:Yo,backendName:"webgl",kernelFunc:fW};class gW{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let a=0;a<s.length;a++)s[a]=t[a]*e[a];this.outputShape=s,this.rank=s.length;const r=ct(this.rank),o=function yW(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${e[r]}, ${n[r]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}function Mb(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;if("string"===r.dtype){const u=e.readSync(r.dataId).map(d=>fr(d)),c=Ke(r.shape,r.dtype,u),h=oP(c,o);return e.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new gW(r.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const xW={kernelName:Jo,backendName:"webgl",kernelFunc:Mb},wW={kernelName:ac,backendName:"webgl",kernelFunc:function bW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:a}=s,i=e.readSync(r.dataId),[l,u]=aP(i,r.shape,r.dtype,o,a);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}},NW={kernelName:ic,backendName:"webgl",kernelFunc:function vW(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;Ra(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(o.dataId),{outputValues:i,outputShape:l,indices:u}=iP(a,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}},kW={kernelName:Mi,backendName:"webgl",kernelFunc:function CW(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r,i=a.shape.length,l=r.shape[o],u=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==o&&(u[c++]=a.shape[m]);const h=[],d=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){d[o]=m;const g=La({inputs:{x:a},backend:e,attrs:{begin:d,size:p}}),y=ve({inputs:{x:g},backend:e,attrs:{shape:u}});f[m]=y,h.push(g)}return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}};class IW{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,o=t.inSize,a=t.numSegments,i=a*Math.ceil(o/s);this.outputShape=[r,i];const c=4*Math.floor(s/4),h=s%4,d="\n        sumValue += dot(values, segFilter);\n    ";let p="";o%s>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `);let f="";o%s>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${f}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${s}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${d}\n        } else if (${2===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${d}\n        } else if (${3===h}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${d}\n        }\n        setOutput(sumValue);\n      }\n    `}}const $W=[zV,BV,oL,iL,cL,pL,mL,xL,wL,NL,SL,$L,DL,OL,BL,LL,UL,qL,jL,JL,eM,nM,oM,hM,pM,xM,wM,kM,TM,VP,DM,BM,GM,FM,KM,XM,HM,JM,ez,nz,rz,az,uz,mz,yz,hz,wz,Cz,Iz,$z,Ez,Rz,Oz,Fz,Lz,zz,Bz,Gz,Hz,Kz,Zz,Qz,tV,rV,lV,cV,dV,zP,fV,EM,gV,xV,wV,WP,NV,kV,SV,EV,$V,AV,OV,PV,GV,YV,XV,t3,s3,o3,KV,i3,u3,p3,g3,w3,S3,KP,$3,D3,O3,L3,fM,z3,B3,G3,j3,Z3,UP,J3,Q3,mM,N3,tB,iB,rB,XP,hB,fB,yB,wB,kB,SB,$B,EB,AB,FB,MB,VB,WB,HB,KB,cM,k3,XB,ZB,JB,eW,nW,rW,aW,lW,hW,C3,nL,pW,mW,xW,wW,sL,NW,kW,{kernelName:zi,backendName:"webgl",kernelFunc:function SW(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:a}=s,i=r.shape.length,l=[];let u=0;const c=_t([u],i);let h=r;null!=c&&(h=ln({inputs:{x:r},backend:e,attrs:{perm:c}}),l.push(h),u=Rt(1,i)[0]);const d=dm(h.shape,u,a),p=U([h.shape[u]]),f=ve({inputs:{x:h},backend:e,attrs:{shape:[-1,p]}});l.push(f);const m=pc(r.dtype),g=(w,N,S,I,E)=>{const R=w.shape[0],z=w.shape[1],K=hm(z,E),Y=new IW({windowSize:K,inSize:z,batchSize:R,numSegments:E},N),Q=e.compileAndRun(Y,[w,S],I);if(l.push(Q),Q.shape[1]===E)return Q;const Z=Fb({backend:e,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),X=Mb({inputs:{x:Z},backend:e,attrs:{reps:[z/K]}});return l.push(Z),l.push(X),g(Q,N,X,I,E)},x=ve({inputs:{x:g(f,"unsortedSegmentSum",o,m,a)},backend:e,attrs:{shape:d}});let C=x;if(null!=c){l.push(x);const w=Sr(c);C=ln({inputs:{x:C},backend:e,attrs:{perm:w}})}return l.forEach(w=>e.disposeIntermediateTensorInfo(w)),C}},V3];for(const n of $W)cc(n);var zb=B(591),Vb=B(86926),xp=B(24850),Bb=B(75778),Wb=B(75965),EW=B(54242),ht=B(94650),DW=B(34904),AW=B(27606),RW=B(50878);const OW=["canvas"],bu=(n,t,e,s,r)=>(n-t)*(r-s)/(e-t)+s,FW=[{path:"",component:(()=>{class n extends EW.H{constructor(e,s,r){super(s),this.canvasDraw=r,this.modelSubject=new zb.X({a:NaN,b:NaN}),this.model$=this.modelSubject.pipe((0,Vb.e)(1e3),(0,xp.U)(({a:o,b:a})=>({a:o.toFixed(3),b:a.toFixed(3)})),(0,xp.U)(({a:o,b:a})=>`Y = ${o}X + ${a}`),(0,Bb.x)()),this.costSubject=new zb.X(NaN),this.cost$=this.costSubject.pipe((0,Vb.e)(1e3),(0,xp.U)(o=>o.toFixed(3)),(0,Bb.x)()),this.xs=[],this.ys=[],this._a=sh(Oe(Math.random())),this._b=sh(Oe(Math.random())),e.setTitle("Linear Regression with TensorFlow")}get a(){return this._a.dataSync()[0]}get b(){return this._b.dataSync()[0]}get Ys(){return this.ys}ngOnInit(){this.canvas=this.canvasRef.nativeElement,this.canvasDraw.setCanvas(this.canvas)}onMouseClick(e){var s=this;return(0,A.Z)(function*(){const r=s.normalizeX(e.offsetX),o=s.normalizeY(e.offsetY);s.canvasDraw.setPointOnCanvas(s.denormalizeX(r),s.denormalizeY(o),255,0,0,255),s.xs.push(r),s.ys.push(o),yield s.train(75),yield s.updateCanvas()})()}predict(e){return H(()=>this._a.mul(Sn(e)).add(this._b))}normalizeX(e){return bu(e,0,this.canvas.clientWidth,0,1)}denormalizeX(e){return bu(e,0,1,0,this.canvas.clientWidth)}normalizeY(e){return bu(e,0,this.canvas.clientHeight,1,0)}denormalizeY(e){return bu(e,0,1,this.canvas.clientHeight,0)}drawPredictions(e,s){return new Promise(r=>{for(let o=0;o<e.length;o++)this.canvasDraw.setPointOnCanvas(e[o],s[o],255,0,0,255);r()})}drawPoint(){for(let e=0;e<this.xs.length;e++){const s=this.denormalizeX(this.xs[e]),r=this.denormalizeY(this.ys[e]);this.canvasDraw.setPointOnCanvas(s,r,255,0,0,255)}}updateCanvas(){var e=this;return(0,A.Z)(function*(){e.canvasDraw.cleanCanvas(),e.drawPoint();const s=Array.from(Array(e.canvas.clientWidth).keys()).filter(o=>o%2==0),r=e.predict(s.map(e.normalizeX,e)).dataSync().map(e.denormalizeY,e);yield e.drawPredictions(s,r)})()}train(e=50){var s=this;return(0,A.Z)(function*(){const o=Ys.sgd(.5);s._a.assign(Oe(Math.random())),s._b.assign(Oe(Math.random()));for(let a=0;a<e;a++)o.minimize(()=>{const i=Sn(s.ys),l=s.predict(s.xs),u=OC.meanSquaredError(i,l);return s.costSubject.next(u.dataSync()[0]),s.modelSubject.next({a:s._a.dataSync()[0],b:s._b.dataSync()[0]}),u}),yield wl()})()}}return n.\u0275fac=function(e){return new(e||n)(ht.Y36(DW.y),ht.Y36(Wb.O),ht.Y36(AW.X))},n.\u0275cmp=ht.Xpm({type:n,selectors:[["app-tfjs-linear-regression"]],viewQuery:function(e,s){if(1&e&&ht.Gf(OW,7),2&e){let r;ht.iGM(r=ht.CRH())&&(s.canvasRef=r.first)}},features:[ht._Bn([Wb.O]),ht.qOj],decls:12,vars:6,consts:[[1,"markdown-container"],["src","assets/blogs/tf-linear-regression.md"],["content",""],[3,"click"],["canvas",""]],template:function(e,s){1&e&&(ht.TgZ(0,"div",0),ht._UZ(1,"app-remarkable",1),ht.qZA(),ht.TgZ(2,"div")(3,"app-remarkable")(4,"pre",null,2),ht._uU(6),ht.ALo(7,"async"),ht.ALo(8,"async"),ht.qZA()()(),ht.TgZ(9,"div")(10,"canvas",3,4),ht.NdJ("click",function(o){return s.onMouseClick(o)}),ht.qZA()()),2&e&&(ht.xp6(6),ht.AsE("$model: ",ht.lcZ(7,2,s.model$),"$\n$cost = ",ht.lcZ(8,4,s.cost$),"$\n    "))},dependencies:[RW.L,ye.Ov],styles:[".markdown-container[_ngcontent-%COMP%]{padding:2em}canvas[_ngcontent-%COMP%]{width:400px;height:400px;border:black solid}div.fixed-height[_ngcontent-%COMP%]{height:25px}"],changeDetection:0}),n})()}];let PW=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=ht.oAB({type:n}),n.\u0275inj=ht.cJS({imports:[be.Bz.forChild(FW),be.Bz]}),n})();var LW=B(48428);let MW=(()=>{class n{}return n.\u0275fac=function(e){return new(e||n)},n.\u0275mod=ht.oAB({type:n}),n.\u0275inj=ht.cJS({imports:[ye.ez,PW,LW.k]}),n})()},60537:(ae,we,B)=>{var ie=B(32123),We=B(5786),q=B(71516),ze=B(15868),ye=B(25902),be=B(17576),A=B(43390);A.alea=ie,A.xor128=We,A.xorwow=q,A.xorshift7=ze,A.xor4096=ye,A.tychei=be,ae.exports=A},32123:function(ae,we,B){var ie;!function(We,q,ze){function ye(v){var _=this,D=function P(){var v=4022871197;return function(D){D=D.toString();for(var b=0;b<D.length;b++){var $=.02519603282416938*(v+=D.charCodeAt(b));$-=v=$>>>0,v=($*=v)>>>0,v+=4294967296*($-=v)}return 2.3283064365386963e-10*(v>>>0)}}();_.next=function(){var b=2091639*_.s0+2.3283064365386963e-10*_.c;return _.s0=_.s1,_.s1=_.s2,_.s2=b-(_.c=0|b)},_.c=1,_.s0=D(" "),_.s1=D(" "),_.s2=D(" "),_.s0-=D(v),_.s0<0&&(_.s0+=1),_.s1-=D(v),_.s1<0&&(_.s1+=1),_.s2-=D(v),_.s2<0&&(_.s2+=1),D=null}function be(v,_){return _.c=v.c,_.s0=v.s0,_.s1=v.s1,_.s2=v.s2,_}function A(v,_){var D=new ye(v),b=_&&_.state,$=D.next;return $.int32=function(){return 4294967296*D.next()|0},$.double=function(){return $()+11102230246251565e-32*(2097152*$()|0)},$.quick=$,b&&("object"==typeof b&&be(b,D),$.state=function(){return be(D,{})}),$}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.alea=A}(0,ae=B.nmd(ae))},17576:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this,_="";v.next=function(){var b=v.b,$=v.c,M=v.d,G=v.a;return b=b<<25^b>>>7^$,$=$-M|0,M=M<<24^M>>>8^G,G=G-b|0,v.b=b=b<<20^b>>>12^$,v.c=$=$-M|0,v.d=M<<16^$>>>16^G,v.a=G-b|0},v.a=0,v.b=0,v.c=-1640531527,v.d=1367130551,P===Math.floor(P)?(v.a=P/4294967296|0,v.b=0|P):_+=P;for(var D=0;D<_.length+20;D++)v.b^=0|_.charCodeAt(D),v.next()}function be(P,v){return v.a=P.a,v.b=P.b,v.c=P.c,v.d=P.d,v}function A(P,v){var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&("object"==typeof D&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.tychei=A}(0,ae=B.nmd(ae))},5786:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this,_="";v.x=0,v.y=0,v.z=0,v.w=0,v.next=function(){var b=v.x^v.x<<11;return v.x=v.y,v.y=v.z,v.z=v.w,v.w^=v.w>>>19^b^b>>>8},P===(0|P)?v.x=P:_+=P;for(var D=0;D<_.length+64;D++)v.x^=0|_.charCodeAt(D),v.next()}function be(P,v){return v.x=P.x,v.y=P.y,v.z=P.z,v.w=P.w,v}function A(P,v){var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&("object"==typeof D&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xor128=A}(0,ae=B.nmd(ae))},25902:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this;v.next=function(){var M,G,D=v.w,b=v.X,$=v.i;return v.w=D=D+1640531527|0,G=b[$+34&127],M=b[$=$+1&127],G^=G<<13,M^=M<<17,G=b[$]=(G^=G>>>15)^(M^=M>>>12),v.i=$,G+(D^D>>>16)|0},function _(D,b){var $,M,G,Be,dt,et=[],k=128;for(b===(0|b)?(M=b,b=null):(b+="\0",M=0,k=Math.max(k,b.length)),G=0,Be=-32;Be<k;++Be)b&&(M^=b.charCodeAt((Be+32)%b.length)),0===Be&&(dt=M),M^=M<<10,M^=M>>>15,M^=M<<4,M^=M>>>13,Be>=0&&(G=0==($=et[127&Be]^=M+(dt=dt+1640531527|0))?G+1:0);for(G>=128&&(et[127&(b&&b.length||0)]=-1),G=127,Be=512;Be>0;--Be)M=et[G+34&127],$=et[G=G+1&127],M^=M<<13,$^=$<<17,et[G]=(M^=M>>>15)^($^=$>>>12);D.w=dt,D.X=et,D.i=G}(v,P)}function be(P,v){return v.i=P.i,v.w=P.w,v.X=P.X.slice(),v}function A(P,v){null==P&&(P=+new Date);var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&(D.X&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xor4096=A}(0,ae=B.nmd(ae))},15868:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this;v.next=function(){var $,M,D=v.x,b=v.i;return $=D[b],M=($^=$>>>7)^$<<24,M^=($=D[b+1&7])^$>>>10,M^=($=D[b+3&7])^$>>>3,M^=($=D[b+4&7])^$<<7,$=D[b+7&7],D[b]=M^=($^=$<<13)^$<<9,v.i=b+1&7,M},function _(D,b){var $,G=[];if(b===(0|b))G[0]=b;else for(b=""+b,$=0;$<b.length;++$)G[7&$]=G[7&$]<<15^b.charCodeAt($)+G[$+1&7]<<13;for(;G.length<8;)G.push(0);for($=0;$<8&&0===G[$];++$);for(8==$&&(G[7]=-1),D.x=G,D.i=0,$=256;$>0;--$)D.next()}(v,P)}function be(P,v){return v.x=P.x.slice(),v.i=P.i,v}function A(P,v){null==P&&(P=+new Date);var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&(D.x&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xorshift7=A}(0,ae=B.nmd(ae))},71516:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this,_="";v.next=function(){var b=v.x^v.x>>>2;return v.x=v.y,v.y=v.z,v.z=v.w,v.w=v.v,(v.d=v.d+362437|0)+(v.v=v.v^v.v<<4^b^b<<1)|0},v.x=0,v.y=0,v.z=0,v.w=0,v.v=0,P===(0|P)?v.x=P:_+=P;for(var D=0;D<_.length+64;D++)v.x^=0|_.charCodeAt(D),D==_.length&&(v.d=v.x<<10^v.x>>>4),v.next()}function be(P,v){return v.x=P.x,v.y=P.y,v.z=P.z,v.w=P.w,v.v=P.v,v.d=P.d,v}function A(P,v){var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&("object"==typeof D&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xorwow=A}(0,ae=B.nmd(ae))},43390:(ae,we,B)=>{var ie;!function(We,q){var $,ze=this,ye=256,P="random",v=q.pow(ye,6),_=q.pow(2,52),D=2*_,b=255;function M(ue,ce,U){var _e=[],he=et(dt((ce=1==ce?{entropy:!0}:ce||{}).entropy?[ue,Le(We)]:ue??function k(){try{var ue;return $&&(ue=$.randomBytes)?ue=ue(ye):(ue=new Uint8Array(ye),(ze.crypto||ze.msCrypto).getRandomValues(ue)),Le(ue)}catch{var ce=ze.navigator,U=ce&&ce.plugins;return[+new Date,ze,U,ze.screen,Le(We)]}}(),3),_e),Te=new G(_e),Ze=function(){for(var Ge=Te.g(6),nt=v,He=0;Ge<_;)Ge=(Ge+He)*ye,nt*=ye,He=Te.g(1);for(;Ge>=D;)Ge/=2,nt/=2,He>>>=1;return(Ge+He)/nt};return Ze.int32=function(){return 0|Te.g(4)},Ze.quick=function(){return Te.g(4)/4294967296},Ze.double=Ze,et(Le(Te.S),We),(ce.pass||U||function(Ge,nt,He,ot){return ot&&(ot.S&&Be(ot,Te),Ge.state=function(){return Be(Te,{})}),He?(q[P]=Ge,nt):Ge})(Ze,he,"global"in ce?ce.global:this==q,ce.state)}function G(ue){var ce,U=ue.length,_e=this,he=0,Te=_e.i=_e.j=0,Ze=_e.S=[];for(U||(ue=[U++]);he<ye;)Ze[he]=he++;for(he=0;he<ye;he++)Ze[he]=Ze[Te=b&Te+ue[he%U]+(ce=Ze[he])],Ze[Te]=ce;(_e.g=function(Ge){for(var nt,He=0,ot=_e.i,Jt=_e.j,$e=_e.S;Ge--;)nt=$e[ot=b&ot+1],He=He*ye+$e[b&($e[ot]=$e[Jt=b&Jt+nt])+($e[Jt]=nt)];return _e.i=ot,_e.j=Jt,He})(ye)}function Be(ue,ce){return ce.i=ue.i,ce.j=ue.j,ce.S=ue.S.slice(),ce}function dt(ue,ce){var he,U=[],_e=typeof ue;if(ce&&"object"==_e)for(he in ue)try{U.push(dt(ue[he],ce-1))}catch{}return U.length?U:"string"==_e?ue:ue+"\0"}function et(ue,ce){for(var _e,U=ue+"",he=0;he<U.length;)ce[b&he]=b&(_e^=19*ce[b&he])+U.charCodeAt(he++);return Le(ce)}function Le(ue){return String.fromCharCode.apply(0,ue)}if(q["seed"+P]=M,et(q.random(),We),ae.exports){ae.exports=M;try{$=B(50914)}catch{}}else void 0!==(ie=function(){return M}.call(we,B,we,ae))&&(ae.exports=ie)}([],Math)},94349:(ae,we,B)=>{var ie=B(88300),We=B(8650),q=B(96100),ze=B(75069),ye=B(12120),be=B(89703),A=B(53097);A.alea=ie,A.xor128=We,A.xorwow=q,A.xorshift7=ze,A.xor4096=ye,A.tychei=be,ae.exports=A},88300:function(ae,we,B){var ie;!function(We,q,ze){function ye(v){var _=this,D=function P(){var v=4022871197;return function(D){D=D.toString();for(var b=0;b<D.length;b++){var $=.02519603282416938*(v+=D.charCodeAt(b));$-=v=$>>>0,v=($*=v)>>>0,v+=4294967296*($-=v)}return 2.3283064365386963e-10*(v>>>0)}}();_.next=function(){var b=2091639*_.s0+2.3283064365386963e-10*_.c;return _.s0=_.s1,_.s1=_.s2,_.s2=b-(_.c=0|b)},_.c=1,_.s0=D(" "),_.s1=D(" "),_.s2=D(" "),_.s0-=D(v),_.s0<0&&(_.s0+=1),_.s1-=D(v),_.s1<0&&(_.s1+=1),_.s2-=D(v),_.s2<0&&(_.s2+=1),D=null}function be(v,_){return _.c=v.c,_.s0=v.s0,_.s1=v.s1,_.s2=v.s2,_}function A(v,_){var D=new ye(v),b=_&&_.state,$=D.next;return $.int32=function(){return 4294967296*D.next()|0},$.double=function(){return $()+11102230246251565e-32*(2097152*$()|0)},$.quick=$,b&&("object"==typeof b&&be(b,D),$.state=function(){return be(D,{})}),$}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.alea=A}(0,ae=B.nmd(ae))},89703:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this,_="";v.next=function(){var b=v.b,$=v.c,M=v.d,G=v.a;return b=b<<25^b>>>7^$,$=$-M|0,M=M<<24^M>>>8^G,G=G-b|0,v.b=b=b<<20^b>>>12^$,v.c=$=$-M|0,v.d=M<<16^$>>>16^G,v.a=G-b|0},v.a=0,v.b=0,v.c=-1640531527,v.d=1367130551,P===Math.floor(P)?(v.a=P/4294967296|0,v.b=0|P):_+=P;for(var D=0;D<_.length+20;D++)v.b^=0|_.charCodeAt(D),v.next()}function be(P,v){return v.a=P.a,v.b=P.b,v.c=P.c,v.d=P.d,v}function A(P,v){var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&("object"==typeof D&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.tychei=A}(0,ae=B.nmd(ae))},8650:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this,_="";v.x=0,v.y=0,v.z=0,v.w=0,v.next=function(){var b=v.x^v.x<<11;return v.x=v.y,v.y=v.z,v.z=v.w,v.w^=v.w>>>19^b^b>>>8},P===(0|P)?v.x=P:_+=P;for(var D=0;D<_.length+64;D++)v.x^=0|_.charCodeAt(D),v.next()}function be(P,v){return v.x=P.x,v.y=P.y,v.z=P.z,v.w=P.w,v}function A(P,v){var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&("object"==typeof D&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xor128=A}(0,ae=B.nmd(ae))},12120:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this;v.next=function(){var M,G,D=v.w,b=v.X,$=v.i;return v.w=D=D+1640531527|0,G=b[$+34&127],M=b[$=$+1&127],G^=G<<13,M^=M<<17,G=b[$]=(G^=G>>>15)^(M^=M>>>12),v.i=$,G+(D^D>>>16)|0},function _(D,b){var $,M,G,Be,dt,et=[],k=128;for(b===(0|b)?(M=b,b=null):(b+="\0",M=0,k=Math.max(k,b.length)),G=0,Be=-32;Be<k;++Be)b&&(M^=b.charCodeAt((Be+32)%b.length)),0===Be&&(dt=M),M^=M<<10,M^=M>>>15,M^=M<<4,M^=M>>>13,Be>=0&&(G=0==($=et[127&Be]^=M+(dt=dt+1640531527|0))?G+1:0);for(G>=128&&(et[127&(b&&b.length||0)]=-1),G=127,Be=512;Be>0;--Be)M=et[G+34&127],$=et[G=G+1&127],M^=M<<13,$^=$<<17,et[G]=(M^=M>>>15)^($^=$>>>12);D.w=dt,D.X=et,D.i=G}(v,P)}function be(P,v){return v.i=P.i,v.w=P.w,v.X=P.X.slice(),v}function A(P,v){null==P&&(P=+new Date);var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&(D.X&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xor4096=A}(0,ae=B.nmd(ae))},75069:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this;v.next=function(){var $,M,D=v.x,b=v.i;return $=D[b],M=($^=$>>>7)^$<<24,M^=($=D[b+1&7])^$>>>10,M^=($=D[b+3&7])^$>>>3,M^=($=D[b+4&7])^$<<7,$=D[b+7&7],D[b]=M^=($^=$<<13)^$<<9,v.i=b+1&7,M},function _(D,b){var $,G=[];if(b===(0|b))G[0]=b;else for(b=""+b,$=0;$<b.length;++$)G[7&$]=G[7&$]<<15^b.charCodeAt($)+G[$+1&7]<<13;for(;G.length<8;)G.push(0);for($=0;$<8&&0===G[$];++$);for(8==$&&(G[7]=-1),D.x=G,D.i=0,$=256;$>0;--$)D.next()}(v,P)}function be(P,v){return v.x=P.x.slice(),v.i=P.i,v}function A(P,v){null==P&&(P=+new Date);var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&(D.x&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xorshift7=A}(0,ae=B.nmd(ae))},96100:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this,_="";v.next=function(){var b=v.x^v.x>>>2;return v.x=v.y,v.y=v.z,v.z=v.w,v.w=v.v,(v.d=v.d+362437|0)+(v.v=v.v^v.v<<4^b^b<<1)|0},v.x=0,v.y=0,v.z=0,v.w=0,v.v=0,P===(0|P)?v.x=P:_+=P;for(var D=0;D<_.length+64;D++)v.x^=0|_.charCodeAt(D),D==_.length&&(v.d=v.x<<10^v.x>>>4),v.next()}function be(P,v){return v.x=P.x,v.y=P.y,v.z=P.z,v.w=P.w,v.v=P.v,v.d=P.d,v}function A(P,v){var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&("object"==typeof D&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xorwow=A}(0,ae=B.nmd(ae))},53097:(ae,we,B)=>{var ie;!function(We,q){var $,ze=this,ye=256,P="random",v=q.pow(ye,6),_=q.pow(2,52),D=2*_,b=255;function M(ue,ce,U){var _e=[],he=et(dt((ce=1==ce?{entropy:!0}:ce||{}).entropy?[ue,Le(We)]:ue??function k(){try{var ue;return $&&(ue=$.randomBytes)?ue=ue(ye):(ue=new Uint8Array(ye),(ze.crypto||ze.msCrypto).getRandomValues(ue)),Le(ue)}catch{var ce=ze.navigator,U=ce&&ce.plugins;return[+new Date,ze,U,ze.screen,Le(We)]}}(),3),_e),Te=new G(_e),Ze=function(){for(var Ge=Te.g(6),nt=v,He=0;Ge<_;)Ge=(Ge+He)*ye,nt*=ye,He=Te.g(1);for(;Ge>=D;)Ge/=2,nt/=2,He>>>=1;return(Ge+He)/nt};return Ze.int32=function(){return 0|Te.g(4)},Ze.quick=function(){return Te.g(4)/4294967296},Ze.double=Ze,et(Le(Te.S),We),(ce.pass||U||function(Ge,nt,He,ot){return ot&&(ot.S&&Be(ot,Te),Ge.state=function(){return Be(Te,{})}),He?(q[P]=Ge,nt):Ge})(Ze,he,"global"in ce?ce.global:this==q,ce.state)}function G(ue){var ce,U=ue.length,_e=this,he=0,Te=_e.i=_e.j=0,Ze=_e.S=[];for(U||(ue=[U++]);he<ye;)Ze[he]=he++;for(he=0;he<ye;he++)Ze[he]=Ze[Te=b&Te+ue[he%U]+(ce=Ze[he])],Ze[Te]=ce;(_e.g=function(Ge){for(var nt,He=0,ot=_e.i,Jt=_e.j,$e=_e.S;Ge--;)nt=$e[ot=b&ot+1],He=He*ye+$e[b&($e[ot]=$e[Jt=b&Jt+nt])+($e[Jt]=nt)];return _e.i=ot,_e.j=Jt,He})(ye)}function Be(ue,ce){return ce.i=ue.i,ce.j=ue.j,ce.S=ue.S.slice(),ce}function dt(ue,ce){var he,U=[],_e=typeof ue;if(ce&&"object"==_e)for(he in ue)try{U.push(dt(ue[he],ce-1))}catch{}return U.length?U:"string"==_e?ue:ue+"\0"}function et(ue,ce){for(var _e,U=ue+"",he=0;he<U.length;)ce[b&he]=b&(_e^=19*ce[b&he])+U.charCodeAt(he++);return Le(ce)}function Le(ue){return String.fromCharCode.apply(0,ue)}if(q["seed"+P]=M,et(q.random(),We),ae.exports){ae.exports=M;try{$=B(55778)}catch{}}else void 0!==(ie=function(){return M}.call(we,B,we,ae))&&(ae.exports=ie)}([],Math)},20340:(ae,we,B)=>{var ie=B(99471),We=B(22992),q=B(7657),ze=B(75583),ye=B(61929),be=B(8083),A=B(93818);A.alea=ie,A.xor128=We,A.xorwow=q,A.xorshift7=ze,A.xor4096=ye,A.tychei=be,ae.exports=A},99471:function(ae,we,B){var ie;!function(We,q,ze){function ye(v){var _=this,D=function P(){var v=4022871197;return function(D){D=D.toString();for(var b=0;b<D.length;b++){var $=.02519603282416938*(v+=D.charCodeAt(b));$-=v=$>>>0,v=($*=v)>>>0,v+=4294967296*($-=v)}return 2.3283064365386963e-10*(v>>>0)}}();_.next=function(){var b=2091639*_.s0+2.3283064365386963e-10*_.c;return _.s0=_.s1,_.s1=_.s2,_.s2=b-(_.c=0|b)},_.c=1,_.s0=D(" "),_.s1=D(" "),_.s2=D(" "),_.s0-=D(v),_.s0<0&&(_.s0+=1),_.s1-=D(v),_.s1<0&&(_.s1+=1),_.s2-=D(v),_.s2<0&&(_.s2+=1),D=null}function be(v,_){return _.c=v.c,_.s0=v.s0,_.s1=v.s1,_.s2=v.s2,_}function A(v,_){var D=new ye(v),b=_&&_.state,$=D.next;return $.int32=function(){return 4294967296*D.next()|0},$.double=function(){return $()+11102230246251565e-32*(2097152*$()|0)},$.quick=$,b&&("object"==typeof b&&be(b,D),$.state=function(){return be(D,{})}),$}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.alea=A}(0,ae=B.nmd(ae))},8083:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this,_="";v.next=function(){var b=v.b,$=v.c,M=v.d,G=v.a;return b=b<<25^b>>>7^$,$=$-M|0,M=M<<24^M>>>8^G,G=G-b|0,v.b=b=b<<20^b>>>12^$,v.c=$=$-M|0,v.d=M<<16^$>>>16^G,v.a=G-b|0},v.a=0,v.b=0,v.c=-1640531527,v.d=1367130551,P===Math.floor(P)?(v.a=P/4294967296|0,v.b=0|P):_+=P;for(var D=0;D<_.length+20;D++)v.b^=0|_.charCodeAt(D),v.next()}function be(P,v){return v.a=P.a,v.b=P.b,v.c=P.c,v.d=P.d,v}function A(P,v){var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&("object"==typeof D&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.tychei=A}(0,ae=B.nmd(ae))},22992:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this,_="";v.x=0,v.y=0,v.z=0,v.w=0,v.next=function(){var b=v.x^v.x<<11;return v.x=v.y,v.y=v.z,v.z=v.w,v.w^=v.w>>>19^b^b>>>8},P===(0|P)?v.x=P:_+=P;for(var D=0;D<_.length+64;D++)v.x^=0|_.charCodeAt(D),v.next()}function be(P,v){return v.x=P.x,v.y=P.y,v.z=P.z,v.w=P.w,v}function A(P,v){var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&("object"==typeof D&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xor128=A}(0,ae=B.nmd(ae))},61929:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this;v.next=function(){var M,G,D=v.w,b=v.X,$=v.i;return v.w=D=D+1640531527|0,G=b[$+34&127],M=b[$=$+1&127],G^=G<<13,M^=M<<17,G=b[$]=(G^=G>>>15)^(M^=M>>>12),v.i=$,G+(D^D>>>16)|0},function _(D,b){var $,M,G,Be,dt,et=[],k=128;for(b===(0|b)?(M=b,b=null):(b+="\0",M=0,k=Math.max(k,b.length)),G=0,Be=-32;Be<k;++Be)b&&(M^=b.charCodeAt((Be+32)%b.length)),0===Be&&(dt=M),M^=M<<10,M^=M>>>15,M^=M<<4,M^=M>>>13,Be>=0&&(G=0==($=et[127&Be]^=M+(dt=dt+1640531527|0))?G+1:0);for(G>=128&&(et[127&(b&&b.length||0)]=-1),G=127,Be=512;Be>0;--Be)M=et[G+34&127],$=et[G=G+1&127],M^=M<<13,$^=$<<17,et[G]=(M^=M>>>15)^($^=$>>>12);D.w=dt,D.X=et,D.i=G}(v,P)}function be(P,v){return v.i=P.i,v.w=P.w,v.X=P.X.slice(),v}function A(P,v){null==P&&(P=+new Date);var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&(D.X&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xor4096=A}(0,ae=B.nmd(ae))},75583:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this;v.next=function(){var $,M,D=v.x,b=v.i;return $=D[b],M=($^=$>>>7)^$<<24,M^=($=D[b+1&7])^$>>>10,M^=($=D[b+3&7])^$>>>3,M^=($=D[b+4&7])^$<<7,$=D[b+7&7],D[b]=M^=($^=$<<13)^$<<9,v.i=b+1&7,M},function _(D,b){var $,G=[];if(b===(0|b))G[0]=b;else for(b=""+b,$=0;$<b.length;++$)G[7&$]=G[7&$]<<15^b.charCodeAt($)+G[$+1&7]<<13;for(;G.length<8;)G.push(0);for($=0;$<8&&0===G[$];++$);for(8==$&&(G[7]=-1),D.x=G,D.i=0,$=256;$>0;--$)D.next()}(v,P)}function be(P,v){return v.x=P.x.slice(),v.i=P.i,v}function A(P,v){null==P&&(P=+new Date);var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&(D.x&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xorshift7=A}(0,ae=B.nmd(ae))},7657:function(ae,we,B){var ie;!function(We,q,ze){function ye(P){var v=this,_="";v.next=function(){var b=v.x^v.x>>>2;return v.x=v.y,v.y=v.z,v.z=v.w,v.w=v.v,(v.d=v.d+362437|0)+(v.v=v.v^v.v<<4^b^b<<1)|0},v.x=0,v.y=0,v.z=0,v.w=0,v.v=0,P===(0|P)?v.x=P:_+=P;for(var D=0;D<_.length+64;D++)v.x^=0|_.charCodeAt(D),D==_.length&&(v.d=v.x<<10^v.x>>>4),v.next()}function be(P,v){return v.x=P.x,v.y=P.y,v.z=P.z,v.w=P.w,v.v=P.v,v.d=P.d,v}function A(P,v){var _=new ye(P),D=v&&v.state,b=function(){return(_.next()>>>0)/4294967296};return b.double=function(){do{var G=((_.next()>>>11)+(_.next()>>>0)/4294967296)/(1<<21)}while(0===G);return G},b.int32=_.next,b.quick=b,D&&("object"==typeof D&&be(D,_),b.state=function(){return be(_,{})}),b}q&&q.exports?q.exports=A:B.amdD&&B.amdO?void 0!==(ie=function(){return A}.call(we,B,we,q))&&(q.exports=ie):this.xorwow=A}(0,ae=B.nmd(ae))},93818:(ae,we,B)=>{var ie;!function(We,q){var $,ze=(0,eval)("this"),ye=256,P="random",v=q.pow(ye,6),_=q.pow(2,52),D=2*_,b=255;function M(ue,ce,U){var _e=[],he=et(dt((ce=1==ce?{entropy:!0}:ce||{}).entropy?[ue,Le(We)]:ue??function k(){try{var ue;return $&&(ue=$.randomBytes)?ue=ue(ye):(ue=new Uint8Array(ye),(ze.crypto||ze.msCrypto).getRandomValues(ue)),Le(ue)}catch{var ce=ze.navigator,U=ce&&ce.plugins;return[+new Date,ze,U,ze.screen,Le(We)]}}(),3),_e),Te=new G(_e),Ze=function(){for(var Ge=Te.g(6),nt=v,He=0;Ge<_;)Ge=(Ge+He)*ye,nt*=ye,He=Te.g(1);for(;Ge>=D;)Ge/=2,nt/=2,He>>>=1;return(Ge+He)/nt};return Ze.int32=function(){return 0|Te.g(4)},Ze.quick=function(){return Te.g(4)/4294967296},Ze.double=Ze,et(Le(Te.S),We),(ce.pass||U||function(Ge,nt,He,ot){return ot&&(ot.S&&Be(ot,Te),Ge.state=function(){return Be(Te,{})}),He?(q[P]=Ge,nt):Ge})(Ze,he,"global"in ce?ce.global:this==q,ce.state)}function G(ue){var ce,U=ue.length,_e=this,he=0,Te=_e.i=_e.j=0,Ze=_e.S=[];for(U||(ue=[U++]);he<ye;)Ze[he]=he++;for(he=0;he<ye;he++)Ze[he]=Ze[Te=b&Te+ue[he%U]+(ce=Ze[he])],Ze[Te]=ce;(_e.g=function(Ge){for(var nt,He=0,ot=_e.i,Jt=_e.j,$e=_e.S;Ge--;)nt=$e[ot=b&ot+1],He=He*ye+$e[b&($e[ot]=$e[Jt=b&Jt+nt])+($e[Jt]=nt)];return _e.i=ot,_e.j=Jt,He})(ye)}function Be(ue,ce){return ce.i=ue.i,ce.j=ue.j,ce.S=ue.S.slice(),ce}function dt(ue,ce){var he,U=[],_e=typeof ue;if(ce&&"object"==_e)for(he in ue)try{U.push(dt(ue[he],ce-1))}catch{}return U.length?U:"string"==_e?ue:ue+"\0"}function et(ue,ce){for(var _e,U=ue+"",he=0;he<U.length;)ce[b&he]=b&(_e^=19*ce[b&he])+U.charCodeAt(he++);return Le(ce)}function Le(ue){return String.fromCharCode.apply(0,ue)}if(q["seed"+P]=M,et(q.random(),We),ae.exports){ae.exports=M;try{$=B(75042)}catch{}}else void 0!==(ie=function(){return M}.call(we,B,we,ae))&&(ae.exports=ie)}([],Math)},50914:()=>{},75410:()=>{},48628:()=>{},55778:()=>{},31601:()=>{},67792:()=>{},75042:()=>{}}]);