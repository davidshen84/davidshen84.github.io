var tc=Math.pow;(self.webpackChunkblog=self.webpackChunkblog||[]).push([[264],{24901:function(t,e,n){var r=n(23366),s=n(79678),i=n(35278),a=n(55457),o=n(27594),l=n(19035),u=n(28507);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,t.exports=u},23366:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n=function(){var t=4022871197;return function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)}}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new a(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0!==(r=(function(){return l}).call(e,n,e,s))&&(s.exports=r):this.alea=l}(0,t=n.nmd(t))},19035:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0!==(r=(function(){return l}).call(e,n,e,s))&&(s.exports=r):this.tychei=l}(0,t=n.nmd(t))},79678:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0!==(r=(function(){return l}).call(e,n,e,s))&&(s.exports=r):this.xor128=l}(0,t=n.nmd(t))},27594:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,i=e.i;return e.w=r=r+1640531527|0,n=s[i+34&127],t=s[i=i+1&127],n^=n<<13,t^=t<<17,n=s[i]=(n^=n>>>15)^(t^=t>>>12),e.i=i,n+(r^r>>>16)|0},function(t,e){var n,r,s,i,a,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,i=-32;i<l;++i)e&&(r^=e.charCodeAt((i+32)%e.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=0==(n=o[127&i]^=r+(a=a+1640531527|0))?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,o[s]=(r^=r>>>15)^(n^=n>>>12);t.w=a,t.X=o,t.i=s}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0!==(r=(function(){return l}).call(e,n,e,s))&&(s.exports=r):this.xor4096=l}(0,t=n.nmd(t))},55457:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],r[s]=n^=(t^=t<<13)^t<<9,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0!==(r=(function(){return l}).call(e,n,e,s))&&(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t))},35278:function(t,e,n){var r;!function(t,s,i){function a(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new a(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0!==(r=(function(){return l}).call(e,n,e,s))&&(s.exports=r):this.xorwow=l}(0,t=n.nmd(t))},28507:function(t,e,n){var r;!function(s,i){var a,o=this,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(t,e,n){var r=[],d=b(m((e=1==e?{entropy:!0}:e||{}).entropy?[t,y(s)]:null==t?function(){try{var t;return a&&(t=a.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),y(t)}catch(r){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,y(s)]}}():t,3),r),p=new f(r),x=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&g(r,p),t.state=function(){return g(p,{})}),n?(i.random=t,e):t})(x,d,"global"in e?e.global:this==i,e.state)}function f(t){var e,n=t.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(t=[n++]);s<l;)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=d&i+t[s%n]+(e=a[s])],a[i]=e;(r.g=function(t){for(var e,n=0,s=r.i,i=r.j,a=r.S;t--;)e=a[s=d&s+1],n=n*l+a[d&(a[s]=a[i=d&i+e])+(a[i]=e)];return r.i=s,r.j=i,n})(l)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function m(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(m(t[n],e-1))}catch(i){}return r.length?r:"string"==s?t:t+"\0"}function b(t,e){for(var n,r=t+"",s=0;s<r.length;)e[d&s]=d&(n^=19*e[d&s])+r.charCodeAt(s++);return y(e)}function y(t){return String.fromCharCode.apply(0,t)}if(i.seedrandom=p,b(i.random(),s),t.exports){t.exports=p;try{a=n(75042)}catch(x){}}else void 0!==(r=(function(){return p}).call(e,n,e,t))&&(t.exports=r)}([],Math)},94264:function(t,e,n){"use strict";n.r(e),n.d(e,{TfjsModule:function(){return Wb}});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:function(){return ao},computeOutShape:function(){return io},segOpComputeOptimalWindowSize:function(){return so}});var s={};n.r(s),n.d(s,{fft:function(){return jo},ifft:function(){return Ko},irfft:function(){return Yo},rfft:function(){return Xo}});var i={};n.r(i),n.d(i,{frame:function(){return rl},hammingWindow:function(){return nl},hannWindow:function(){return el},stft:function(){return sl}});var a={};n.r(a),n.d(a,{Reduction:function(){return ol},absoluteDifference:function(){return ll},computeWeightedLoss:function(){return ul},cosineDistance:function(){return cl},hingeLoss:function(){return hl},huberLoss:function(){return dl},logLoss:function(){return pl},meanSquaredError:function(){return fl},sigmoidCrossEntropy:function(){return gl},softmaxCrossEntropy:function(){return ml}});var o={};n.r(o),n.d(o,{bandPart:function(){return yl},gramSchmidt:function(){return xl},qr:function(){return vl}});var l={};n.r(l),n.d(l,{cropAndResize:function(){return zl},nonMaxSuppression:function(){return Nl},nonMaxSuppressionAsync:function(){return Ol},nonMaxSuppressionWithScore:function(){return Ml},nonMaxSuppressionWithScoreAsync:function(){return Ll},resizeBilinear:function(){return Fl},resizeNearestNeighbor:function(){return _l}});var u={};n.r(u),n.d(u,{conv2d:function(){return Gl},depthwiseConv2d:function(){return Hl},matMul:function(){return Vl}});var c={};n.r(c),n.d(c,{abs:function(){return An},acos:function(){return Nn},acosh:function(){return Tn},add:function(){return Ie},addN:function(){return Yi},addStrict:function(){return Io},all:function(){return yn},any:function(){return xn},argMax:function(){return vn},argMin:function(){return wn},asin:function(){return Dn},asinh:function(){return Fn},atan:function(){return _n},atan2:function(){return Ji},atanh:function(){return On},avgPool:function(){return Zi},avgPool3d:function(){return Qi},basicLSTMCell:function(){return zo},batchNorm:function(){return ea},batchNorm2d:function(){return na},batchNorm3d:function(){return ra},batchNorm4d:function(){return sa},batchToSpaceND:function(){return _s},booleanMaskAsync:function(){return po},broadcastTo:function(){return aa},buffer:function(){return Xe},cast:function(){return Je},ceil:function(){return Mn},clipByValue:function(){return Ln},clone:function(){return ia},complex:function(){return Re},concat:function(){return je},concat1d:function(){return oa},concat2d:function(){return la},concat3d:function(){return ua},concat4d:function(){return ca},conv1d:function(){return ha},conv2d:function(){return Mr},conv2dTranspose:function(){return da},conv3d:function(){return pa},conv3dTranspose:function(){return fa},cos:function(){return zn},cosh:function(){return Bn},cumsum:function(){return Ur},depthToSpace:function(){return ga},depthwiseConv2d:function(){return ma},diag:function(){return ba},div:function(){return an},divNoNan:function(){return ya},divStrict:function(){return So},dot:function(){return xa},dropout:function(){return Qo},elu:function(){return va},equal:function(){return wa},equalStrict:function(){return xo},erf:function(){return Pn},exp:function(){return Wn},expandDims:function(){return Ze},expm1:function(){return Un},eye:function(){return $a},fft:function(){return jo},fill:function(){return Ca},floor:function(){return Vn},floorDiv:function(){return sn},frame:function(){return rl},fused:function(){return u},gather:function(){return uo},gatherND:function(){return Zo},greater:function(){return hs},greaterEqual:function(){return ss},greaterEqualStrict:function(){return vo},greaterStrict:function(){return wo},hammingWindow:function(){return nl},hannWindow:function(){return el},ifft:function(){return Ko},imag:function(){return Ae},image:function(){return l},inTopKAsync:function(){return al},irfft:function(){return Yo},isFinite:function(){return er},isInf:function(){return tr},isNaN:function(){return Qn},leakyRelu:function(){return Ia},less:function(){return is},lessEqual:function(){return ds},lessEqualStrict:function(){return $o},lessStrict:function(){return Co},linalg:function(){return o},linspace:function(){return Ve},localResponseNormalization:function(){return Sa},log:function(){return Gn},log1p:function(){return Hn},logSigmoid:function(){return qn},logSoftmax:function(){return Oo},logSumExp:function(){return $n},logicalAnd:function(){return vs},logicalNot:function(){return ws},logicalOr:function(){return $s},logicalXor:function(){return Cs},losses:function(){return a},matMul:function(){return Sr},max:function(){return Ea},maxPool:function(){return Ra},maxPool3d:function(){return Aa},maxPoolWithArgmax:function(){return Na},maximum:function(){return ka},maximumStrict:function(){return Eo},mean:function(){return Cn},min:function(){return kn},minimum:function(){return Ta},minimumStrict:function(){return Ro},mod:function(){return Da},modStrict:function(){return Ao},moments:function(){return In},movingAverage:function(){return Po},mul:function(){return on},mulStrict:function(){return No},multiRNNCell:function(){return Bo},multinomial:function(){return Fa},neg:function(){return jn},norm:function(){return Lo},notEqual:function(){return _a},notEqualStrict:function(){return ko},oneHot:function(){return zi},ones:function(){return We},onesLike:function(){return He},op:function(){return ke},outerProduct:function(){return Oa},pad:function(){return Ps},pad1d:function(){return Ma},pad2d:function(){return La},pad3d:function(){return za},pad4d:function(){return Ba},pool:function(){return Pa},pow:function(){return Ss},powStrict:function(){return To},prelu:function(){return Wa},print:function(){return Ye},prod:function(){return En},rand:function(){return Ua},randomGamma:function(){return ja},randomNormal:function(){return Ka},randomUniform:function(){return Xa},range:function(){return Ge},real:function(){return Ne},reciprocal:function(){return Kn},relu:function(){return Ya},relu6:function(){return Ja},reshape:function(){return Qe},reverse:function(){return fo},reverse1d:function(){return go},reverse2d:function(){return mo},reverse3d:function(){return bo},reverse4d:function(){return yo},rfft:function(){return Xo},round:function(){return Xn},rsqrt:function(){return Yn},scalar:function(){return Fe},scatterND:function(){return qo},selu:function(){return Za},separableConv2d:function(){return Qa},setdiff1dAsync:function(){return rn},sigmoid:function(){return Jn},sign:function(){return Zn},signal:function(){return i},sin:function(){return nr},sinh:function(){return rr},slice:function(){return Ks},slice1d:function(){return Xs},slice2d:function(){return Ys},slice3d:function(){return Js},slice4d:function(){return Zs},softmax:function(){return _o},softplus:function(){return sr},spaceToBatchND:function(){return Rr},sparseToDense:function(){return Jo},spectral:function(){return s},split:function(){return Tr},sqrt:function(){return ir},square:function(){return Rn},squaredDifference:function(){return to},squaredDifferenceStrict:function(){return Do},squeeze:function(){return tn},stack:function(){return en},step:function(){return ar},stft:function(){return sl},stridedSlice:function(){return Wo},sub:function(){return Yr},subStrict:function(){return Fo},sum:function(){return Sn},tan:function(){return or},tanh:function(){return lr},tensor:function(){return Te},tensor1d:function(){return _e},tensor2d:function(){return Oe},tensor3d:function(){return Me},tensor4d:function(){return Le},tensor5d:function(){return ze},tensor6d:function(){return Be},tile:function(){return Jr},topk:function(){return Uo},transpose:function(){return Wr},truncatedNormal:function(){return eo},unsortedSegmentSum:function(){return co},unstack:function(){return nn},variable:function(){return Pe},where:function(){return ks},whereAsync:function(){return Is},zeros:function(){return Ue},zerosLike:function(){return qe}});var h={};n.r(h),n.d(h,{ERF_A1:function(){return hu},ERF_A2:function(){return du},ERF_A3:function(){return pu},ERF_A4:function(){return fu},ERF_A5:function(){return gu},ERF_P:function(){return cu},PARALLELIZE_THRESHOLD:function(){return no},SELU_SCALE:function(){return Ds},SELU_SCALEALPHA:function(){return Ts},assertAndGetBroadcastShape:function(){return be},assertAxesAreInnerMostDims:function(){return pn},assertParamsConsistent:function(){return Se},assignToTypedArray:function(){return Cu},axesAreInnerMostDims:function(){return un},calculateShapes:function(){return Ho},castTensor:function(){return Su},combineLocations:function(){return cn},complexWithEvenIndex:function(){return vu},complexWithOddIndex:function(){return wu},computeConv2DInfo:function(){return dr},computeConv3DInfo:function(){return pr},computeDefaultPad:function(){return fr},computeOptimalWindowSize:function(){return ro},computeOutAndReduceShapes:function(){return hn},computeOutShape:function(){return Ee},computePool2DInfo:function(){return cr},computePool3DInfo:function(){return hr},convertConv2DDataFormat:function(){return wr},eitherStridesOrDilationsAreOne:function(){return vr},expandShapeToKeepDim:function(){return dn},exponent:function(){return Iu},exponents:function(){return ku},getAxesPermutation:function(){return fn},getBroadcastDims:function(){return ge},getComplexWithIndex:function(){return $u},getInnerMostAxes:function(){return mn},getPermuted:function(){return iu},getReductionAxes:function(){return me},getReshaped:function(){return su},getReshapedPermuted:function(){return au},getSliceBeginCoords:function(){return ou},getSliceSize:function(){return lu},getUndoAxesPermutation:function(){return gn},linspaceImpl:function(){return Ru},log:function(){return bu},mergeRealAndImagArrays:function(){return yu},nonMaxSuppressionV3:function(){return Cl},nonMaxSuppressionV5:function(){return kl},prepareAndValidate:function(){return uu},reshapeTensor:function(){return Eu},segment_util:function(){return r},shouldFuse:function(){return Bl},splitRealAndImagArrays:function(){return xu},tupleValuesAreOne:function(){return xr},upcastType:function(){return Ft},validateInput:function(){return Go},validateUpdateShape:function(){return Vo},warn:function(){return mu}});var d={};n.r(d),n.d(d,{maxImpl:function(){return Bp},transposeImpl:function(){return Pp}});var p=n(38583),f=n(76715),g=n(95987);function m(t,e,n,r,s,i,a){try{var o=t[i](a),l=o.value}catch(u){return void n(u)}o.done?e(l):Promise.resolve(l).then(r,s)}function b(t){return function(){var e=this,n=arguments;return new Promise(function(r,s){var i=t.apply(e,n);function a(t){m(i,r,s,a,o,"next",t)}function o(t){m(i,r,s,a,o,"throw",t)}a(void 0)})}}const y="tfjsflags";class x{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}getAsync(t){var e=this;return b(function*(){return t in e.flags||(e.flags[t]=yield e.evaluateFlag(t)),e.flags[t]})()}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(e instanceof Promise)throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}(this.global.location.search);y in t&&t[y].split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)})}}function v(){return $}let w,$=null;function C(){if(null==w){let t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof global)t=global;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}w=t}return w}function k(t,e){const n=function(){const t=C();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const I=k("kernelRegistry",()=>new Map),S=k("gradRegistry",()=>new Map);function E(t,e){const n=D(t,e);return I.get(n)}function R(t){return S.get(t)}function A(t){const e=I.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===t&&n.push(a)}return n}function N(t){const{kernelName:e,backendName:n}=t,r=D(e,n);I.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),I.set(r,t)}function T(t){const{kernelName:e}=t;S.has(e)&&console.warn(`Overriding the gradient for '${e}'`),S.set(e,t)}function D(t,e){return`${e}_${t}`}function F(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function _(t,e,n){return Math.max(t,Math.min(e,n))}function O(t){return t%2==0?t:t+1}function M(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function L(t,e,n=""){M(W(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function z(t){M(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function B(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||J(t)&&!n)for(let r=0;r<t.length;++r)B(t[r],e,n);else e.push(t);return e}function P(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function W(t,e){if(t===e)return!0;if(null==t||null==e||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function U(t){return t%1==0}function V(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function G(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function H(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function q(t,e=(t=>0),n){return new Promise((r,s)=>{let i=0;const a=()=>{if(t())return void r();i++;const o=e(i);null!=n&&i>=n?s():setTimeout(a,o)};a()})}function j(t,e){const n=e.length;return M((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),M(t.every(t=>U(t)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(t=>t<0?n+t:t)}function K(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,i=null==e||s?null:j(e,t).sort();let a=0;for(let o=0;o<t.length;++o){if(null!=i){if(i[a]===o&&1!==t[o])throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(null==i[a]||i[a]>o)&&1===t[o]&&(n.push(t[o]),r.push(o)),i[a]<=o&&a++}1!==t[o]&&(n.push(t[o]),r.push(o))}return{newShape:n,keptDims:r}}function X(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function Y(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function J(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function Z(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function Q(t){return"string"==typeof t||t instanceof String}function tt(t){return"number"==typeof t}function et(t){return Array.isArray(t)?et(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":tt(t)?"float32":Q(t)?"string":function(t){return"boolean"==typeof t}(t)?"bool":"float32"}function nt(t){return!!(t&&t.constructor&&t.call&&t.apply)}function rt(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function st(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function it(t,e,n){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=B(t)),n&&function(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function at(t,e,n){const r=new Array;if(1===e.length){const s=e[0];for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],i=e.slice(1),a=i.reduce((t,e)=>t*e);for(let e=0;e<s;e++)r[e]=at(t+e*a,i,n)}return r}function ot(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size.`);return at(0,t,e)}function lt(t,e){const n=ut(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function ut(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function ct(){return v().platform.now()}function ht(t){t.forEach(e=>{M(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function dt(t,e="utf-8"){return e=e||"utf-8",v().platform.decode(t,e)}function pt(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=n[s]*t[s];return r}function ft(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(t/n[s]),t-=r[s]*n[s];return r[r.length-1]=t,r}class gt{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new mt)}profileKernel(t,e,n){let r;const s=this.backendTimer.time(()=>{r=n()});return r.forEach(n=>{n.data().then(r=>{(function(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}})(r,n.dtype,t),s.then(s=>{let i="";null!=s.getExtraProfileInfo&&(i=s.getExtraProfileInfo()),this.logger.logKernelProfile(t,n,r,s.kernelMs,e,i)})})}),r}}class mt{logKernelProfile(t,e,n,r,s,i){const a="number"==typeof r?H(`${r}ms`,9):r.error,o=H(t,25),l=e.rank,u=e.size,c=H(e.shape.toString(),14);let h="";for(const d in s){const t=s[d].shape||e.shape,n=t.length;h+=`${d}: ${n}D ${n>0?t:""} `}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function bt(t,e,n,r){const s=st(e),i=function(t,e,n,r){const s=P(e),i=r[r.length-1],a=new Array(i).fill(0),o=e.length,l="complex64"===n?wt(t):t;if(o>1)for(let u=0;u<s/i;u++){const t=u*i;for(let e=0;e<i;e++)a[e]=Math.max(a[e],yt(l[t+e],0,n).length)}return a}(t,e,n,s),a=e.length,o=vt(t,e,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(t=>"    "+t).join("\n")),l.join("\n")}function yt(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:Q(t)?`'${t}'`:"bool"===n?xt(t):parseFloat(t.toFixed(7)).toString(),H(r,e)}function xt(t){return 0===t?"false":"true"}function vt(t,e,n,r,s,i=!0){const a="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[yt(wt(t)[0],0,n)]:"bool"===n?[xt(t[0])]:[t[0].toString()];if(1===l){if(o>20){let e=Array.from(t.slice(0,3*a)),r=Array.from(t.slice((o-3)*a,o*a));return"complex64"===n&&(e=wt(e),r=wt(r)),["["+e.map((t,e)=>yt(t,s[e],n)).join(", ")+", ..., "+r.map((t,e)=>yt(t,s[o-3+e],n)).join(", ")+"]"]}return["["+("complex64"===n?wt(t):Array.from(t)).map((t,e)=>yt(t,s[e],n)).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let e=0;e<3;e++){const r=e*h;d.push(...vt(t.slice(r,r+h),u,n,c,s,!1))}d.push("...");for(let e=o-3;e<o;e++){const r=e*h;d.push(...vt(t.slice(r,r+h),u,n,c,s,e===o-1))}}else for(let g=0;g<o;g++){const e=g*h;d.push(...vt(t.slice(e,e+h),u,n,c,s,g===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<l;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function wt(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class $t{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=P(t),null!=n){const t=n.length;M(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Y(e,this.size),this.strides=st(t)}set(t,...e){0===e.length&&(e=[0]),M(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e])throw new Error(`Requested out of range element at ${t}.   Buffer shape=${this.shape}`);e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Ct().makeTensor(this.values,this.shape,this.dtype)}}let Ct=null,kt=null,It=null;class St{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=P(t),this.strides=st(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}flatten(){return this.throwIfDisposed(),this.as1D()}asScalar(){return this.throwIfDisposed(),M(1===this.size,()=>"The array must have only 1 element."),this.reshape([])}as1D(){return this.throwIfDisposed(),this.reshape([this.size])}as2D(t,e){return this.throwIfDisposed(),this.reshape([t,e])}as3D(t,e,n){return this.throwIfDisposed(),this.reshape([t,e,n])}as4D(t,e,n,r){return this.throwIfDisposed(),this.reshape([t,e,n,r])}as5D(t,e,n,r,s){return this.throwIfDisposed(),this.reshape([t,e,n,r,s])}asType(t){return this.throwIfDisposed(),kt.cast(this,t)}get rank(){return this.shape.length}buffer(){var t=this;return b(function*(){const e=yield t.data();return kt.buffer(t.shape,t.dtype,e)})()}bufferSync(){return kt.buffer(this.shape,this.dtype,this.dataSync())}array(){var t=this;return b(function*(){const e=yield t.data();return ot(t.shape,e)})()}arraySync(){return ot(this.shape,this.dataSync())}data(){var t=this;return b(function*(){t.throwIfDisposed();const e=Ct().read(t.dataId);if("string"===t.dtype){const t=yield e;try{return t.map(t=>dt(t))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e})()}dataSync(){this.throwIfDisposed();const t=Ct().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>dt(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){var t=this;return b(function*(){t.throwIfDisposed();const e=yield Ct().read(t.dataId);return"string"===t.dtype?e:new Uint8Array(e.buffer)})()}dispose(){this.isDisposed||(Ct().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}toFloat(){return this.asType("float32")}toInt(){return this.asType("int32")}toBool(){return this.asType("bool")}print(t=!1){return kt.print(this,t)}reshape(t){return this.throwIfDisposed(),kt.reshape(this,t)}reshapeAs(t){return this.throwIfDisposed(),this.reshape(t.shape)}expandDims(t=0){return kt.expandDims(this,t)}squeeze(t){return this.throwIfDisposed(),kt.squeeze(this,t)}clone(){return this.throwIfDisposed(),kt.clone(this)}toString(t=!1){return bt(this.dataSync(),this.shape,this.dtype,t)}gather(t,e=0){return this.throwIfDisposed(),kt.gather(this,t,e)}norm(t="euclidean",e=null,n=!1){return this.throwIfDisposed(),kt.norm(this,t,e,n)}slice(t,e){return this.throwIfDisposed(),kt.slice(this,t,e)}reverse(t){return this.throwIfDisposed(),kt.reverse(this,t)}stack(t,e=0){return kt.stack([this,t],e)}unstack(t=0){return kt.unstack(this,t)}all(t=null,e=!1){return this.throwIfDisposed(),kt.all(this,t,e)}any(t=null,e=!1){return this.throwIfDisposed(),kt.any(this,t,e)}logSumExp(t=null,e=!1){return this.throwIfDisposed(),kt.logSumExp(this,t,e)}sum(t=null,e=!1){return this.throwIfDisposed(),kt.sum(this,t,e)}prod(t=null,e=!1){return this.throwIfDisposed(),kt.prod(this,t,e)}mean(t=null,e=!1){return this.throwIfDisposed(),kt.mean(this,t,e)}min(t=null,e=!1){return this.throwIfDisposed(),kt.min(this,t,e)}argMin(t=null){return this.throwIfDisposed(),kt.argMin(this,t)}argMax(t=null){return this.throwIfDisposed(),kt.argMax(this,t)}cast(t){return this.throwIfDisposed(),kt.cast(this,t)}addStrict(t){return this.throwIfDisposed(),kt.addStrict(this,t)}subStrict(t){return this.throwIfDisposed(),kt.subStrict(this,t)}powStrict(t){return this.throwIfDisposed(),kt.powStrict(this,t)}mulStrict(t){return this.throwIfDisposed(),kt.mulStrict(this,t)}divStrict(t){return this.throwIfDisposed(),kt.divStrict(this,t)}minimumStrict(t){return this.throwIfDisposed(),kt.minimumStrict(this,t)}maximumStrict(t){return this.throwIfDisposed(),kt.maximumStrict(this,t)}modStrict(t){return this.throwIfDisposed(),kt.modStrict(this,t)}squaredDifferenceStrict(t){return this.throwIfDisposed(),kt.squaredDifferenceStrict(this,t)}notEqualStrict(t){return this.throwIfDisposed(),kt.notEqualStrict(this,t)}lessStrict(t){return this.throwIfDisposed(),kt.lessStrict(this,t)}equalStrict(t){return this.throwIfDisposed(),kt.equalStrict(this,t)}lessEqualStrict(t){return this.throwIfDisposed(),kt.lessEqualStrict(this,t)}greaterStrict(t){return this.throwIfDisposed(),kt.greaterStrict(this,t)}greaterEqualStrict(t){return this.throwIfDisposed(),kt.greaterEqualStrict(this,t)}logicalAnd(t){return this.throwIfDisposed(),kt.logicalAnd(this,t)}logicalOr(t){return this.throwIfDisposed(),kt.logicalOr(this,t)}logicalNot(){return this.throwIfDisposed(),kt.logicalNot(this)}logicalXor(t){return this.throwIfDisposed(),kt.logicalXor(this,t)}where(t,e){return this.throwIfDisposed(),kt.where(t,this,e)}neg(){return this.throwIfDisposed(),kt.neg(this)}ceil(){return this.throwIfDisposed(),kt.ceil(this)}floor(){return this.throwIfDisposed(),kt.floor(this)}sign(){return this.throwIfDisposed(),kt.sign(this)}isNaN(){return this.throwIfDisposed(),kt.isNaN(this)}isInf(){return this.throwIfDisposed(),kt.isInf(this)}isFinite(){return this.throwIfDisposed(),kt.isFinite(this)}exp(){return this.throwIfDisposed(),kt.exp(this)}expm1(){return this.throwIfDisposed(),kt.expm1(this)}log(){return this.throwIfDisposed(),kt.log(this)}log1p(){return this.throwIfDisposed(),kt.log1p(this)}sqrt(){return this.throwIfDisposed(),kt.sqrt(this)}rsqrt(){return this.throwIfDisposed(),kt.rsqrt(this)}square(){return this.throwIfDisposed(),kt.square(this)}reciprocal(){return this.throwIfDisposed(),kt.reciprocal(this)}abs(){return this.throwIfDisposed(),kt.abs(this)}clipByValue(t,e){return this.throwIfDisposed(),kt.clipByValue(this,t,e)}sigmoid(){return this.throwIfDisposed(),kt.sigmoid(this)}logSigmoid(){return this.throwIfDisposed(),kt.logSigmoid(this)}softplus(){return this.throwIfDisposed(),kt.softplus(this)}zerosLike(){return this.throwIfDisposed(),kt.zerosLike(this)}onesLike(){return this.throwIfDisposed(),kt.onesLike(this)}sin(){return this.throwIfDisposed(),kt.sin(this)}cos(){return this.throwIfDisposed(),kt.cos(this)}tan(){return this.throwIfDisposed(),kt.tan(this)}asin(){return this.throwIfDisposed(),kt.asin(this)}acos(){return this.throwIfDisposed(),kt.acos(this)}atan(){return this.throwIfDisposed(),kt.atan(this)}sinh(){return this.throwIfDisposed(),kt.sinh(this)}cosh(){return this.throwIfDisposed(),kt.cosh(this)}tanh(){return this.throwIfDisposed(),kt.tanh(this)}asinh(){return this.throwIfDisposed(),kt.asinh(this)}acosh(){return this.throwIfDisposed(),kt.acosh(this)}atanh(){return this.throwIfDisposed(),kt.atanh(this)}erf(){return this.throwIfDisposed(),kt.erf(this)}round(){return this.throwIfDisposed(),kt.round(this)}step(t=0){return this.throwIfDisposed(),kt.step(this,t)}softmax(t=-1){return this.throwIfDisposed(),kt.softmax(this,t)}logSoftmax(t=-1){return this.throwIfDisposed(),kt.logSoftmax(this,t)}resizeBilinear(t,e=!1){return this.throwIfDisposed(),kt.image.resizeBilinear(this,t,e)}resizeNearestNeighbor(t,e=!1){return this.throwIfDisposed(),kt.image.resizeNearestNeighbor(this,t,e)}variable(t=!0,e,n){return this.throwIfDisposed(),Ct().makeVariable(this,t,e,n)}unsortedSegmentSum(t,e){return this.throwIfDisposed(),kt.unsortedSegmentSum(this,t,e)}topk(t=1,e=!0){return this.throwIfDisposed(),kt.topk(this,t,e)}stridedSlice(t,e,n,r=0,s=0,i=0,a=0,o=0){return this.throwIfDisposed(),kt.stridedSlice(this,t,e,n,r,s,i,a,o)}fft(){return this.throwIfDisposed(),kt.spectral.fft(this)}ifft(){return this.throwIfDisposed(),kt.spectral.ifft(this)}rfft(){return this.throwIfDisposed(),kt.spectral.rfft(this)}irfft(){return this.throwIfDisposed(),kt.spectral.irfft(this)}}Object.defineProperty(St,Symbol.hasInstance,{value:t=>!!t&&null!=t.dataId&&null!=t.shape&&null!=t.dtype});class Et extends St{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!W(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Ct().disposeTensor(this),this.dataId=t.dataId,Ct().incRef(this,null)}dispose(){Ct().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Et,Symbol.hasInstance,{value:t=>t instanceof St&&null!=t.assign&&t.assign instanceof Function});var Rt=(()=>{return(t=Rt||(Rt={})).float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64",Rt;var t})(),At=(()=>{return(t=At||(At={})).float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64",At;var t})(),Nt=(()=>{return(t=Nt||(Nt={})).float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64",Nt;var t})(),Tt=(()=>{return(t=Tt||(Tt={})).float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64",Tt;var t})();const Dt={float32:Nt,int32:Rt,bool:At,complex64:Tt};function Ft(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Dt[t][e]}function _t(t){return Ft(t,"int32")}function Ot(t,e){if(t.dtype===e.dtype)return[t,e];const n=Ft(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Mt(t){const e=[];return Lt(t,e,new Set),e}function Lt(t,e,n){if(null==t)return;if(t instanceof St)return void e.push(t);if(!function(t){return Array.isArray(t)||"object"==typeof t}(t))return;const r=t;for(const s in r){const t=r[s];n.has(t)||(n.add(t),Lt(t,e,n))}}class zt{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}let Bt=(()=>{class t{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new zt}ready(){var t=this;return b(function*(){if(null!=t.pendingBackendInit)return t.pendingBackendInit.then(()=>{});if(null!=t.backendInstance)return;const e=t.getSortedBackends();for(let n=0;n<e.length;n++){const r=e[n];if(yield t.initializeBackend(r).success)return void(yield t.setBackend(r))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}setBackend(t){var e=this;return b(function*(){if(null==e.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(e.backendName=t,null==e.registry[t]){e.backendInstance=null;const{success:n,asyncInit:r}=e.initializeBackend(t);if(!(r?yield n:n))return!1}return e.backendInstance=e.registry[t],e.setupRegisteredKernels(),e.profiler=new gt(e.backendInstance),!0})()}setupRegisteredKernels(){A(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){A(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(Promise.resolve(n)===n){const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0))).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,s,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return t.nextTensorId++}nextVariableId(){return t.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype);return this.addTapeNode(this.state.activeScope.name,{x:t},[e],t=>({x:()=>t.toFloat()}),[],{}),e}runKernel(t,e,n,r,s){return this.runKernelFunc(null,e,null,t,n,r,s)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach(t=>{s+="complex64"===t.dtype?3:1});const i=r-e-s-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,s,i,a){let o,l=[];const u=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=E(r,this.backendName);let f;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:s,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const o=n.map(({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n));if(u){let t=this.getTensorsForGradient(r,e,o);if(null==t){null==a&&(a=[]);const e=o.filter((t,e)=>a[e]);t=(i||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{!u||(l=t.map(t=>this.keep(this.clone(t))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy(()=>t(this.backend,e));const s=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,s),s}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{o=this.ENV.getBool("DEBUG")?this.profiler.profileKernel(r,e,()=>d()):d()}),u&&this.addTapeNode(r,e,o,n,l,s),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>e[t].shape),outputShapes:o.map(t=>t.shape)}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=R(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(M(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(t=>e[t])):i=t.map(t=>e[t]);const a=n.filter((t,e)=>s[e]);return i.concat(a)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let s=t;"string"===(n=n||"float32")&&Q(t[0])&&(s=t.map(t=>function(t,e="utf-8"){return e=e||"utf-8",v().platform.encode(t,e)}(t)));const i=r.write(s,e,n),a=new St(e,n,i,this.nextTensorId());if(this.incRef(a,r),"string"===n){const t=this.state.tensorInfo.get(i),e=function(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return a}makeTensorFromDataId(t,e,n,r){const s=new St(e,n=n||"float32",t,this.nextTensorId());return this.incRef(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.asType(r));const s=new Et(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*Z(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof Et||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[t])}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}profile(t){var e=this;return b(function*(){e.state.profiling=!0;const n=e.state.numBytes,r=e.state.numTensors;return e.state.activeProfile.kernels=[],e.state.activeProfile.result=t(),e.state.profiling=!1,e.state.activeProfile.peakBytes=Math.max(...e.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),e.state.activeProfile.newBytes=e.state.numBytes-n,e.state.activeProfile.newTensors=e.state.numTensors-r,e.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=R(t);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=ut(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Mt(t),n=new Set(e.map(t=>t.id));for(let s=0;s<this.state.activeScope.track.length;s++){const t=this.state.activeScope.track[s];!t.kept&&!n.has(t.id)&&t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{!t.kept&&t.scopeId===r.id&&this.track(t)})}gradients(t,e,n,r=!1){if(M(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));M(s instanceof St,()=>"The result y returned by f() must be a tensor.");const i=function(t,e,n){const r={},s={};for(let l=0;l<e.length;l++)r[e[l].id]=!0;for(let l=0;l<t.length;l++){const n=t[l],i=n.inputs;for(const t in i){const a=i[t];let o=!1;for(let t=0;t<e.length;t++)if(r[a.id]){n.outputs.forEach(t=>r[t.id]=!0),o=!0,s[n.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let l=t.length-1;l>=0;l--){const e=t[l],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(i[e.outputs[t].id]){for(const t in n)i[n[t].id]=!0,a[e.id]=!0;break}}const o=[];for(let l=0;l<t.length;l++){const e=t[l];if(s[e.id]&&a[e.id]){const t={};for(const s in e.inputs){const n=e.inputs[s];r[n.id]&&(t[s]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,o.push(n)}}return o}(this.state.activeTape,e,s);if(!r&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[s.id]=null==n?function(t){const e=lt(P(t),"float32");return Pt.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n){for(let r=e.length-1;r>=0;r--){const s=e[r],i=[];if(s.outputs.forEach(e=>{const n=t[e.id];i.push(null!=n?n:null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const a=s.gradient(i);for(const e in s.inputs){if(!(e in a))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(a)}.`);const r=n(()=>a[e]());if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const i=s.inputs[e];if(!W(r.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=r;else{const e=t[i.id];t[i.id]=e.add(r),e.dispose()}}}}(t,i,t=>this.tidy(t));const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:s,grads:r}})}customGrad(t){return M(nt(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;M(e.every(t=>t instanceof St),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return e.forEach((t,e)=>{r[e]=t}),this.runKernelFunc((r,s)=>(n=t(...e,s),M(n.value instanceof St,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),M(nt(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),r,(t,r)=>{const s=n.gradFunc(t,r),i=Array.isArray(s)?s:[s];M(i.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),M(i.every(t=>t instanceof St),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const a={};return i.forEach((t,e)=>{a[e]=()=>t}),a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}time(t){var e=this;return b(function*(){const n=ct(),r=yield e.backend.time(t);return r.wallMs=ct()-n,r})()}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new zt;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return t.nextTensorId=0,t.nextVariableId=0,t})();const Pt=function(){const t=C();if(null==t._tfengine){const e=new x(t);t._tfengine=new Bt(e)}return function(t){$=t}(t._tfengine.ENV),function(t){Ct=t}(()=>t._tfengine),t._tfengine}();function Wt(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ut=v();Ut.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Ut.registerFlag("IS_BROWSER",()=>Wt()),Ut.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Ut.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Ut.registerFlag("PROD",()=>!1),Ut.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ut.getBool("DEBUG")),Ut.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Ut.registerFlag("IS_TEST",()=>!1);const Vt="AvgPool",Gt="AvgPool3D",Ht="BatchMatMul",qt="BatchToSpaceND",jt="BroadcastTo",Kt="Conv2DBackpropInput",Xt="DepthwiseConv2dNative",Yt="Div",Jt="FloorDiv",Zt="FusedBatchNorm",Qt="GreaterEqual",te="Identity",ee="Max",ne="Maximum",re="MaxPool",se="MaxPool3D",ie="MaxPoolWithArgmax",ae="Minimum",oe="Multiply",le="NonMaxSuppressionV3",ue="NonMaxSuppressionV5",ce="SpaceToBatchND",he="SquaredDifference",de="Square",pe="Transpose",fe="FromPixels";function ge(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=t[i]||1;(e[e.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function me(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],i=e.length-r-1,a=e[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function be(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let i=e[e.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}const ye={kernelName:"Add",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=be(n.shape,r.shape);return{a:()=>{let e=t;const r=me(n.shape,s);return r.length>0&&(e=e.sum(r)),e.reshape(n.shape)},b:()=>{let e=t;const n=me(r.shape,s);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)}}}};function xe(t,e){let n=t;if(J(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||J(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&v().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ve(t,r,[]),r}function ve(t,e,n){if(n=n||[],!Array.isArray(t)&&!J(t))return void M(0===e.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);M(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),M(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let s=0;s<t.length;++s)ve(t[s],r,n.concat(s))}function we(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function $e(t,e,n,r="numeric"){if(t instanceof St)return we(r,t.dtype,e,n),t;let s=et(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),we(r,s,e,n),null==t||!J(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==t?"null":t.constructor.name}'`);const i=xe(t,s);!J(t)&&!Array.isArray(t)&&(t=[t]);const a="string"!==s?it(t,s,v().getBool("DEBUG")):B(t,[],!0);return Pt.makeTensor(a,i,s)}function Ce(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,r)=>$e(t,`${e}[${r}]`,n),r)}function ke(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));const s=(...t)=>{Pt.startScope(n);try{const e=r(...t);return e instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),Pt.endScope(e),e}catch(e){throw Pt.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Ie=ke({add_:function(t,e){let n=$e(t,"a","add"),r=$e(e,"b","add");return[n,r]=Ot(n,r),Pt.runKernelFunc((t,e)=>{const s=t.add(n,r);return e([n,r]),s},{a:n,b:r},null,"Add")}});function Se(t,e){const n=t[0].length;t.forEach((t,e)=>{M(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),M(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,s)=>{for(let i=0;i<n;i++)M(i===e||t[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function Ee(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const Re=ke({complex_:function(t,e){const n=$e(t,"real","complex"),r=$e(e,"imag","complex");return L(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`),Pt.runKernelFunc(t=>t.complex(n,r),{real:n,imag:r},null,"Complex")}}),Ae=ke({imag_:function(t){const e=$e(t,"input","imag");return Pt.runKernelFunc(t=>t.imag(e),{input:e},null,"Imag")}}),Ne=ke({real_:function(t){const e=$e(t,"input","real");return Pt.runKernelFunc(t=>t.real(e),{input:e},null,"Real")}});function Te(t,e,n){return De(t,e,xe(t,n),n)}function De(t,e,n,r){if(null==r&&(r=et(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!J(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){ht(e);const t=P(e),r=P(n);M(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let s=0;s<n.length;++s){const t=n[s],r=s!==n.length-1||t!==P(e.slice(s));M(n[s]===e[s]||!r,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!J(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t="string"!==r?it(t,r,v().getBool("DEBUG")):B(t,[],!0),Pt.makeTensor(t,e,r)}function Fe(t,e){if((J(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&J(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return De(t,[],[],e)}function _e(t,e){z(t);const n=xe(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return De(t,null,n,e)}function Oe(t,e,n){if(z(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=xe(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return De(t,e,r,n)}function Me(t,e,n){if(z(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=xe(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return De(t,e,r,n)}function Le(t,e,n){if(z(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=xe(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return De(t,e,r,n)}function ze(t,e,n){if(z(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=xe(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return De(t,e,r,n)}function Be(t,e,n){if(z(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=xe(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return De(t,e=e||r,r,n)}function Pe(t,e=!0,n,r){return Pt.makeVariable(t,e,n,r)}function We(t,e="float32"){if("complex64"===e){const e=We(t,"float32"),n=Ue(t,"float32");return Re(e,n)}const n=lt(P(t),e);return Pt.makeTensor(n,t,e)}function Ue(t,e="float32"){if("complex64"===e){const e=Ue(t,"float32"),n=Ue(t,"float32");return Re(e,n)}const n=ut(P(t),e);return Pt.makeTensor(n,t,e)}function Ve(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");return Pt.runKernelFunc(r=>r.linspace(t,e,n),{})}function Ge(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");if(t===e||t<e&&n<0||e<t&&n>1)return Ue([0],r);const s=ut(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return _e(s,r)}const He=ke({onesLike_:function(t){const e=$e(t,"x","onesLike");if("complex64"===e.dtype){const t=He(Ne(e)),n=qe(Ae(e));return Re(t,n)}return Pt.runKernelFunc(t=>t.onesLike(e),{x:e},(t,e)=>({x:()=>qe(t)}),"OnesLike")}}),qe=ke({zerosLike_:function(t){const e=$e(t,"x","zerosLike");return Pt.runKernelFunc(t=>t.zerosLike(e),{x:e},(t,e)=>({x:()=>qe(t)}),"ZerosLike")}}),je=ke({concat_:function(t,e=0){M(t.length>=1,()=>"Pass at least one tensor to concat");let n=Ce(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)});const r=j(e,n[0].shape)[0],s=Ee(n.map(t=>t.shape),r);return 0===P(s)?Te([],s):(n=n.filter(t=>t.size>0),1===n.length?n[0]:(Se(n.map(t=>t.shape),r),Pt.runKernelFunc((t,e)=>{const s=t.concat(n,r);return e(n),s},n,null,"Concat",{axis:e})))}});function Ke(){return(Ke=b(function*(t,e){const n=$e(t,"x","setdiff1d"),r=$e(e,"y","setdiff1d");M(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),M(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),M(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=yield n.data(),i=yield r.data(),a=new Set(i);let o=0;for(let c=0;c<s.length;c++)a.has(s[c])||o++;const l=new $t([o],n.dtype),u=new $t([o],"int32");for(let c=0,h=0;c<s.length;c++)a.has(s[c])||(l.values[h]=s[c],u.values[h]=c,h++);return[l.toTensor(),u.toTensor()]})).apply(this,arguments)}function Xe(t,e="float32",n){return e=e||"float32",ht(t),new $t(t,e,n)}function Ye(t,e=!1){console.log(t.toString(e))}const Je=ke({cast_:function(t,e){const n=$e(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return Pt.runKernelFunc(t=>t.cast(n,e),{x:n},t=>({x:()=>t.clone()}),"Cast",{dtype:e})}}),Ze=ke({expandDims_:function(t,e=0){const n=$e(t,"x","expandDims",null);M(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r=n.shape.slice();return e<0&&(M(-(n.rank+1)<=e,()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`),e=n.rank+e+1),r.splice(e,0,1),Qe(n,r)}}),Qe=ke({reshape_:function(t,e){const n=$e(t,"x","reshape",null);return e=function(t,e){let n=1,r=-1;for(let i=0;i<t.length;++i)if(t[i]>=0)n*=t[i];else if(-1===t[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(t[i]<0)throw Error(`Shapes can not be < 0. Found ${t[i]} at dim ${i}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}(e,n.size),M(n.size===P(e),()=>"new shape and old shape must have the same number of elements."),Pt.runKernelFunc(t=>t.reshape(n,e),{x:n},t=>({x:()=>t.reshape(n.shape)}),"Reshape",{shape:e})}}),tn=ke({squeeze_:function(t,e){const n=$e(t,"x","squeeze");return Qe(n,K(n.shape,e).newShape)}}),en=ke({stack_:function(t,e=0){const n=Ce(t,"tensors","stack");if(M(n.length>=1,()=>"Pass at least one tensor to tf.stack"),1===n.length)return n[0].expandDims(e);const r=n[0].shape,s=n[0].dtype;M(e<=n[0].rank,()=>"Axis must be <= rank of the tensor"),n.forEach(t=>{L(r,t.shape,"All tensors passed to stack must have matching shapes")}),n.forEach(t=>{M(s===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=n.map(t=>t.expandDims(e));return je(i,e)}}),nn=ke({unstack_:function(t,e=0){e=e||0;const n=$e(t,"x","unstack");return M(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`),e<0&&(e+=n.shape.length),Pt.runKernelFunc(t=>t.unstack(n,e),{x:n},t=>({x:()=>en(t,e)}),"Unpack",{axis:e})}}),rn=function(t,e){return Ke.apply(this,arguments)},sn=ke({floorDiv_:function(t,e){let n=$e(t,"a","floorDiv"),r=$e(e,"b","floorDiv");return[n,r]=Ot(n,r),Pt.runKernelFunc((t,e)=>{const s=t.floorDiv(n,r);return e([n,r]),s},{a:n,b:r},null,Jt)}}),an=ke({div_:function(t,e){let n=$e(t,"a","div"),r=$e(e,"b","div");return[n,r]=Ot(n,r),"int32"===n.dtype&&"int32"===r.dtype?sn(n,r):Pt.runKernelFunc((t,e)=>{const s=t.realDivide(n,r);return e([n,r]),s},{a:n,b:r},null,Yt,{})}}),on=ke({mul_:function(t,e){let n=$e(t,"a","mul"),r=$e(e,"b","mul");return[n,r]=Ot(n,r),Pt.runKernelFunc((t,e)=>{const s=t.multiply(n,r);return e([n,r]),s},{a:n,b:r},null,oe)}});function ln(t){return Pt.customGrad(t)}function un(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function cn(t,e,n){const r=t.length+e.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[i++]):s.push(e[a++]);return s}function hn(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map(e=>t[e])]}function dn(t,e){return cn(t,e.map(t=>1),e)}function pn(t,e,n){M(un(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function fn(t,e){if(un(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function gn(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function mn(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}function bn(t,e,n,r,s){return e.rank<n.rank&&(e=e.reshape(dn(e.shape,r))),t.rank<n.rank&&(t=t.reshape(dn(t.shape,r))),{x:()=>{const r=t.mul(n.equal(e).cast(t.dtype));return null==s?r:r.transpose(s)}}}const yn=ke({all_:function(t,e=null,n=!1){let r=$e(t,"x","all","bool");const s=j(e,r.shape);let i=s;const a=fn(i,r.rank);null!=a&&(r=r.transpose(a),i=mn(i.length,r.rank));const o=Pt.runKernelFunc(t=>t.all(r,i),{$x:r});if(n){const t=dn(o.shape,s);return o.reshape(t)}return o}}),xn=ke({any_:function(t,e=null,n=!1){let r=$e(t,"x","any","bool");const s=j(e,r.shape);let i=s;const a=fn(i,r.rank);null!=a&&(r=r.transpose(a),i=mn(i.length,r.rank));const o=Pt.runKernelFunc(t=>t.any(r,i),{$x:r});if(n){const t=dn(o.shape,s);return o.reshape(t)}return o}}),vn=ke({argMax_:function(t,e=0){let n=$e(t,"x","argMax");null==e&&(e=0);let r=j(e,n.shape);const s=fn(r,n.rank);return null!=s&&(n=n.transpose(s),r=mn(r.length,n.rank)),Pt.runKernelFunc((t,e)=>{const s=t.argMax(n,r[0]);return e([n]),s},{x:n},(t,e)=>{const[n]=e;return{x:()=>qe(n)}},"ArgMax",{axis:r[0]},[n])}}),wn=ke({argMin_:function(t,e=0){let n=$e(t,"x","argMin");null==e&&(e=0);let r=j(e,n.shape);const s=fn(r,n.rank);return null!=s&&(n=n.transpose(s),r=mn(r.length,n.rank)),Pt.runKernelFunc((t,e)=>{const s=t.argMin(n,r[0]);return e([n]),s},{$x:n},(t,e)=>{const[n]=e;return{$x:()=>qe(n)}})}}),$n=ke({logSumExp_:function(t,e=null,n=!1){const r=$e(t,"x","logSumExp"),s=j(e,r.shape),i=r.max(s,!0),a=r.sub(i).exp().sum(s).log(),o=i.reshape(a.shape).add(a);if(n){const t=dn(o.shape,s);return o.reshape(t)}return o}}),Cn=ke({mean_:function(t,e=null,n=!1){const r=$e(t,"x","mean"),s=j(e,r.shape),i=P(hn(r.shape,s)[1]);return ln(t=>{const r=Fe(i);return{value:(r.dtype===t.dtype?t:t.cast(r.dtype)).div(r).sum(e,n),gradFunc:e=>{const n=t.shape.slice();return s.forEach(t=>{n[t]=1}),e.reshape(n).mul(We(t.shape,"float32")).div(i)}}})(r)}}),kn=ke({min_:function(t,e=null,n=!1){let r=$e(t,"x","min");const s=r,i=j(e,r.shape);let a=i;const o=fn(a,r.rank);null!=o&&(r=r.transpose(o),a=mn(a.length,r.rank));let l=Pt.runKernelFunc((t,e)=>{const n=t.min(r,a);return e([s,n]),n},{x:r},(t,e)=>bn(t,e[1],e[0],i,o),"Min",{axes:a},[r],[!0]);if(n){const t=dn(l.shape,i);l=l.reshape(t)}return l}}),In=ke({moments_:function(t,e=null,n=!1){const r=j(e,(t=$e(t,"x","moments")).shape),s=t.mean(r,n);let i=s.shape;n||(i=dn(s.shape,r));const a=t.toFloat().sub(s.reshape(i)).square().mean(r,n);return{mean:s,variance:a}}}),Sn=ke({sum_:function(t,e=null,n=!1){let r=$e(t,"x","sum");"bool"===r.dtype&&(r=r.toInt());const s=j(e,r.shape);return ln(t=>{const e=fn(s,t.rank);let r=s,i=t;null!=e&&(i=t.transpose(e),r=mn(r.length,t.rank));const a=e=>{const n=t.shape.slice();return s.forEach(t=>{n[t]=1}),e.reshape(n).mul(We(t.shape,"float32"))};let o=Pt.runKernelFunc(t=>t.sum(i,r),{x:i},t=>({x:()=>a(t)}),"Sum",{axes:r});if(n){const t=dn(o.shape,s);o=o.reshape(t)}return{value:o,gradFunc:a}})(r)}}),En=ke({prod_:function(t,e=null,n=!1){let r=$e(t,"x","prod");"bool"===r.dtype&&(r=r.toInt());const s=j(e,r.shape),i=fn(s,r.rank);let a=s,o=r;null!=i&&(o=r.transpose(i),a=mn(a.length,r.rank));let l=Pt.runKernelFunc(t=>t.prod(o,a),{permutedX:o});if(n){const t=dn(l.shape,s);l=l.reshape(t)}return l}}),Rn=ke({square_:function(t){const e=$e(t,"x","square");return Pt.runKernelFunc((t,n)=>(n([e]),t.square(e)),{x:e},null,"Square",{},[e],[])}}),An=ke({abs_:function(t){const e=$e(t,"x","abs");return"complex64"===e.dtype?Pt.runKernelFunc(t=>t.complexAbs(e),{$x:e}):Pt.runKernelFunc((t,n)=>{const r=t.abs(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.mul(n.toFloat().step(-1))}},"Abs")}}),Nn=ke({acos_:function(t){const e=$e(t,"x","acos");return Pt.runKernelFunc((t,n)=>{const r=t.acos(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>{const e=n.toFloat().square(),r=Fe(1).sub(e).sqrt();return t.div(r).neg()}}})}}),Tn=ke({acosh_:function(t){const e=$e(t,"x","acosh");return Pt.runKernelFunc((t,n)=>{const r=t.acosh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>{const e=n.toFloat().square().sub(1).sqrt();return t.div(e)}}})}}),Dn=ke({asin_:function(t){const e=$e(t,"x","asin");return Pt.runKernelFunc((t,n)=>{const r=t.asin(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(Fe(1).sub(n.toFloat().square()).sqrt())}})}}),Fn=ke({asinh_:function(t){const e=$e(t,"x","asinh");return Pt.runKernelFunc((t,n)=>{const r=t.asinh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>{const e=Fe(1).add(n.toFloat().square()).sqrt();return t.div(e)}}})}}),_n=ke({atan_:function(t){const e=$e(t,"x","atan");return Pt.runKernelFunc((t,n)=>{const r=t.atan(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(n.toFloat().square().add(1))}})}}),On=ke({atanh_:function(t){const e=$e(t,"x","atanh");return Pt.runKernelFunc((t,n)=>{const r=t.atanh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(Fe(1).sub(n.toFloat().square()))}})}}),Mn=ke({ceil_:function(t){const e=$e(t,"x","ceil");return Pt.runKernelFunc(t=>t.ceil(e),{$x:e},t=>({$x:()=>qe(t)}))}}),Ln=ke({clipByValue_:function(t,e,n){const r=$e(t,"x","clipByValue");return M(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),Pt.runKernelFunc((t,s)=>{const i=t.clip(r,e,n);return s([r]),i},{x:r},(t,r)=>{const[s]=r;return{x:()=>t.where(s.greaterEqual(e).logicalAnd(s.lessEqual(n)),qe(t))}},"ClipByValue",{min:e,max:n},[r])}}),zn=ke({cos_:function(t){const e=$e(t,"x","cos");return Pt.runKernelFunc((t,n)=>{const r=t.cos(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>n.toFloat().sin().neg().mul(t)}},"Cos",{},[e])}}),Bn=ke({cosh_:function(t){const e=$e(t,"x","cosh");return Pt.runKernelFunc((t,n)=>{const r=t.cosh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>n.toFloat().sinh().mul(t)}})}}),Pn=ke({erf_:function(t){let e=$e(t,"x","erf");return M("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=e.toFloat()),Pt.runKernelFunc((t,n)=>{const r=t.erf(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}})}}),Wn=ke({exp_:function(t){const e=$e(t,"x","exp");return Pt.runKernelFunc((t,n)=>{const r=t.exp(e);return n([r]),r},{x:e},(t,e)=>({x:()=>t.mul(e[0])}),"Exp",{},[],[!0])}}),Un=ke({expm1_:function(t){const e=$e(t,"x","expm1");return Pt.runKernelFunc((t,n)=>{const r=t.expm1(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.exp())}})}}),Vn=ke({floor_:function(t){const e=$e(t,"x","floor");return Pt.runKernelFunc(t=>t.floor(e),{$x:e},t=>({$x:()=>qe(t)}))}}),Gn=ke({log_:function(t){const e=$e(t,"x","log");return Pt.runKernelFunc((t,n)=>{const r=t.log(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.div(n.toFloat())}},"Log",{},[e])}}),Hn=ke({log1p_:function(t){const e=$e(t,"x","log1p");return Pt.runKernelFunc((t,n)=>{const r=t.log1p(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(n.add(1))}})}}),qn=ke({logSigmoid_:function(t){const e=$e(t,"x","logSigmoid");return Pt.runKernelFunc((t,n)=>{const r=t.softplus(e.neg()).neg();return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.neg().sigmoid())}})}}),jn=ke({neg_:function(t){const e=$e(t,"x","neg");return Pt.runKernelFunc(t=>t.neg(e),{x:e},t=>({x:()=>t.neg()}),"Neg",{},[e])}}),Kn=ke({reciprocal_:function(t){const e=$e(t,"x","reciprocal");return Pt.runKernelFunc((t,n)=>{const r=t.reciprocal(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(n.square().neg())}})}}),Xn=ke({round_:function(t){const e=$e(t,"x","round");return Pt.runKernelFunc(t=>t.round(e),{$x:e},t=>({$x:()=>qe(t)}))}}),Yn=ke({rsqrt_:function(t){const e=$e(t,"x","rsqrt");return Pt.runKernelFunc((t,n)=>{const r=t.rsqrt(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.div(n.pow(1.5).mul(2)).neg()}},"Rsqrt",{},[e])}}),Jn=ke({sigmoid_:function(t){const e=$e(t,"x","sigmoid");return Pt.runKernelFunc((t,n)=>{const r=t.sigmoid(e);return n([r]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.mul(n.mul(Fe(1).sub(n)))}},"Sigmoid")}}),Zn=ke({sign_:function(t){const e=$e(t,"x","sign");return Pt.runKernelFunc(t=>t.sign(e),{$x:e},t=>({$x:()=>qe(t)}))}}),Qn=ke({isNaN_:function(t){const e=$e(t,"x","isNaN");return Pt.runKernelFunc(t=>t.isNaN(e),{$x:e},t=>({$x:()=>qe(t)}))}}),tr=ke({isInf_:function(t){const e=$e(t,"x","isInf");return Pt.runKernelFunc(t=>t.isInf(e),{$x:e},t=>({$x:()=>qe(t)}))}}),er=ke({isFinite_:function(t){const e=$e(t,"x","isFinite");return Pt.runKernelFunc(t=>t.isFinite(e),{$x:e},t=>({$x:()=>qe(t)}))}}),nr=ke({sin_:function(t){const e=$e(t,"x","sin");return Pt.runKernelFunc((t,n)=>{const r=t.sin(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>n.toFloat().cos().mul(t)}},"Sin",{},[e])}}),rr=ke({sinh_:function(t){const e=$e(t,"x","sinh");return Pt.runKernelFunc((t,n)=>{const r=t.sinh(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>n.toFloat().cosh().mul(t)}})}}),sr=ke({softplus_:function(t){const e=$e(t,"x","softplus");return Pt.runKernelFunc((t,n)=>{const r=t.softplus(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.mul(n.sigmoid())}})}}),ir=ke({sqrt_:function(t){const e=$e(t,"x","sqrt");return Pt.runKernelFunc((t,n)=>{const r=t.sqrt(e);return n([e]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>t.div(n.toFloat().sqrt().mul(2))}},"Sqrt",{})}}),ar=ke({step_:function(t,e=0){const n=$e(t,"x","step");return Pt.runKernelFunc(t=>t.step(n,e),{$x:n},t=>({$x:()=>qe(t)}))}}),or=ke({tan_:function(t){const e=$e(t,"x","tan");return Pt.runKernelFunc((t,n)=>{const r=t.tan(e);return n([e]),r},{$x:e},(t,e)=>{const[n]=e;return{$x:()=>t.div(n.cos().square())}})}}),lr=ke({tanh_:function(t){const e=$e(t,"x","tanh");return Pt.runKernelFunc((t,n)=>{const r=t.tanh(e);return n([r]),r},{x:e},(t,e)=>{const[n]=e;return{x:()=>Fe(1).sub(n.square()).mul(t)}},"Tanh",{},null,[!0])}}),ur={kernelName:"Atan2",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=be(n.shape,r.shape);return{a:()=>{const e=Ie(Rn(n),Rn(r));let i=on(t,an(r,e));const a=me(n.shape,s);return a.length>0&&(i=Sn(i,a)),Qe(i,n.shape)},b:()=>{const e=Ie(Rn(n),Rn(r));let i=jn(on(t,an(n,e)));const a=me(r.shape,s);return a.length>0&&(i=Sn(i,a)),Qe(i,r.shape)}}}};function cr(t,e,n,r,s,i,a="channelsLast"){const[o,l]=gr(e);let u;if("channelsLast"===a)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,t[1],t[1]]}return dr(t,u,n,r,s,i,!1,a)}function hr(t,e,n,r,s,i,a="NDHWC"){const[o,l,u]=mr(e);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return pr(t,c,n,r,s,!1,h,i)}function dr(t,e,n,r,s,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[d,p,,f]=e,[g,m]=gr(n),[b,y]=gr(r),x=br(d,b),v=br(p,y),{padInfo:w,outHeight:$,outWidth:C}=function(t,e,n,r,s,i,a,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=fr(t,e,n));const i=t[1],a=yr((t[0]-e+2*r)/n+1,s);M(U(a),()=>`The output # of rows (${a}) must be an integer. Change the stride and/or zero pad parameters`);const o=yr((i-e+2*r)/n+1,s);return M(U(o),()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`),[a,o]}([e,n],i,r,t,o);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+i-e),o=Math.max(0,(h-1)*s+a-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],g="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=yr((e-i+d+p)/r+1,o),h=yr((n-a+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,x,v,i,o),k=a?f*h:f;let I;return"channelsFirst"===o?I=[l,k,$,C]:"channelsLast"===o&&(I=[l,$,C,k]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:$,outWidth:C,outChannels:k,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:t,outShape:I,filterShape:e}}function pr(t,e,n,r,s,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=t}const[p,f,g,,m]=e,[b,y,x]=mr(n),[v,w,$]=mr(r),C=br(p,v),k=br(f,w),I=br(g,$),{padInfo:S,outDepth:E,outHeight:R,outWidth:A}=function(t,e,n,r,s,i,a,o,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const i=function(t,e,n,r,s,i){null==s&&(s=fr(t,e,r));const a=t[1],o=t[2],l=yr((t[0]-e+2*s)/r+1,i);M(U(l),()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`);const u=yr((a-e+2*s)/r+1,i);M(U(u),()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`);const c=yr((o-e+2*s)/r+1,i);return M(U(c),()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`),[l,u,c,1]}([e,n,r,1],o,0,s,t,c);d=i[0],p=i[1],f=i[2]}else if("same"===t){d=Math.ceil(e/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const t=(d-1)*s+o-e,c=(p-1)*i+l-n,g=(f-1)*a+u-r,m=Math.floor(t/2),b=t-m,y=Math.floor(c/2),x=c-y,v=Math.floor(g/2);h={top:y,bottom:x,left:v,right:g-v,front:m,back:b,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/s),p=Math.ceil((n-l+1)/i),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,x,C,k,I,o),N=i?m*d:m;let T;return"channelsFirst"===a?T=[l,N,E,R,A]:"channelsLast"===a&&(T=[l,E,R,A,N]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:E,outHeight:R,outWidth:A,outChannels:N,padInfo:S,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:C,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:w,dilationWidth:$,inShape:t,outShape:T,filterShape:e}}function fr(t,e,n,r=1){const s=br(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function gr(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function mr(t){return"number"==typeof t?[t,t,t]:t}function br(t,e){return e<=1?t:t+(t-1)*(e-1)}function yr(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function xr(t){const[e,n,r]=gr(t);return 1===e&&1===n&&1===r}function vr(t,e){return xr(t)||xr(e)}function wr(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const $r=ke({avgPool3dBackprop_:function(t,e,n,r,s=[1,1,1],i,a){const o=$e(t,"dy","avgPool3dBackprop"),l=$e(e,"input","avgPool3dBackprop");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=Qe(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Qe(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),M(5===u.rank,()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${u.rank}.`),M(5===c.rank,()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${c.rank}.`),M(vr(r,s),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${s}'`),null!=a&&M(U(i),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`);const d=Pt.runKernelFunc(t=>{const e=hr(c.shape,n,r,s,i,a);return t.avgPool3dBackprop(u,c,e)},{dy:u,input:c},null,"AvgPool3DBackprop",{filterSize:n,strides:r,dilations:s,pad:i,dimRoundingMode:a});return h?Qe(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Cr={kernelName:Gt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,dilations:a,pad:o,dimRoundingMode:l}=n,u=null==a?[1,1,1]:a;return{x:()=>$r(t,r,s,i,u,o,l)}}},kr=ke({avgPoolBackprop_:function(t,e,n,r,s){const i=$e(t,"dy","avgPoolBackprop"),a=$e(e,"input","avgPoolBackprop");M(a.rank===i.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`);let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=Qe(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=Qe(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(4===l.rank,()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`),M(4===o.rank,()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${o.rank}.`);const c=Pt.runKernelFunc(t=>{const e=cr(o.shape,n,r,1,s);return t.avgPoolBackprop(l,o,e)},{dy:l,input:o},null,"AvgPoolBackprop",{filterSize:n,strides:r,pad:s});return u?Qe(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ir={kernelName:Vt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:i,pad:a}=n;return{x:()=>kr(t,r,s,i,a)}}},Sr=ke({matMul_:function(t,e,n=!1,r=!1){let s=$e(t,"a","matMul"),i=$e(e,"b","matMul");[s,i]=Ot(s,i),M(s.rank>=2&&i.rank>=2&&s.rank===i.rank,()=>`Error in matMul: inputs must have the same rank of at least 2, got ranks ${s.rank} and ${i.rank}.`);const a=n?s.shape[s.rank-2]:s.shape[s.rank-1],o=r?i.shape[i.rank-1]:i.shape[i.rank-2],l=n?s.shape[s.rank-1]:s.shape[s.rank-2],u=r?i.shape[i.rank-2]:i.shape[i.rank-1],c=s.shape.slice(0,-2),h=i.shape.slice(0,-2),d=P(c),p=P(h);M(W(c,h),()=>`Error in matMul: outer dimensions (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} must match.`),M(a===o,()=>`Error in matMul: inner shapes (${a}) and (${o}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${n} and transposeB=${r} must match.`);const f=s.shape.slice(0,-2).concat([l,u]),g=Qe(s,n?[d,a,l]:[d,l,a]),m=Qe(i,r?[p,u,o]:[p,o,u]),b=Pt.runKernelFunc((t,e)=>(e([g,m]),t.batchMatMul(g,m,n,r)),{a:g,b:m},null,Ht,{transposeA:n,transposeB:r});return Qe(b,f)}}),Er={kernelName:Ht,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Sr(t,s,!1,!1),b:()=>Sr(t,r,!0,!1)}:i&&!a?{a:()=>Sr(s,t,!1,!0),b:()=>Sr(r,t,!1,!1)}:{a:()=>Sr(s,t,!0,!0),b:()=>Sr(t,r,!0,!0)}:{a:()=>Sr(t,s,!1,!0),b:()=>Sr(r,t,!0,!1)}}},Rr=ke({spaceToBatchND_:function(t,e,n){const r=$e(t,"x","spaceToBatchND");return M(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),M(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),M(r.shape.reduce((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`),Pt.runKernelFunc(t=>t.spaceToBatchND(r,e,n),{x:r},null,ce,{blockShape:e,paddings:n})}}),Ar={kernelName:qt,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Rr(t,r,s)}}},Nr={kernelName:jt,gradFunc:(t,e,n)=>{const r=n.inputShape,s=n.shape,i=Array.from(s);for(let o=r.length-1;o>=0;o--)if(r[o]===s[o])i[o]=1;else if(1!==r[o])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);const a=[];for(let o=0;o<i.length;o++)i[o]>1&&a.push(o);return{x:()=>Sn(t,a,!0)}}},Tr=ke({split_:function(t,e,n=0){const r=$e(t,"x","split"),s=j(n,r.shape)[0];let i;return"number"==typeof e?(M(r.shape[s]%e==0,()=>"Number of splits must evenly divide the axis."),i=new Array(e).fill(r.shape[s]/e)):(M(r.shape[s]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),i=e),Pt.runKernelFunc((t,e)=>t.split(r,i,s),{x:r},null,"SplitV",{numOrSizeSplits:e,axis:n})}}),Dr={kernelName:"Concat",saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:s}=n,i=j(s,e[0].shape)[0],a=r.map(t=>t[i]);return Tr(t,a,i).map(t=>()=>t)}},Fr=ke({conv2DBackpropFilter_:function(t,e,n,r,s,i="NHWC",a){let o=t;3===t.rank&&(o=Qe(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=Qe(e,[1,e.shape[0],e.shape[1],e.shape[2]])),M(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),M(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),M(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];return M(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),M(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=a&&M(U(s),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`),Pt.runKernelFunc(t=>{const e=wr(i),u=dr(o.shape,n,r,1,s,a,!1,e);return t.conv2dDerFilter(o,l,u)},{x:o,dy:l},null,"Conv2DBackpropFilter",{strides:r,pad:s,dataFormat:i,dimRoundingMode:a})}}),_r=ke({conv2DBackpropInput_:function(t,e,n,r,s,i="NHWC",a){M(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=Qe(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),M(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),M(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),M(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];M(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),M(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),null!=a&&M(U(s),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`);const d=Pt.runKernelFunc((t,e)=>{const u=wr(i),c=dr(o,n.shape,r,1,s,a,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h},{dy:l,filter:n},null,Kt,{strides:r,pad:s,dataFormat:i,dimRoundingMode:a});return u?Qe(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Or={kernelName:"Conv2D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return M(xr(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>_r(r.shape,t,s,a,o,l),filter:()=>Fr(r,t,s.shape,a,o,l)}}},Mr=ke({conv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=$e(t,"x","conv2d"),l=$e(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Qe(o,[1,o.shape[0],o.shape[1],o.shape[2]])),M(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),M(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),null!=a&&M(U(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const h="NHWC"===s?u.shape[3]:u.shape[1];M(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),M(vr(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const d=Pt.runKernelFunc((t,e)=>{const o=wr(s),c=dr(u.shape,l.shape,n,i,r,a,!1,o),h=t.conv2d(u,l,c);return e([u,l]),h},{x:u,filter:l},null,"Conv2D",{strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a});return c?Qe(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Lr={kernelName:Kt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Mr(t,s,i,a,o,1,l),filter:()=>Fr(t,r,s.shape,i,a,o,l)}}},zr=ke({conv3DBackpropFilter_:function(t,e,n,r,s){let i=t;4===t.rank&&(i=Qe(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let a=e;return 4===a.rank&&(a=Qe(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),M(5===i.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),M(5===a.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),M(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),M(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),M(a.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`),Pt.runKernelFunc(t=>{const e=pr(i.shape,n,r,1,s);return t.conv3dDerFilter(i,a,e)},{x:i,y:a},null,"Conv3DBackpropFilterV2",{strides:r,pad:s})}}),Br=ke({conv3DBackpropInput_:function(t,e,n,r,s){M(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let i=t,a=e,o=!1;4===e.rank&&(o=!0,a=Qe(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,t[0],t[1],t[2],t[3]]);const l=i[4],u=a.shape[4];M(5===i.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),M(5===a.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),M(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),M(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),M(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);const c=Pt.runKernelFunc(t=>{const e=pr(i,n.shape,r,1,s);return t.conv3dDerInput(a,n,e)},{dy:a},null,"Conv3DBackpropInputV2",{pad:s});return o?Qe(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Pr={kernelName:"Conv3D",inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i}=n;M(xr(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[a,o]=e;return{x:()=>Br(a.shape,t,o,s,i),filter:()=>zr(a,t,o.shape,s,i)}}},Wr=ke({transpose_:function(t,e){const n=$e(t,"x","transpose");return null==e&&(e=n.shape.map((t,e)=>e).reverse()),M(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{M(t>=0&&t<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${e}`)}),n.rank<=1?n.clone():Pt.runKernelFunc(t=>t.transpose(n,e),{x:n},null,"Transpose",{perm:e})}}),Ur=ke({cumsum_:function(t,e=0,n=!1,r=!1){const s=$e(t,"x","cumsum");return Pt.runKernelFunc((t,i)=>{const a=fn([e],s.rank);let o=s;null!=a&&(o=Wr(s,a));const l=mn(1,s.rank)[0];let u=t.cumsum(o,l,n,r);return i([s]),null!=a&&(u=Wr(u,a)),u},{x:s},null,"Cumsum",{axis:e,exclusive:n,reverse:r})}}),Vr={kernelName:"Cumsum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const e=fn([s],r.rank);let n=Ur(t,s,i,!a);return null!=e&&(n=Wr(n,e)),n}}}},Gr=ke({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r){let s=t;3===t.rank&&(s=Qe(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let i=e;return 3===i.rank&&(i=Qe(e,[1,e.shape[0],e.shape[1],e.shape[2]])),Pt.runKernelFunc(t=>t.depthwiseConv2DDerFilter(s,i,r),{x:s,dy:i},null,"DepthwiseConv2dNativeBackpropFilter")}}),Hr=ke({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r){let s=e,i=!1;3===e.rank&&(i=!0,s=Qe(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const a=Pt.runKernelFunc(t=>t.depthwiseConv2DDerInput(s,n,r),{dy:s},null,"DepthwiseConv2dNativeBackpropInput");return i?Qe(a,[a.shape[1],a.shape[2],a.shape[3]]):a}}),qr={kernelName:Xt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;M(xr(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;M(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),M(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),M(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),M(vr(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),null!=a&&M(U(i),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`);const c=dr(l.shape,u.shape,s,o,i,a,!0);return{x:()=>Hr(l.shape,t,u,c),filter:()=>Gr(l,t,u.shape,c)}}},jr={kernelName:Yt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=be(n.shape,r.shape);return{a:()=>{const e=an(t,r.toFloat()),i=me(n.shape,s);return i.length>0?Sn(e,i).reshape(n.shape):e},b:()=>{let e=on(t,n.toFloat());const i=me(r.shape,s);i.length>0&&(e=Qe(Sn(e,i),r.shape));const a=Rn(r);return jn(an(e,a.toFloat()))}}}},Kr={kernelName:"Elu",outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),s={dy:t,y:n};return{x:()=>Pt.runKernelFunc(r,s,null,"EluGrad")}}},Xr={kernelName:Jt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=be(n.shape,r.shape);return{a:()=>{const e=t.div(r.toFloat()),i=me(n.shape,s);return i.length>0?e.sum(i).reshape(n.shape):e},b:()=>{let e=t.mul(n.toFloat());const i=me(r.shape,s);i.length>0&&(e=e.sum(i).reshape(r.shape));const a=r.square();return e.div(a.toFloat()).neg()}}}},Yr=ke({sub_:function(t,e){let n=$e(t,"a","sub"),r=$e(e,"b","sub");return[n,r]=Ot(n,r),Pt.runKernelFunc((t,e)=>{const s=t.subtract(n,r);return e([n,r]),s},{a:n,b:r},null,"Sub")}}),Jr=ke({tile_:function(t,e){const n=$e(t,"x","tile",null);return M(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`),Pt.runKernelFunc((t,r)=>{const s=t.tile(n,e);return r([n]),s},{x:n},null,"Tile",{reps:e},[n])}}),Zr={kernelName:Zt,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=e,l=null==o?Fe(1):o,u=me(i.shape,s.shape),c=[];if(1===i.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=Yr(s,i),d=on(t,l),p=Yn(Ie(a,Fe(r))),f=on(on(on(p,p),p),Fe(-.5));return{x:()=>Qe(on(on(t,1===i.rank?Jr(p.as4D(1,1,1,i.shape[0]),c):p),l),s.shape),mean:()=>{let t=on(on(p,Fe(-1)),d);return 1===i.rank&&(t=Sn(t,u)),Qe(t,i.shape)},variance:()=>{let t=on(on(f,h),d);return 1===i.rank&&(t=Sn(t,u)),Qe(t,i.shape)},scale:()=>{const e=on(h,p);let n=on(t,e);return 1===i.rank&&(n=Sn(n,u)),Qe(n,i.shape)},offset:()=>{let e=t;return 1===i.rank&&(e=Sn(e,u)),Qe(e,i.shape)}}}},Qr={kernelName:Qt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>qe(n),b:()=>qe(r)}}},ts={kernelName:te,gradFunc:t=>({x:()=>t.toFloat()})},es=ke({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,i=1,a=.5){return Pt.runKernelFunc(o=>o.LRNGrad(n,t,e,r,s,i,a),{x:t,y:e,dy:n},null,"LRNBackprop",{depthRadius:r,bias:s,alpha:i,beta:a})}}),ns={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>es(r,s,t,i,a,o,l)}}},rs={kernelName:ee,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,[i,a]=e,o=j(s,i.shape),l=fn(o,i.rank),u=bn(t,a,i,o,l);return{x:()=>{let t=u.x();return null!=l&&(t=Wr(t)),t}}}},ss=ke({greaterEqual_:function(t,e){let n=$e(t,"a","greaterEqual"),r=$e(e,"b","greaterEqual");return[n,r]=Ot(n,r),be(n.shape,r.shape),Pt.runKernelFunc((t,e)=>{const s=t.greaterEqual(n,r);return e([n,r]),s},{a:n,b:r},null,Qt)}}),is=ke({less_:function(t,e){let n=$e(t,"a","less"),r=$e(e,"b","less");return[n,r]=Ot(n,r),be(n.shape,r.shape),Pt.runKernelFunc(t=>t.less(n,r),{a:n,b:r},null,"Less")}}),as={kernelName:ne,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>on(t,Je(ss(n,r),"float32")),b:()=>on(t,Je(is(n,r),"float32"))}}},os=ke({maxPool3dBackprop_:function(t,e,n,r,s,i=[1,1,1],a,o){const l=$e(t,"dy","maxPool3dBackprop"),u=$e(e,"input","maxPool3dBackprop"),c=$e(n,"output","maxPool3dBackprop");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=Qe(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Qe(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=Qe(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),M(5===h.rank,()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${h.rank}.`),M(5===d.rank,()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`),M(5===p.rank,()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${p.rank}.`),M(vr(s,i),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${i}'`),null!=o&&M(U(a),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const g=Pt.runKernelFunc(t=>{const e=hr(d.shape,r,s,i,a,o);return t.maxPool3dBackprop(h,d,p,e)},{dy:h,input:d,output:p},null,"MaxPool3DBackprop",{filterSize:r,strides:s,dilations:i,pad:a,dimRoundingMode:o});return f?Qe(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),ls={kernelName:se,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>os(t,r,s,i,a,c,l,u)}}},us=ke({maxPoolBackprop_:function(t,e,n,r,s,i,a){const o=$e(t,"dy","maxPoolBackprop"),l=$e(e,"input","maxPoolBackprop"),u=$e(n,"output","maxPoolBackprop");return M(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),M(4===o.rank,()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${o.rank}.`),M(4===l.rank,()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${l.rank}.`),null!=a&&M(U(i),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${i}.`),Pt.runKernelFunc(t=>{const e=cr(l.shape,r,s,1,i,a);return t.maxPoolBackprop(o,l,u,e)},{dy:o,input:l,output:u},null,"MaxPoolBackprop",{filterSize:r,strides:s,pad:i,dimRoundingMode:a})}}),cs={kernelName:re,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o}=n;return{x:()=>us(t,r,s,i,a,o)}}},hs=ke({greater_:function(t,e){let n=$e(t,"a","greater"),r=$e(e,"b","greater");return[n,r]=Ot(n,r),be(n.shape,r.shape),Pt.runKernelFunc(t=>t.greater(n,r),{a:n,b:r},null,"Greater")}}),ds=ke({lessEqual_:function(t,e){let n=$e(t,"a","lessEqual"),r=$e(e,"b","lessEqual");return[n,r]=Ot(n,r),be(n.shape,r.shape),Pt.runKernelFunc((t,e)=>{const s=t.lessEqual(n,r);return e([n,r]),s},{a:n,b:r},null,"LessEqual")}}),ps={kernelName:ae,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>on(t,Je(ds(n,r),"float32")),b:()=>on(t,Je(hs(n,r),"float32"))}}},fs={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=be(n.shape,r.shape);return{a:()=>{const e=me(n.shape,s);return e.length>0?Qe(Sn(t,e),n.shape):t},b:()=>{const e=on(t,jn(Vn(an(n,r)))),i=me(r.shape,s);return i.length>0?Qe(Sn(e,i),r.shape):e}}}},gs={kernelName:oe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=be(n.shape,r.shape);return{a:()=>{const e=on(t,Je(r,"float32")),i=me(n.shape,s);return i.length>0?Qe(Sn(e,i),n.shape):e},b:()=>{const e=on(t,Je(n,"float32")),i=me(r.shape,s);return i.length>0?Qe(Sn(e,i),r.shape):e}}}},ms={kernelName:"OneHot",inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Ue(n.shape,"float32")}}},bs={kernelName:"PadV2",inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,i=s.map(t=>t[0]);return{x:()=>t.slice(i,r.shape)}}};function ys(t,e){const n=[];for(let i=0;i<e.length;i++)e[i]&&n.push(i);const r=Xe(t,"int32"),s=Xe([n.length,t.length],"int32");for(let i=0;i<n.length;i++){const e=r.indexToLoc(n[i]);s.values.set(e,i*t.length)}return s.toTensor()}function xs(){return(xs=b(function*(t){const e=$e(t,"condition","whereAsync","bool"),n=yield e.data(),r=ys(e.shape,n);return t!==e&&e.dispose(),r})).apply(this,arguments)}const vs=ke({logicalAnd_:function(t,e){const n=$e(t,"a","logicalAnd","bool"),r=$e(e,"b","logicalAnd","bool");return be(n.shape,r.shape),Pt.runKernelFunc(t=>t.logicalAnd(n,r),{a:n,b:r},null,"LogicalAnd")}}),ws=ke({logicalNot_:function(t){const e=$e(t,"x","logicalNot","bool");return Pt.runKernelFunc(t=>t.logicalNot(e),{$x:e})}}),$s=ke({logicalOr_:function(t,e){const n=$e(t,"a","logicalOr","bool"),r=$e(e,"b","logicalOr","bool");return be(n.shape,r.shape),Pt.runKernelFunc(t=>t.logicalOr(n,r),{$a:n,$b:r})}}),Cs=ke({logicalXor_:function(t,e){const n=$e(t,"a","logicalXor","bool"),r=$e(e,"b","logicalXor","bool");return be(n.shape,r.shape),$s(t,e).logicalAnd(vs(t,e).logicalNot())}}),ks=ke({where_:function(t,e,n){const r=$e(e,"a","where"),s=$e(n,"b","where"),i=$e(t,"condition","where","bool");return L(r.shape,s.shape,"Error in where: "),1===i.rank?M(i.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."):L(i.shape,s.shape,"Error in where: "),Pt.runKernelFunc((t,e)=>{const n=t.select(i,r,s);return e([i]),n},{condition:i,t:r,e:s},(t,e)=>{const[n]=e;return{condition:()=>qe(n).toFloat(),t:()=>t.mul(n.cast(t.dtype)),e:()=>t.mul(n.logicalNot().cast(t.dtype))}},"SelectV2")}}),Is=function(t){return xs.apply(this,arguments)},Ss=ke({pow_:function(t,e){let n=$e(t,"base","pow"),r=$e(e,"exp","pow");return[n,r]=Ot(n,r),Pt.runKernelFunc((t,e)=>{const s=t.pow(n,r);return e([n,r,s]),s},{a:n,b:r},null,"Pow")}}),Es={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,i=n,a=r,o=be(i.shape,a.shape);return{a:()=>{const e=Je(a,"float32");let n=on(t,on(e,Ss(i,Yr(e,Fe(1)))));const r=me(i.shape,o);return r.length>0&&(n=Sn(n,r)),Qe(n,i.shape)},b:()=>{const e=hs(i,0),n=ks(e,Gn(i),qe(i));let r=on(t,on(s,n));const l=me(a.shape,o);return l.length>0&&(r=Sn(r,l)),Qe(r,a.shape)}}}},Rs={kernelName:"Prelu",inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=hs(n,0);return{x:()=>ks(s,t,on(t,r)),alpha:()=>{let e=ks(s,qe(t),on(t,n));const i=me(r.shape,t.shape);return i.length>0&&(e=Sn(e,i)),Qe(e,r.shape)}}}},As={kernelName:"Relu6",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=on(ds(n,6),ar(n));return{x:()=>on(t,Je(r,"float32"))}}},Ns={kernelName:"Relu",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>on(t,Je(ar(n),"float32"))}}},Ts=1.7580993408473768,Ds=1.0507009873554805,Fs={kernelName:"Selu",inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=hs(n,Fe(0)),r=Fe(Ts),s=Fe(Ds),i=on(t,s),a=on(on(t,r),Wn(Je(n,"float32")));return ks(e,i,a)}}}},_s=ke({batchToSpaceND_:function(t,e,n){const r=$e(t,"x","batchToSpaceND"),s=e.reduce((t,e)=>t*e);return M(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),M(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),M(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`),Pt.runKernelFunc(t=>t.batchToSpaceND(r,e,n),{x:r},null,qt,{blockShape:e,crops:n})}}),Os={kernelName:ce,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>_s(t,r,s)}}},Ms={kernelName:"SplitV",gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>je(t,r)}}},Ls={kernelName:de,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>on(t,on(n.toFloat(),2))}}},zs={kernelName:he,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Fe(2);return{a:()=>on(t,on(s,Yr(n,r))),b:()=>on(t,on(s,Yr(r,n)))}}},Bs={kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=be(n.shape,r.shape);return{a:()=>{let e=t;const r=me(n.shape,s);return r.length>0&&(e=Sn(e,r)),Qe(e,n.shape)},b:()=>{let e=t;const n=me(r.shape,s);return n.length>0&&(e=Sn(e,n)),Qe(jn(e),r.shape)}}}},Ps=ke({pad_:function(t,e,n=0){const r=$e(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return Pt.runKernelFunc((t,s)=>(s([r]),t.pad(r,e,n)),{x:r},null,"PadV2",{paddings:e,constantValue:n})}});function Ws(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Us(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Vs(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Gs(t,e,n,r,s,i){let a=e[s];(t&1<<s||i&1<<s||null==a)&&(a=(n[s]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const o=r[s];return a<0&&(a+=o),a=_(0,a,o-1),a}function Hs(t,e,n,r,s,i){let a=e[s];const o=n[s]||1;(t&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?_(0,a,l):_(-1,a,l-1),a}function qs(t,e,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function js(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}const Ks=ke({slice_:function(t,e,n){const r=$e(t,"x","slice");if(0===r.rank)throw new Error("Slicing scalar is not possible");let s,i;s="number"==typeof e?[e,...new Array(r.rank-1).fill(0)]:e.length<r.rank?e.concat(new Array(r.rank-e.length).fill(0)):e.slice(),s.forEach(t=>{M(-1!==t,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(r.rank).fill(-1):"number"==typeof n?[n,...new Array(r.rank-1).fill(-1)]:n.length<r.rank?n.concat(new Array(r.rank-n.length).fill(-1)):n,i=i.map((t,e)=>t>=0?t:(M(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${e}.`),r.shape[e]-s[e])),function(t,e,n){M(t.rank===e.length,()=>`Error in slice${t.rank}D: Length of begin ${e} must match the rank of the array (${t.rank}).`),M(t.rank===n.length,()=>`Error in slice${t.rank}D: Length of size ${n} must match the rank of the array (${t.rank}).`);for(let r=0;r<t.rank;++r)M(e[r]+n[r]<=t.shape[r],()=>`Error in slice${t.rank}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`)}(r,s,i);const a=r.shape;return Pt.runKernelFunc(t=>t.slice(r,s,i),{x:r},t=>{const e=[];for(let n=0;n<t.rank;n++)e.push([s[n],a[n]-s[n]-i[n]]);return{x:()=>Ps(t,e)}},"Slice",{begin:s,size:i})}}),Xs=ke({slice1d_:function(t,e,n){const r=$e(t,"x","slice1d");return M(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Ks(r,[e],[n])}}),Ys=ke({slice2d_:function(t,e,n){const r=$e(t,"x","slice2d");return M(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Ks(r,e,n)}}),Js=ke({slice3d_:function(t,e,n){const r=$e(t,"x","slice3d");return M(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Ks(r,e,n)}}),Zs=ke({slice4d_:function(t,e,n){const r=$e(t,"x","slice4d");return M(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Ks(r,e,n)}}),Qs=[ye,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},ur,Ir,Cr,Er,Ar,Nr,Dr,Or,Lr,Pr,Vr,qr,jr,Kr,Xr,Zr,Qr,ts,ns,ms,bs,Ms,rs,Os,rs,as,cs,ls,ps,fs,gs,ms,bs,Es,Rs,Ns,As,Fs,Os,Ms,Ls,zs,{kernelName:"Tile",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=qe(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Ie(e,Ks(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)e=Ie(e,Ks(t,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)e=Ie(e,Ks(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)e=Ie(e,Ks(t,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:pe,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,i=gn(s);return{x:()=>Wr(t,i)}}},Bs];for(const tc of Qs)T(tc);v().get("IS_BROWSER")&&v().setPlatform("browser",new class{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}});let ti;function ei(t,e){return ni.apply(this,arguments)}function ni(){return(ni=b(function*(t,e){const n=[],r=[],s=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(t)?t[i].tensor:t[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const l={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise(function(){var t=b(function*(t){const e=yield o.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let s=0;for(let i=0;i<e.length;i++){const t=e[i],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,s),s+=4,r.set(t,s),s+=t.length}t(r)});return function(e){return t.apply(this,arguments)}}());r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:ri(yield Promise.all(r)),specs:n}})).apply(this,arguments)}function ri(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)});const r=new Uint8Array(e);let s=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength}),r.buffer}v().get("IS_NODE")&&v().setPlatform("node",new class{constructor(){this.util=n(48628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=v().global.fetch?v().global.fetch(t,e):(null==ti&&(ti=n(75410)),ti(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const si="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ii(t){return si?Buffer.byteLength(t):new Blob([t]).size}function ai(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function oi(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:ii(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:ii(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class li{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==li.instance&&(li.instance=new li),li.instance}static registerSaveRouter(t){li.getInstance().saveRouters.push(t)}static registerLoadRouter(t){li.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return li.getHandlers(t,"save")}static getLoadHandlers(t,e){return li.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?li.getInstance().loadRouters:li.getInstance().saveRouters).forEach(e=>{const s=e(t,n);null!==s&&r.push(s)}),r}}class ui{constructor(){this.managers={}}static getInstance(){return null==ui.instance&&(ui.instance=new ui),ui.instance}static registerManager(t,e){M(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),M(t.length>0,()=>"scheme must not be an empty string.");const n=ui.getInstance();M(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}const ci="tensorflowjs",hi="models_store",di="model_info_store";function pi(){if(!v().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function fi(t){const e=t.result;e.createObjectStore(hi,{keyPath:"modelPath"}),e.createObjectStore(di,{keyPath:"modelPath"})}let gi=(()=>{class t{constructor(t){if(this.indexedDB=pi(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}save(t){var e=this;return b(function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return e.databaseAction(e.modelPath,t)})()}load(){var t=this;return b(function*(){return t.databaseAction(t.modelPath)})()}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open(ci,1);r.onupgradeneeded=()=>fi(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(hi,"readonly"),r=e.objectStore(hi).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=oi(e),i=s.transaction(di,"readwrite");let a=i.objectStore(di);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(hi,"readwrite");const o=l.objectStore(hi).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{a=i.objectStore(di);const e=a.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(o.error)),e.onerror=t=>(s.close(),n(o.error))}},o.onerror=t=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)})}}return t.URL_SCHEME="indexeddb://",t})();const mi=t=>v().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(gi.URL_SCHEME)?function(t){return new gi(t)}(t.slice(gi.URL_SCHEME.length)):null;li.registerSaveRouter(mi),li.registerLoadRouter(mi);class bi{constructor(){this.indexedDB=pi()}listModels(){var t=this;return b(function*(){return new Promise((e,n)=>{const r=t.indexedDB.open(ci,1);r.onupgradeneeded=()=>fi(r),r.onsuccess=()=>{const t=r.result,s=t.transaction(di,"readonly"),i=s.objectStore(di).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(t.close(),n(i.error)),s.oncomplete=()=>t.close()},r.onerror=t=>n(r.error)})})()}removeModel(t){var e=this;return b(function*(){return t=(n=t).startsWith(gi.URL_SCHEME)?n.slice(gi.URL_SCHEME.length):n,new Promise((n,r)=>{const s=e.indexedDB.open(ci,1);s.onupgradeneeded=()=>fi(s),s.onsuccess=()=>{const e=s.result,i=e.transaction(di,"readwrite"),a=i.objectStore(di),o=a.get(t);let l;o.onsuccess=()=>{if(null==o.result)return e.close(),r(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const s=a.delete(t),i=()=>{l=e.transaction(hi,"readwrite");const s=l.objectStore(hi).delete(t);s.onsuccess=()=>n(o.result.modelArtifactsInfo),s.onerror=t=>r(o.error)};s.onsuccess=i,s.onerror=t=>(i(),e.close(),r(o.error))}},o.onerror=t=>(e.close(),r(o.error)),i.oncomplete=()=>{null==l?e.close():l.oncomplete=()=>e.close()}},s.onerror=t=>r(s.error)});var n})()}}if(v().getBool("IS_BROWSER"))try{ui.registerManager(gi.URL_SCHEME,new bi)}catch(Ub){}const yi="/",xi="tensorflowjs_models",vi="info",wi="model_topology",$i="weight_specs",Ci="weight_data",ki="model_metadata";function Ii(t){return{info:[xi,t,vi].join(yi),topology:[xi,t,wi].join(yi),weightSpecs:[xi,t,$i].join(yi),weightData:[xi,t,Ci].join(yi),modelMetadata:[xi,t,ki].join(yi)}}function Si(t){const e=t.split(yi);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(yi)}let Ei=(()=>{class t{constructor(t){if(!v().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Ii(this.modelPath)}save(t){var e=this;return b(function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const r=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),i=oi(t);try{return e.LS.setItem(e.keys.info,JSON.stringify(i)),e.LS.setItem(e.keys.topology,r),e.LS.setItem(e.keys.weightSpecs,s),e.LS.setItem(e.keys.weightData,function(t){if(si)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let r=0,s=e.length;r<s;r++)n+=String.fromCharCode(e[r]);return btoa(n)}(t.weightData)),e.LS.setItem(e.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:i}}catch(n){throw e.LS.removeItem(e.keys.info),e.LS.removeItem(e.keys.topology),e.LS.removeItem(e.keys.weightSpecs),e.LS.removeItem(e.keys.weightData),e.LS.removeItem(e.keys.modelMetadata),new Error(`Failed to save model '${e.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}})()}load(){var t=this;return b(function*(){const e=JSON.parse(t.LS.getItem(t.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${t.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},r=JSON.parse(t.LS.getItem(t.keys.topology));if(null==r)throw new Error(`In local storage, the topology of model '${t.modelPath}' is missing.`);n.modelTopology=r;const s=JSON.parse(t.LS.getItem(t.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${t.modelPath}' are missing.`);n.weightSpecs=s;const i=t.LS.getItem(t.keys.modelMetadata);if(null!=i){const t=JSON.parse(i);n.format=t.format,n.generatedBy=t.generatedBy,n.convertedBy=t.convertedBy,n.userDefinedMetadata=t.userDefinedMetadata}const a=t.LS.getItem(t.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${t.modelPath}' are missing.`);return n.weightData=function(t){if(si){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n.set([e.charCodeAt(r)],r);return n.buffer}(a),n})()}}return t.URL_SCHEME="localstorage://",t})();const Ri=t=>v().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ei.URL_SCHEME)?function(t){return new Ei(t)}(t.slice(Ei.URL_SCHEME.length)):null;li.registerSaveRouter(Ri),li.registerLoadRouter(Ri);class Ai{constructor(){M(v().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),M("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var t=this;return b(function*(){const e={},n=xi+yi,r=yi+vi;for(let s=0;s<t.LS.length;++s){const i=t.LS.key(s);i.startsWith(n)&&i.endsWith(r)&&(e[Si(i)]=JSON.parse(t.LS.getItem(i)))}return e})()}removeModel(t){var e=this;return b(function*(){var n;const r=Ii(t=(n=t).startsWith(Ei.URL_SCHEME)?n.slice(Ei.URL_SCHEME.length):n);if(null==e.LS.getItem(r.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(e.LS.getItem(r.info));return e.LS.removeItem(r.info),e.LS.removeItem(r.topology),e.LS.removeItem(r.weightSpecs),e.LS.removeItem(r.weightData),s})()}}if(v().getBool("IS_BROWSER"))try{ui.registerManager(Ei.URL_SCHEME,new Ai)}catch(Ub){}function Ni(t){return new Promise(t=>setTimeout(t)).then(t)}let Ti=(()=>{class t{constructor(e){if(!v().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(t.URL_SCHEME)&&(e=e.slice(t.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}save(t){var e=this;return b(function*(){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=window.URL.createObjectURL(new Blob([JSON.stringify({modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:[{paths:["./"+e.weightDataFileName],weights:t.weightSpecs}]})],{type:"application/json"})),s=null==e.jsonAnchor?document.createElement("a"):e.jsonAnchor;if(s.download=e.modelTopologyFileName,s.href=r,yield Ni(()=>s.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==e.weightDataAnchor?document.createElement("a"):e.weightDataAnchor;t.download=e.weightDataFileName,t.href=n,yield Ni(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:oi(t)}}})()}}return t.URL_SCHEME="downloads://",t})();function Di(t,e,n,r){var s;M(null!=(s=t)&&Array.isArray(s)&&s.length>0,()=>"promises must be a none empty array"),function(t,e){M(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`),M(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`),M(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`)}(n=null==n?0:n,r=null==r?1:r);let i=0;return Promise.all(t.map(s=>(s.then(s=>{const a=n+ ++i/t.length*(r-n);return e(a),s}),s)))}function Fi(t,e){return _i.apply(this,arguments)}function _i(){return(_i=b(function*(t,e){null==e&&(e={});const n=null==e.fetchFunc?v().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),s=(null==e.onProgress?yield Promise.all(r):yield Di(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?yield Promise.all(s):yield Di(s,e.onProgress,.5,1)})).apply(this,arguments)}li.registerSaveRouter(t=>v().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ti.URL_SCHEME)?function(t="model"){return new Ti(t)}(t.slice(Ti.URL_SCHEME.length)):null);let Oi=(()=>{class t{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,null!=e.fetchFunc?(M("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=v().platform.fetch,M(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&M(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}save(t){var e=this;return b(function*(){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:e.DEFAULT_METHOD},e.requestInit);n.body=new FormData,n.body.append("model.json",new Blob([JSON.stringify({modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:[{paths:["./model.weights.bin"],weights:t.weightSpecs}]})],{type:"application/json"}),"model.json"),null!=t.weightData&&n.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=yield e.fetch(e.path,n);if(r.ok)return{modelArtifactsInfo:oi(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)})()}load(){var t=this;return b(function*(){const e=yield t.fetch(t.path,t.requestInit);if(!e.ok)throw new Error(`Request to ${t.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=yield e.json()}catch(h){let e=`Failed to parse model JSON of response from ${t.path}.`;throw t.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const r=n.modelTopology,s=n.weightsManifest,i=n.generatedBy,a=n.convertedBy,o=n.format,l=n.userDefinedMetadata;if(null==r&&null==s)throw new Error(`The JSON from HTTP path ${t.path} contains neither model topology or manifest for weights.`);let u,c;return null!=s&&([u,c]=yield t.loadWeights(s)),{modelTopology:r,weightSpecs:u,weightData:c,userDefinedMetadata:l,generatedBy:i,convertedBy:a,format:o}})()}loadWeights(t){var e=this;return b(function*(){const n=Array.isArray(e.path)?e.path[1]:e.path,[r,s]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(n),i=e.weightPathPrefix||r,a=[];for(const e of t)a.push(...e.weights);const o=[];return t.forEach(t=>{t.paths.forEach(t=>{o.push(i+t+s)})}),[a,ai(yield Fi(o,{requestInit:e.requestInit,fetchFunc:e.fetch,onProgress:e.onProgress}))]})()}}return t.URL_SCHEME_REGEX=/^https?:\/\//,t})();function Mi(t){return null!=t.match(Oi.URL_SCHEME_REGEX)}const Li=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>Mi(t)):Mi(t),n)return function(t,e){return new Oi(t,e)}(t,e)}return null};li.registerSaveRouter(Li),li.registerLoadRouter(Li);const zi=ke({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);let s=$e(t,"indices","oneHot","int32");const i=[...s.shape,e];return s=s.flatten(),Pt.runKernelFunc((t,a)=>(a([s]),Qe(t.oneHot(s,e,n,r),i)),{indices:s},null,"OneHot",{depth:e,onValue:n,offValue:r})}});let Bi;ke({confusionMatrix_:function(t,e,n){const r=$e(t,"labels","confusionMatrix"),s=$e(e,"predictions","confusionMatrix");M(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),M(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),M(1===s.rank,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),M(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),M(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const i=zi(r.asType("int32"),n),a=zi(s.asType("int32"),n);return i.transpose().matMul(a).asType("int32")}}),ke({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,i=!1,a=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)i=!0;else{if(null==t.getContext)throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);a=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=E(fe,Pt.backendName))return Pt.runKernel(fe,{pixels:t},{numChannels:e});const[o,l]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let u,c;if(a?u=t.getContext("2d").getImageData(0,0,o,l).data:r||n?u=t.data:(i||s)&&(null==Bi&&(Bi=document.createElement("canvas").getContext("2d")),Bi.canvas.width=o,Bi.canvas.height=l,Bi.drawImage(t,0,0,o,l),u=Bi.getImageData(0,0,o,l).data),4===e)c=new Int32Array(u);else{const t=o*l;c=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)c[n*e+t]=u[4*n+t]}return Me(c,[l,o,e],"int32")}});class Pi{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Wi{constructor(){this.classNameMap={}}static getMap(){return null==Wi.instance&&(Wi.instance=new Wi),Wi.instance}static register(t){Wi.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Ui(t){M(null!=t.className,()=>"Class being registered does not have the static className property defined."),M("string"==typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),M(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Wi.register(t)}function Vi(t){v().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Gi(){return Pt}function Hi(){return Pt.memory()}function qi(t,e){return Pt.tidy(t,e)}function ji(t){Mt(t).forEach(t=>t.dispose())}function Ki(t){return Pt.keep(t)}function Xi(t,e,n=1){return Pt.registerBackend(t,e,n)}It=Vi;const Yi=ke({addN_:function(t){M(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),M(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((t,e)=>$e(t,`tensors${e}`,"addN")),n=e[0];return e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!W(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),Pt.runKernelFunc((t,n)=>{const r=t.addN(e);return n(e),r},e,null,"AddN")}}),Ji=ke({atan2_:function(t,e){let n=$e(t,"a","atan2"),r=$e(e,"b","atan2");return[n,r]=Ot(n,r),Pt.runKernelFunc((t,e)=>{const s=t.atan2(n,r);return e([n,r]),s},{a:n,b:r},null,"Atan2")}}),Zi=ke({avgPool_:function(t,e,n,r,s){const i=$e(t,"x","avgPool","float32");M(vr(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let a=i,o=!1;3===i.rank&&(o=!0,a=Qe(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(4===a.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),null!=s&&M(U(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let l=Pt.runKernelFunc((t,i)=>{const o=cr(a.shape,e,n,1,r,s);return i([a]),1===o.filterWidth&&1===o.filterHeight&&W(o.inShape,o.outShape)?a.clone():t.avgPool(a,o)},{x:a},null,Vt,{filterSize:e,strides:n,pad:r,dimRoundingMode:s});return l=Je(l,i.dtype),o?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}}),Qi=ke({avgPool3d_:function(t,e,n,r,s,i="NDHWC",a){null==a?a=[1,1,1]:Vi("dilations is deprecated, this field will be gone in v3.0.0.");const o=$e(t,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=Qe(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),M(5===l.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),M("NDHWC"===i,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),M(vr(n,a),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=s&&M(U(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);let c=Pt.runKernelFunc((t,o)=>{null==a&&(a=[1,1,1]);const u=hr(l.shape,e,n,a,r,s,i);return o([l]),t.avgPool3d(l,u)},{x:l},null,Gt,{filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:a});return c=Je(c,l.dtype),u?c.as4D(c.shape[1],c.shape[2],c.shape[3],c.shape[4]):c}});function ta(t){return null==t?null:0===t.rank?t.as1D():1===t.rank?t:2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t}const ea=ke({batchNorm_:function(t,e,n,r,s,i){null==i&&(i=.001);const a=$e(t,"x","batchNorm"),o=$e(e,"mean","batchNorm"),l=$e(n,"variance","batchNorm");let u,c;null!=s&&(u=$e(s,"scale","batchNorm")),null!=r&&(c=$e(r,"offset","batchNorm")),M(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),M(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),M(null==u||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(t){let e;return e=0===t.rank||1===t.rank?t.as4D(1,1,1,t.size):2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t,e}(a),d=Pt.runKernelFunc((t,e)=>(e([h,o,l,u]),t.batchNorm(h,ta(o),ta(l),ta(c),ta(u),i)),{x:h,scale:u,offset:c,mean:o,variance:l},null,Zt,{varianceEpsilon:i});return Qe(d,a.shape)}}),na=ke({batchNorm2d_:function(t,e,n,r,s,i){const a=$e(t,"x","batchNorm"),o=$e(e,"mean","batchNorm"),l=$e(n,"variance","batchNorm");let u,c;return null!=s&&(u=$e(s,"scale","batchNorm")),null!=r&&(c=$e(r,"offset","batchNorm")),M(2===a.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),M(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),M(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=u&&M(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&M(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),ea(a,o,l,c,u,i)}}),ra=ke({batchNorm3d_:function(t,e,n,r,s,i){const a=$e(t,"x","batchNorm"),o=$e(e,"mean","batchNorm"),l=$e(n,"variance","batchNorm");let u,c;return null!=s&&(u=$e(s,"scale","batchNorm")),null!=r&&(c=$e(r,"offset","batchNorm")),M(3===a.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),M(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),M(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=u&&M(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&M(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),ea(a,o,l,c,u,i)}}),sa=ke({batchNorm4d_:function(t,e,n,r,s,i){const a=$e(t,"x","batchNorm"),o=$e(e,"mean","batchNorm"),l=$e(n,"variance","batchNorm");let u,c;return null!=s&&(u=$e(s,"scale","batchNorm")),null!=r&&(c=$e(r,"offset","batchNorm")),M(4===a.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),M(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),M(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=u&&M(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&M(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),ea(a,o,l,c,u,i)}}),ia=ke({clone_:function(t){const e=$e(t,"x","clone",null);return Pt.runKernelFunc(()=>Pt.makeTensorFromDataId(e.dataId,e.shape,e.dtype),{x:e},null,te)}}),aa=ke({broadcastTo_:function(t,e){let n=$e(t,"broadcastTo","x");const r=n.shape;if(e.some(t=>!(t>0)||t%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Qe(n,t)}const s=n.shape,i=Array.from(e);for(let a=e.length-1;a>=0;a--)if(s[a]===e[a])i[a]=1;else if(1!==n.shape[a])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);return 0===i.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length?ia(n):Pt.runKernelFunc(t=>t.tile(n,i),{x:n},null,jt,{shape:e,inputShape:s})}}),oa=ke({concat1d_:function(t){return je(t,0)}}),la=ke({concat2d_:function(t,e){return je(t,e)}}),ua=ke({concat3d_:function(t,e){return je(t,e)}}),ca=ke({concat4d_:function(t,e){return je(t,e)}}),ha=ke({conv1d_:function(t,e,n,r,s="NWC",i=1,a){const o=$e(t,"x","conv1d"),l=$e(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Qe(o,[1,o.shape[0],o.shape[1]])),M(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),M(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),null!=a&&M(U(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`),M(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),M(vr(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),M("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=Qe(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Qe(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Mr(d,h,[1,n],r,"NHWC",[1,i],a);return Qe(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),da=ke({conv2dTranspose_:function(t,e,n,r,s,i){const a=$e(t,"x","conv2dTranspose"),o=$e(e,"filter","conv2dTranspose");return _r(n,a,o,r,s,"NHWC",i)}}),pa=ke({conv3d_:function(t,e,n,r,s="NDHWC",i=[1,1,1]){const a=$e(t,"x","conv3d"),o=$e(e,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=Qe(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),M(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),M(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),M(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),M(vr(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),M("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c=Pt.runKernelFunc((t,e)=>{const s=pr(l.shape,o.shape,n,i,r),a=t.conv3d(l,o,s);return e([l,o]),a},{x:l,filter:o},null,"Conv3D",{strides:n,pad:r,dataFormat:s,dilations:i});return u?c.as4D(c.shape[1],c.shape[2],c.shape[3],c.shape[4]):c}}),fa=ke({conv3dTranspose_:function(t,e,n,r,s){const i=$e(t,"x","conv3dTranspose"),a=$e(e,"filter","conv3dTranspose");return Br(n,i,a,r,s)}}),ga=ke({depthToSpace_:function(t,e,n="NHWC"){const r=$e(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];return M(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`),M(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e} for depthToSpace with input shape\n        ${r.shape}`),M(a%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`),Pt.runKernelFunc(t=>t.depthToSpace(r,e,n),{x:r},null,"DepthToSpace",{blockSize:e,dataFormat:n})}}),ma=ke({depthwiseConv2d_:function(t,e,n,r,s="NHWC",i=[1,1],a){const o=$e(t,"x","depthwiseConv2d"),l=$e(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=Qe(o,[1,o.shape[0],o.shape[1],o.shape[2]])),M(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),M(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`),M(u.shape[3]===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),null!=a&&M(U(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const h=Pt.runKernelFunc((t,e)=>{null==i&&(i=[1,1]),M(vr(n,i),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const s=dr(u.shape,l.shape,n,i,r,a,!0),o=t.depthwiseConv2D(u,l,s);return e([u,l]),o},{x:u,filter:l},null,Xt,{strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a});return c?Qe(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),ba=ke({diag_:function(t){const e=$e(t,"x","diag").flatten();return Pt.runKernelFunc(n=>{const r=n.diag(e),s=[...t.shape,...t.shape];return Qe(r,s)},{x:e},null,"Diag")}}),ya=ke({divNoNan_:function(t,e){let n=$e(t,"a","div"),r=$e(e,"b","div");[n,r]=Ot(n,r);const s=an(n,r),i=qe(s),a=r.equal(i);return ks(a,i,s)}}),xa=ke({dot_:function(t,e){const n=$e(t,"t1","dot"),r=$e(e,"t2","dot");M(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(M(s===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`),1===n.rank&&1===r.rank){const t=Qe(n,[1,-1]),e=Qe(r,[-1,1]),s=Sr(t,e);return Qe(s,[])}if(1===n.rank&&2===r.rank){const t=Qe(n,[1,-1]),e=Qe(r,[r.shape[0],r.shape[1]]),s=Sr(t,e);return Qe(s,[s.size])}if(2===n.rank&&1===r.rank){const t=Qe(r,[-1,1]),e=Sr(n,t);return Qe(e,[e.size])}{const t=Qe(r,[r.shape[0],r.shape[1]]);return Sr(n,t)}}}),va=ke({elu_:function(t){const e=$e(t,"x","elu");return Pt.runKernelFunc((t,n)=>{const r=t.elu(e);return n([r]),r},{x:e},null,"Elu")}}),wa=ke({equal_:function(t,e){let n=$e(t,"a","equal"),r=$e(e,"b","equal");return[n,r]=Ot(n,r),be(n.shape,r.shape),Pt.runKernelFunc(t=>t.equal(n,r),{a:n,b:r},null,"Equal")}}),$a=ke({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=Xe([t,e],r),i=t<=e?t:e;for(let o=0;o<i;++o)s.set(1,o,o);const a=s.toTensor().as2D(t,e);if(null==n)return a;if(1===n.length)return Jr(Ze(a,0),[n[0],1,1]);if(2===n.length)return Jr(Ze(Ze(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Jr(Ze(Ze(Ze(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ca(t,e,n){return Pt.runKernelFunc(r=>r.fill(t,e,n),{},null,"Fill",{shape:t,value:e,dtype:n})}const ka=ke({maximum_:function(t,e){let n=$e(t,"a","maximum"),r=$e(e,"b","maximum");return[n,r]=Ot(n,r),"bool"===n.dtype&&(n=Je(n,"int32"),r=Je(r,"int32")),be(n.shape,r.shape),Pt.runKernelFunc((t,e)=>{const s=t.maximum(n,r);return e([n,r]),s},{a:n,b:r},null,ne)}}),Ia=ke({leakyRelu_:function(t,e=.2){const n=$e(t,"x","leakyRelu");return ka(on(Fe(e),n),n)}}),Sa=ke({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const i=$e(t,"x","localResponseNormalization");M(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`),M(U(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=i,o=!1;3===i.rank&&(o=!0,a=Qe(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l=Pt.runKernelFunc((t,i)=>{const o=t.localResponseNormalization4D(a,e,n,r,s);return i([a,o]),o},{x:a},null,"LRN",{depthRadius:e,bias:n,alpha:r,beta:s});return o?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}}),Ea=ke({max_:function(t,e=null,n=!1){const r=$e(t,"x","max"),s=Pt.runKernelFunc((t,n)=>{let s=j(e,r.shape);const i=fn(s,r.rank);let a=r;null!=i&&(a=Wr(r,i),s=mn(s.length,a.rank));const o=t.max(a,s);return n([r,o]),null!=i&&t.disposeData(a.dataId),o},{x:r},null,ee,{reductionIndices:e,keepDims:n});return n?Qe(s,dn(s.shape,j(e,r.shape))):s}}),Ra=ke({maxPool_:function(t,e,n,r,s){const i=$e(t,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=Qe(i,[1,i.shape[0],i.shape[1],i.shape[2]])),M(4===a.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),M(vr(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=s&&M(U(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const l=Pt.runKernelFunc((t,i)=>{const o=cr(a.shape,e,n,1,r,s);let l;return l=1===o.filterWidth&&1===o.filterHeight&&W(o.inShape,o.outShape)?a.clone():t.maxPool(a,o),i([a,l]),l},{x:a},null,re,{filterSize:e,strides:n,pad:r,dimRoundingMode:s});return o?Qe(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Aa=ke({maxPool3d_:function(t,e=[1,1,1],n,r,s,i="NDHWC",a){null==a?a=[1,1,1]:Vi("dilations is deprecated, this field will be gone in v3.0.0.");const o=$e(t,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),M(5===l.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),M("NDHWC"===i,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),M(vr(n,a),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),null!=s&&M(U(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const c=Pt.runKernelFunc((t,o)=>{null==a&&(a=[1,1,1]);const u=hr(l.shape,e,n,a,r,s,i),c=t.maxPool3d(l,u);return o([l,c]),c},{x:l},null,se,{filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:i,dilations:a});return u?Qe(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Na=ke({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const i={x:$e(t,"x","maxPoolWithArgmax")},a=Pt.runKernel(ie,i,{filterSize:e,strides:n,pad:r,includeBatchInIndex:s});return{result:a[0],indexes:a[1]}}}),Ta=ke({minimum_:function(t,e){let n=$e(t,"a","minimum"),r=$e(e,"b","minimum");return[n,r]=Ot(n,r),"bool"===n.dtype&&(n=Je(n,"int32"),r=Je(r,"int32")),be(n.shape,r.shape),Pt.runKernelFunc((t,e)=>{const s=t.minimum(n,r);return e([n,r]),s},{a:n,b:r},null,ae)}}),Da=ke({mod_:function(t,e){let n=$e(t,"a","mod"),r=$e(e,"b","mod");return[n,r]=Ot(n,r),Pt.runKernelFunc((t,e)=>{const s=t.mod(n,r);return e([n,r]),s},{a:n,b:r},null,"Mod")}}),Fa=ke({multinomial_:function(t,e,n,r=!1){const s=$e(t,"logits","multinomial"),i=s.size,a=s.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const o=1===a?s.as2D(1,-1):s,l=Pt.runKernelFunc(t=>t.multinomial(o,r,e,n),{logits2D:o});return 1===a?l.as1D():l}}),_a=ke({notEqual_:function(t,e){let n=$e(t,"a","notEqual"),r=$e(e,"b","notEqual");return[n,r]=Ot(n,r),be(n.shape,r.shape),Pt.runKernelFunc(t=>t.notEqual(n,r),{a:n,b:r},null,"NotEqual")}}),Oa=ke({outerProduct_:function(t,e){const n=$e(t,"v1","outerProduct"),r=$e(e,"v2","outerProduct");M(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=Qe(n,[-1,1]),i=Qe(r,[1,-1]);return Sr(s,i)}}),Ma=ke({pad1d_:function(t,e,n=0){return M(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Ps(t,[e],n)}}),La=ke({pad2d_:function(t,e,n=0){return M(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ps(t,e,n)}}),za=ke({pad3d_:function(t,e,n=0){return M(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ps(t,e,n)}}),Ba=ke({pad4d_:function(t,e,n=0){return M(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ps(t,e,n)}}),Pa=ke({pool_:function(t,e,n,r,s,i){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const a=$e(t,"x","maxPool");let o=a,l=!1;3===a.rank&&(l=!0,o=Qe(a,[1,a.shape[0],a.shape[1],a.shape[2]])),M(vr(i,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`);const u=cr(o.shape,e,i,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),s=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],s[e]])}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(t,e,n){const r=n.map(t=>t[0]),s=n.map(t=>t[1]),i=t.concat(r,s),a=e.map((t,e)=>(t-i[e]%t)%t),o=s.map((t,e)=>t+a[e]);return[e.map((t,e)=>[r[e],o[e]]),e.map((t,e)=>[0,a[e]])]}([u.inHeight,u.inWidth],c,h),g=d?r:"valid",m=d?o:Rr(o,c,p),b=("avg"===n?()=>Zi(m,e,i,g):()=>Ra(m,e,i,g))(),y=d?b:_s(b,c,f);return l?Qe(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),Wa=ke({prelu_:function(t,e){const n=$e(t,"x","prelu"),r=$e(e,"alpha","prelu");return Pt.runKernelFunc((t,e)=>{const s=t.prelu(n,r);return e([n,r]),s},{x:n,alpha:r},null,"Prelu")}}),Ua=ke({rand_:function(t,e,n){const r=P(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let i=0;i<r;i++)s[i]=e();return Pt.makeTensor(s,t,n)}});var Va=n(24901);class Ga{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=Va.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*r*a,e=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Ha{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const s=r||Math.random();this.randu=Va.alea(s.toString()),this.randn=new Ga(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,s,i;for(;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-i+Math.log(i)),s=this.randu(),s<e||Math.log(s)<n)break}return i*=1/this.beta*this.d,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class qa{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Va.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ja=ke({randomGamma_:function(t,e,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const i=new Ha(e,n,r,s),a=Xe(t,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}}),Ka=ke({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new Ga(e,n,r,!1,s),a=Xe(t,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}}),Xa=ke({randomUniform_:function(t,e=0,n=1,r="float32",s){const i=Xe(t,r),a=new qa(e,n,null,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),Ya=ke({relu_:function(t){const e=$e(t,"x","relu");return Pt.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?e.toInt():t.relu(e)),{x:e},null,"Relu")}}),Ja=ke({relu6_:function(t){const e=$e(t,"x","relu6");return Pt.runKernelFunc((t,n)=>(n([e]),"bool"===e.dtype?Je(e,"int32"):t.relu6(e)),{x:e},null,"Relu6")}}),Za=ke({selu_:function(t){const e=$e(t,"x","selu");return Pt.runKernelFunc((t,n)=>{const r=t.selu(e);return n([e]),r},{x:e},null,"Selu")}}),Qa=ke({separableConv2d_:function(t,e,n,r,s,i=[1,1],a="NHWC"){const o=$e(t,"x","separableConv2d"),l=$e(e,"depthwiseFilter","separableConv2d"),u=$e(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");M(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),M(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),M(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),M(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),M(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const d=l.shape[2],p=l.shape[3];M(u.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`);const f=ma(c,l,r,s,a,i),g=Mr(f,u,1,"valid",a);return h?g.as3D(g.shape[1],g.shape[2],g.shape[3]):g}}),to=ke({squaredDifference_:function(t,e){let n=$e(t,"a","squaredDifference"),r=$e(e,"b","squaredDifference");return[n,r]=Ot(n,r),be(n.shape,r.shape),Pt.runKernelFunc((t,e)=>{const s=t.squaredDifference(n,r);return e([n,r]),s},{a:n,b:r},null,he,{})}}),eo=ke({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new Ga(e,n,r,!0,s),a=Xe(t,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}}),no=30;function ro(t){return t<=no?t:rt(t,Math.floor(Math.sqrt(t)))}function so(t,e){let n,r=!1;for(t<=no?(n=t,r=!0):n=rt(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=rt(t,n+1);return n}function io(t,e,n){const r=[],s=t.length;for(let i=0;i<s;i++)r.push(i!==e?t[i]:n);return r}function ao(t,e,n){const r=t.shape[n],s=[];let i=1,a=1;for(let o=0;o<n;o++)s.push(t.shape[o]),i*=t.shape[o];for(let o=0;o<e.rank;o++)s.push(e.shape[o]);for(let o=n+1;o<t.rank;o++)s.push(t.shape[o]),a*=t.shape[o];return{batchSize:i,sliceSize:a,dimSize:r,outputShape:s}}function oo(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function lo(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const uo=ke({gather_:function(t,e,n=0){const r=$e(t,"x","gather"),s=$e(e,"indices","gather","int32");n=j(n,r.shape)[0];const i=ao(r,s,n);return Pt.runKernelFunc((t,e)=>{const i=t.gather(r,s.flatten(),n);return e([s]),i},{x:r,indices:s},(t,e)=>{const[s]=e;return{x:()=>{const e=r.shape,i=s.size,a=e.slice(0,n),o=a.length,l=e.slice(n,e.length).slice(1),u=l.length,c=oo(0,o),h=oo(o+1,o+1+u),d=lo([a,[i],l]),p=t.reshape(d),f=s.reshape([i]),g=lo([[o],c,h]),m=p.transpose(g);let b=co(m,f,r.shape[n]);const y=gn(g);return b=b.transpose(y),b},indices:()=>s}},"Gather",{axis:n}).reshape(i.outputShape)}}),co=ke({unsortedSegmentSum_:function(t,e,n){const r=$e(t,"x","unsortedSegmentSum"),s=$e(e,"segmentIds","unsortedSegmentSum","int32");return M(U(n),()=>"numSegments must be of dtype int"),Pt.runKernelFunc((t,e)=>{const i=t.unsortedSegmentSum(r,s,n);return e([s]),i},{$x:r},(t,e)=>{const[n]=e;return{$x:()=>function(t,e){const n=ka(e,qe(e)),r=uo(t,n);let s=ss(e,Fe(0,"int32"));const i=r.rank-s.rank;for(let o=0;o<i;++o)s=Ze(s,o+1);s=vs(s,We(r.shape,"bool"));const a=qe(r);return ks(s,r,a)}(t,n)}})}});function ho(){return(ho=b(function*(t,e,n){const r=$e(t,"tensor","boolMask"),s=$e(e,"mask","boolMask","bool"),i=null==n?0:n,a=s.rank,o=r.shape;M(a>0,()=>"mask cannot be scalar"),L(o.slice(i,i+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=i;g<i+a;g++)l*=o[g];const u=o.slice(0,i).concat([l],o.slice(i+a)),c=r.reshape(u),h=s.reshape([-1]),d=yield Is(h),p=d.squeeze([1]),f=uo(c,p,i);return t!==r&&r.dispose(),e!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f})).apply(this,arguments)}const po=function(t,e,n){return ho.apply(this,arguments)},fo=ke({reverse_:function(t,e){const n=$e(t,"x","reverse");if(0===n.rank)return n.clone();const r=j(e,n.shape);return Pt.runKernelFunc(t=>t.reverse(n,r),{$x:n},t=>({$x:()=>t.reverse(r)})).reshapeAs(n)}}),go=ke({reverse1d_:function(t){const e=$e(t,"x","reverse");return M(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),fo(e,0)}}),mo=ke({reverse2d_:function(t,e){const n=$e(t,"x","reverse");return M(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),fo(n,e)}}),bo=ke({reverse3d_:function(t,e){const n=$e(t,"x","reverse");return M(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),fo(n,e)}}),yo=ke({reverse4d_:function(t,e){const n=$e(t,"x","reverse");return M(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),fo(n,e)}}),xo=ke({equalStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","equalStrict"),r=$e(e,"b","equalStrict");return L(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),vo=ke({greaterEqualStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","greaterEqualStrict"),r=$e(e,"b","greaterEqualStrict");return L(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),wo=ke({greaterStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","greaterStrict"),r=$e(e,"b","greaterStrict");return L(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),$o=ke({lessEqualStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","lessEqualStrict"),r=$e(e,"b","lessEqualStrict");return L(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),Co=ke({lessStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","lessStrict"),r=$e(e,"b","lessStrict");return L(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),ko=ke({notEqualStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","notEqualStrict"),r=$e(e,"b","notEqualStrict");return L(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}}),Io=ke({addStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","addStrict"),r=$e(e,"b","addStrict");return L(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),So=ke({divStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","div"),r=$e(e,"b","div");return L(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),Eo=ke({maximumStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","maximumStrict"),r=$e(e,"b","maximumStrict");return L(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),Ro=ke({minimumStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","minimumStrict"),r=$e(e,"b","minimumStrict");return L(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),Ao=ke({modStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","modStrict"),r=$e(e,"b","modStrict");return L(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),No=ke({mulStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","mul"),r=$e(e,"b","mul");return L(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),To=ke({powStrict_:function(t,e){return Vi("strict variants of ops have been deprecated and will be removed in future"),L(t.shape,e.shape,"Error in powStrict: "),t.pow(e)}}),Do=ke({squaredDifferenceStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","squaredDifferenceStrict"),r=$e(e,"b","squaredDifferenceStrict");return L(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),Fo=ke({subStrict_:function(t,e){Vi("strict variants of ops have been deprecated and will be removed in future");const n=$e(t,"a","subStrict"),r=$e(e,"b","subStrict");return L(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}}),_o=ke({softmax_:function(t,e=-1){const n=$e(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);return Pt.runKernelFunc((t,r)=>{const s=t.softmax(n,e);return r([s]),s},{logits:n},(t,n)=>{const[r]=n,s=t.mul(r);return{logits:()=>s.sub(s.sum([e],!0).mul(r))}},"Softmax",{dim:e},[],[!0])}}),Oo=ke({logSoftmax_:function(t,e=-1){const n=$e(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return ln((t,n)=>{const r=t.max(e,!0),s=t.sub(r),i=s.toFloat().sub(s.exp().sum(e,!0).log());return n([i]),{value:i,gradFunc:(t,n)=>{const[r]=n,s=r.exp();return t.sub(t.sum(e,!0).mul(s))}}})(n)}});function Mo(t,e,n=null){if(0===t.rank)return t.abs();if(1!==t.rank&&null===n)return Mo(t.reshape([-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return t.abs().sum(n);if(e===1/0)return t.abs().max(n);if(e===-1/0)return t.abs().min(n);if("euclidean"===e||2===e)return t.abs().pow(Fe(2,"int32")).sum(n).sqrt();throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return t.abs().sum(n[0]).max(n[1]-1);if(e===1/0)return t.abs().sum(n[1]).max(n[0]);if(e===-1/0)return t.abs().sum(n[1]).min(n[0]);if("fro"===e||"euclidean"===e)return t.square().sum(n).sqrt();throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Lo=ke({norm_:function(t,e="euclidean",n=null,r=!1){const s=Mo(t=$e(t,"x","norm"),e,n);let i=s.shape;if(r){const e=j(n,t.shape);i=dn(s.shape,e)}return s.reshape(i)}}),zo=ke({basicLSTMCell_:function(t,e,n,r,s,i){const a=$e(t,"forgetBias","basicLSTMCell"),o=$e(e,"lstmKernel","basicLSTMCell"),l=$e(n,"lstmBias","basicLSTMCell"),u=$e(r,"data","basicLSTMCell"),c=$e(s,"c","basicLSTMCell"),h=$e(i,"h","basicLSTMCell"),d=u.concat(h,1).matMul(o).add(l),p=d.shape[1]/4,f=[d.shape[0],p],g=d.slice([0,0],f),m=d.slice([0,p],f),b=d.slice([0,2*p],f),y=d.slice([0,3*p],f),x=g.sigmoid().mul(m.tanh()).add(c.mul(a.add(b).sigmoid())),v=x.tanh().mul(y.sigmoid());return[x,v]}}),Bo=ke({multiRNNCell_:function(t,e,n,r){const s=$e(e,"data","multiRNNCell"),i=Ce(n,"c","multiRNNCell"),a=Ce(r,"h","multiRNNCell");let o=s;const l=[];for(let h=0;h<t.length;h++){const e=t[h](o,i[h],a[h]);l.push(e[0]),l.push(e[1]),o=e[1]}const u=[],c=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),c.push(l[h+1]);return[u,c]}}),Po=ke({movingAverage_:function(t,e,n,r,s=!0){const i=$e(t,"v","movingAverage"),a=$e(e,"x","movingAverage"),o=$e(n,"decay","movingAverage");(function(t,e){M(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)})(i,a),M(W(i.shape,a.shape),()=>"Shape mismatch in v and x");const l=Fe(1),u=l.sub(o);let c=a.sub(i).mul(u);if(s){M(null!=r,()=>"When using zeroDebias: true, step is required.");const t=$e(r,"step","movingAverage");c=c.div(l.sub(Ss(o,t)))}return i.add(c)}}),Wo=ke({stridedSlice_:function(t,e,n,r,s=0,i=0,a=0,o=0,l=0){null==r&&(r=new Array(e.length));const u=Ws(a);if(u.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==a&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==a&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");let c=$e(t,"x","stridedSlice");const h=c.rank-e.length,d=Ws(o),p=c.shape.slice();d.forEach(t=>{e[t]=0,n[t]=1,p.splice(t,0,1)}),c=c.reshape(p);for(let b=0;b<c.rank;b++)e[b]=Gs(s,e,r,c.shape,b,a),n[b]=Hs(i,n,r,c.shape,b,a),r[b]=Vs(r,b,a);if(u.length&&h>0){const t=u[0],s=h+1;e=function(t,e,n){const r=[...t];for(let s=0;s<n;s++)0===s?r[e]=0:(r.splice(e,0,0),r.pop());return r}(e,t,s),n=function(t,e,n,r){const s=[...t];for(let i=0;i<n;i++)0===i?s[e]=Number.MAX_SAFE_INTEGER:(s.splice(e,0,Number.MAX_SAFE_INTEGER),s.pop());for(let i=0;i<s.length;i++)s[i]=_(0,s[i],r[i]);return s}(n,t,s,c.shape),r=function(t,e,n){const r=[...t];for(let s=0;s<n;s++)0===s?r[e]=1:(r.splice(e,0,1),r.pop());return r}(r,t,s)}const f=Ws(l);f.forEach(t=>{n[t]=e[t]+1,r[t]=1});const g=Us(e,n,r),m=g.filter((t,e)=>-1===f.indexOf(e));return r.every(t=>1===t)?Ks(c,e,g).reshape(m):Pt.runKernelFunc(t=>t.stridedSlice(c,e,n,r),{$x:c}).reshape(m)}}),Uo=ke({topk_:function(t,e=1,n=!0){const r=$e(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const[i,a]=Pt.runKernelFunc(t=>t.topk(r,e,n),{$x:r});return{values:i,indices:a}}});function Vo(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(i+" update.rank != "+(s+t.length-r));for(let a=0;a<s;++a)if(n.shape[a]!==e.shape[a])throw new Error(i+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<n.rank-s;++a)if(n.shape[a+s]!==t[a+r])throw new Error(i+` updates.shape[${a+s}] (${n.shape[a+s]}) != shape[${a+s}] (${t[a+s]})`)}function Go(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}Vo(n,e,t)}function Ho(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=n.length;let a=1;for(let l=s;l<i;++l)a*=n[l];const o=s<1?1:s;return{sliceRank:s,numUpdates:P(e.shape)/o,sliceSize:a,strides:[...st(n.slice(0,s)),1],outputSize:P(n)}}const qo=ke({scatterND_:function(t,e,n){const r=$e(t,"indices","scatterND","int32"),s=$e(e,"updates","scatterND");return Go(s,r,n),Pt.runKernelFunc(t=>t.scatterND(r,s,n),{indices:r,updates:s},null,"ScatterNd",{shape:n})}}),jo=ke({fft_:function(t){M("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e=t.shape[t.shape.length-1],n=t.as2D(t.size/e,e);return Pt.runKernelFunc(t=>t.fft(n),{input:t}).reshape(t.shape)}}),Ko=ke({ifft_:function(t){M("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e=t.shape[t.shape.length-1],n=t.as2D(t.size/e,e);return Pt.runKernelFunc(t=>t.ifft(n),{input:t}).reshape(t.shape)}}),Xo=ke({rfft_:function(t,e){M("float32"===t.dtype,()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map(t=>0),i=t.shape.map(t=>t);i[t.shape.length-1]=e,s=t.slice(r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,s=t.concat(Ue(r),t.shape.length-1),n=e}else s=t;const i=s.zerosLike(),a=Re(s,i).as2D(r,n),o=jo(a),l=Math.floor(n/2)+1,u=Ne(o),c=Ae(o),h=u.split([l,n-l],u.shape.length-1),d=c.split([l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Re(h[0],d[0]).reshape(p)}}),Yo=ke({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;if(e<=2){const r=t.as2D(n,e),s=Ko(r);return Ne(s)}{const r=[n,2*(e-1)],s=Ne(t).as2D(n,e),i=Ae(t).as2D(n,e),a=s.slice([0,1],[n,e-2]).reverse(1),o=i.slice([0,1],[n,e-2]).reverse(1).mul(Fe(-1)),l=s.concat(a,1),u=i.concat(o,1),c=Re(l,u).as2D(r[0],r[1]),h=Ko(c);return Ne(h)}}}),Jo=ke({sparseToDense_:function(t,e,n,r=0){const s=$e(t,"sparseIndices","sparseToDense","int32"),i=$e(e,"sparseValues","sparseToDense"),a=$e(r,"defaultValue","sparseToDense",i.dtype);return function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,i=t.rank>1?t.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);if(0!==e.rank&&(1!==e.rank||e.size!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,i,n,a),Pt.runKernelFunc(t=>t.sparseToDense(s,i,n,a),{$sparseIndices:s,$sparseValues:i,$defaultValue:a})}}),Zo=ke({gatherND_:function(t,e){const n=$e(e,"indices","gatherND","int32"),r=$e(t,"x","gatherND");return Pt.runKernelFunc(t=>t.gatherND(r,n),{params:r,indices:n},null,"GatherNd")}}),Qo=ke({dropout_:function(t,e,n,r){const s=$e(t,"x","dropout");if(M("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),M(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof St?s.clone():s;const i=function(t,e){if(null==e)return t.shape.slice();if(W(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)n.push(null==e[r]&&null!=t.shape[r]?t.shape[r]:e[r]);return n}return e}(s,n),a=1-e,o=Xa(i,0,1,"float32",r).add(a).floor().div(a);return s.mul(o)}});function tl(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let i=0;i<t;++i){const a=2*Math.PI*i/(t+r-1);s[i]=e-n*Math.cos(a)}return _e(s,"float32")}const el=ke({hannWindow_:function(t){return tl(t,.5,.5)}}),nl=ke({hammingWindow_:function(t){return tl(t,.54,.46)}}),rl=ke({frame_:function(t,e,n,r=!1,s=0){let i=0;const a=[];for(;i+e<=t.size;)a.push(Ks(t,i,e)),i+=n;if(r)for(;i<t.size;){const r=i+e-t.size,o=je([Ks(t,i,e-r),Ca([r],s)]);a.push(o),i+=n}return 0===a.length?Oe([],[0,e]):je(a).as2D(a.length,e)}}),sl=ke({stft_:function(t,e,n,r,s=el){null==r&&(r=function(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}(e));const i=rl(t,e,n),a=on(i,s(e)),o=[];for(let l=0;l<i.shape[0];l++)o.push(Xo(a.slice([l,0],[1,e]),r));return je(o)}});function il(){return(il=b(function*(t,e,n=1){const r=$e(t,"predictions","inTopK"),s=$e(e,"targets","inTopK");M(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),M(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),L(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];M(n>0&&n<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`);const a=yield r.data(),o=yield s.data(),[l,u]=[a.length/i,i],c=X("bool",l);for(let h=0;h<l;h++){const t=h*u,e=a.subarray(t,t+u),r=[];for(let n=0;n<e.length;n++)r.push({value:e[n],index:n});r.sort((t,e)=>e.value-t.value),c[h]=0;for(let s=0;s<n;s++)if(r[s].index===o[h]){c[h]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),Te(c,s.shape,"bool")})).apply(this,arguments)}const al=function(t,e){return il.apply(this,arguments)};var ol=(()=>{return(t=ol||(ol={}))[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",ol;var t})();const ll=ke({absoluteDifference_:function(t,e,n,r=ol.SUM_BY_NONZERO_WEIGHTS){const s=$e(t,"labels","absoluteDifference"),i=$e(e,"predictions","absoluteDifference");let a=null;null!=n&&(a=$e(n,"weights","absoluteDifference")),L(s.shape,i.shape,"Error in absoluteDifference: ");const o=s.sub(i).abs();return ul(o,a,r)}}),ul=ke({computeWeightedLoss_:function(t,e,n=ol.SUM_BY_NONZERO_WEIGHTS){const r=$e(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=$e(e,"weights","computeWeightedLoss"));const i=null==s?r:r.mul(s);if(n===ol.NONE)return i;if(n===ol.SUM)return i.sum();if(n===ol.MEAN){if(null==s)return i.mean();{const t=r.size/s.size,e=i.sum().div(s.sum());return t>1?e.div(Fe(t)):e}}if(n===ol.SUM_BY_NONZERO_WEIGHTS){if(null==s)return i.sum().div(Fe(r.size));{const t=s.mul(We(r.shape)).notEqual(Fe(0)).sum().toFloat();return i.sum().div(t)}}throw Error(`Unknown reduction: ${n}`)}}),cl=ke({cosineDistance_:function(t,e,n,r,s=ol.SUM_BY_NONZERO_WEIGHTS){const i=$e(t,"labels","cosineDistance"),a=$e(e,"predictions","cosineDistance");let o=null;null!=r&&(o=$e(r,"weights","cosineDistance")),L(i.shape,a.shape,"Error in cosineDistance: ");const l=Fe(1).sub(i.mul(a).sum(n,!0));return ul(l,o,s)}}),hl=ke({hingeLoss_:function(t,e,n,r=ol.SUM_BY_NONZERO_WEIGHTS){let s=$e(t,"labels","hingeLoss");const i=$e(e,"predictions","hingeLoss");let a=null;null!=n&&(a=$e(n,"weights","hingeLoss")),L(s.shape,i.shape,"Error in hingeLoss: ");const o=Fe(1);s=Fe(2).mul(s).sub(o);const l=o.sub(s.mul(i)).relu();return ul(l,a,r)}}),dl=ke({huberLoss_:function(t,e,n,r=1,s=ol.SUM_BY_NONZERO_WEIGHTS){const i=$e(t,"labels","huberLoss"),a=$e(e,"predictions","huberLoss");let o=null;null!=n&&(o=$e(n,"weights","huberLoss")),L(i.shape,a.shape,"Error in huberLoss: ");const l=Fe(r),u=a.sub(i).abs(),c=Ta(u,l),h=u.sub(c),d=Fe(.5).mul(c.square()).add(l.mul(h));return ul(d,o,s)}}),pl=ke({logLoss_:function(t,e,n,r=1e-7,s=ol.SUM_BY_NONZERO_WEIGHTS){const i=$e(t,"labels","logLoss"),a=$e(e,"predictions","logLoss");let o=null;null!=n&&(o=$e(n,"weights","logLoss")),L(i.shape,a.shape,"Error in logLoss: ");const l=Fe(1),u=Fe(r),c=i.mul(a.add(u).log()).neg().sub(l.sub(i).mul(l.sub(a).add(u).log()));return ul(c,o,s)}}),fl=ke({meanSquaredError_:function(t,e,n,r=ol.SUM_BY_NONZERO_WEIGHTS){const s=$e(t,"labels","meanSquaredError"),i=$e(e,"predictions","meanSquaredError");let a=null;null!=n&&(a=$e(n,"weights","meanSquaredError")),L(s.shape,i.shape,"Error in meanSquaredError: ");const o=s.squaredDifference(i);return ul(o,a,r)}}),gl=ke({sigmoidCrossEntropy_:function(t,e,n,r=0,s=ol.SUM_BY_NONZERO_WEIGHTS){let i=$e(t,"multiClassLabels","sigmoidCrossEntropy");const a=$e(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=$e(n,"weights","sigmoidCrossEntropy")),L(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Fe(r),e=Fe(1),n=Fe(.5);i=i.mul(e.sub(t)).add(n.mul(t))}const l=function(t,e){const n=$e(t,"labels","sigmoidCrossEntropyWithLogits"),r=$e(e,"logits","sigmoidCrossEntropyWithLogits");L(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=r.relu(),i=r.mul(n),a=r.abs().neg().exp().log1p();return s.sub(i).add(a)}(i,a);return ul(l,o,s)}}),ml=ke({softmaxCrossEntropy_:function(t,e,n,r=0,s=ol.SUM_BY_NONZERO_WEIGHTS){let i=$e(t,"onehotLabels","softmaxCrossEntropy");const a=$e(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=$e(n,"weights","softmaxCrossEntropy")),L(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Fe(r),e=Fe(1),n=Fe(i.shape[1]);i=i.mul(e.sub(t)).add(t.div(n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return ln((t,e,r)=>{const s=e.logSumExp([n],!0),i=e.toFloat().sub(s);return r([t,i]),{value:i.mul(t).neg().sum([n]),gradFunc:(t,e)=>{const[r,s]=e,i=dn(t.shape,[n]);return[t.reshape(i).mul(r.toFloat().sub(s.exp())),t.reshape(i).mul(s.exp().sub(r.toFloat()))]}}})(t,e)}(i,a);return ul(l,o,s)}});function bl(t,e=!1){return Pt.tidy(()=>{if(2!==t.shape.length)throw new Error(`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let s=$a(n),i=t.clone();const a=Oe([[1]],[1,1]);let o=a.clone();const l=n>=r?r:n;for(let t=0;t<l;++t){const e=i,l=o,u=s;[o,i,s]=Pt.tidy(()=>{const e=i.slice([t,t],[n-t,1]),l=e.norm(),u=i.slice([t,t],[1,1]),c=Oe([[-1]]).where(u.greater(0),Oe([[1]])),h=u.sub(c.mul(l)),d=e.div(h);o=1===d.shape[0]?a.clone():a.concat(d.slice([1,0],[d.shape[0]-1,d.shape[1]]),0);const p=c.matMul(h).div(l).neg(),f=i.slice([t,0],[n-t,r]),g=p.mul(o),m=o.transpose();if(0===t)i=f.sub(g.matMul(m.matMul(f)));else{const e=f.sub(g.matMul(m.matMul(f)));i=i.slice([0,0],[t,r]).concat(e,0)}const b=g.transpose(),y=s.slice([0,t],[n,s.shape[1]-t]);if(0===t)s=y.sub(y.matMul(o).matMul(b));else{const e=y.sub(y.matMul(o).matMul(b));s=s.slice([0,0],[n,t]).concat(e,1)}return[o,i,s]}),ji([e,l,u])}return!e&&n>r&&(s=s.slice([0,0],[n,r]),i=i.slice([0,0],[r,r])),[s,i]})}const yl=ke({bandPart_:function(t,e,n){if(e%1!=0)throw new Error(`bandPart(): numLower must be an integer, got ${e}.`);if(n%1!=0)throw new Error(`bandPart(): numUpper must be an integer, got ${n}.`);const r=$e(t,"a","bandPart");if(r.rank<2)throw new Error(`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[i,a]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);e<0&&(e=i),n<0&&(n=a);const o=Ge(0,i,1,"int32").reshape([-1,1]),l=Ge(0,a,1,"int32"),u=Yr(o,l),c=vs(u.lessEqual(Fe(+e,"int32")),u.greaterEqual(Fe(-n,"int32"))),h=Ue([i,a],r.dtype);return en(nn(r.reshape([-1,i,a])).map(t=>ks(c,t,h))).reshape(s)}}),xl=ke({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,M(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)M(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Tr(t,t.shape[0],0).map(t=>tn(t,[0]));M(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let s=0;s<t.length;++s)n.push(Pt.tidy(()=>{let t=r[s];if(s>0)for(let e=0;e<s;++e){const r=Sn(n[e].mul(t)).mul(n[e]);t=t.sub(r)}return t.div(Lo(t,"euclidean"))}));return e?en(n,0):n}}),vl=ke({qr_:function(t,e=!1){if(t.rank<2)throw new Error(`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`);if(2===t.rank)return bl(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=nn(t.reshape([n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],i=[];return r.forEach(t=>{const[n,r]=bl(t,e);s.push(n),i.push(r)}),[en(s,0).reshape(t.shape),en(i,0).reshape(t.shape)]}}});function wl(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(e,t[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(t,e,n||$l)}(t,e,n);t.splice(r<0?-(r+1):r,0,e)}function $l(t,e){return t>e?1:t<e?-1:0}function Cl(t,e,n,r,s){const i=Il(t,e,n,r,s,0);return i.selectedScores.dispose(),i.numValidOutputs.dispose(),i.selectedIndices}function kl(t,e,n,r,s,i){const a=Il(t,e,n,r,s,i,!0);return a.numValidOutputs.dispose(),{selectedIndices:a.selectedIndices,selectedScores:a.selectedScores}}function Il(t,e,n,r,s,i,a=!1,o=!1){const l=[];for(let p=0;p<e.length;p++)e[p]>s&&l.push({score:e[p],boxIndex:p,suppressBeginIndex:0});l.sort(Rl);const u=i>0?-.5/i:0,c=[],h=[];for(;c.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=e;if(n<s)break;let o=!1;for(let l=c.length-1;l>=a;--l){const n=Sl(t,i,c[l]);if(n>=r){o=!0;break}if(e.score=e.score*El(r,u,n),e.score<=s)break}e.suppressBeginIndex=c.length,o||(e.score===n?(c.push(i),h.push(e.score)):e.score>s&&wl(l,e,Rl))}const d=c.length;return o&&(c.fill(0,d),h.fill(0,d)),{selectedIndices:_e(c,"int32"),selectedScores:_e(h,"float32"),numValidOutputs:Fe(d,"int32")}}function Sl(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(a,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-g,0)*Math.max(y-m,0);return x/(p+f-x)}function El(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Rl(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}function Al(t,e,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=t.shape[0];return n=Math.min(n,a),M(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),M(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),M(4===t.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),M(1===e.rank,()=>"scores must be a 1D tensor"),M(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),M(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}const Nl=ke({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=$e(t,"boxes","nonMaxSuppression"),a=$e(e,"scores","nonMaxSuppression"),o=Al(i,a,n,r,s);return Pt.runKernelFunc(t=>t.nonMaxSuppression(i,a,n,r,s),{boxes:i,scores:a},null,le,{maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold})}});function Tl(){return(Tl=b(function*(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=$e(t,"boxes","nonMaxSuppressionAsync"),a=$e(e,"scores","nonMaxSuppressionAsync"),o=Al(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=yield Promise.all([i.data(),a.data()]),u=Cl(l[0],l[1],n,r,s);return i!==t&&i.dispose(),a!==e&&a.dispose(),u})).apply(this,arguments)}function Dl(){return(Dl=b(function*(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=$e(t,"boxes","nonMaxSuppressionAsync"),o=$e(e,"scores","nonMaxSuppressionAsync"),l=Al(a,o,n,r,s,i);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=yield Promise.all([a.data(),o.data()]),c=kl(u[0],u[1],n,r,s,i);return a!==t&&a.dispose(),o!==e&&o.dispose(),c})).apply(this,arguments)}const Fl=ke({resizeBilinear_:function(t,e,n=!1){const r=$e(t,"images","resizeBilinear");M(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),M(2===e.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`);let s=r,i=!1;3===r.rank&&(i=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[a,o]=e,l=Pt.runKernelFunc((t,e)=>(e([s]),t.resizeBilinear(s,a,o,n)),{x:s},(t,e)=>({x:()=>Pt.runKernelFunc(r=>r.resizeBilinearBackprop(t,e[0],n),{})}),"ResizeBilinear",{alignCorners:n,newHeight:a,newWidth:o});return i?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}}),_l=ke({resizeNearestNeighbor_:function(t,e,n=!1){const r=$e(t,"images","resizeNearestNeighbor");M(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),M(2===e.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),M("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype");let s=r,i=!1;3===r.rank&&(i=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));const[a,o]=e,l=Pt.runKernelFunc((t,e)=>(e([s]),t.resizeNearestNeighbor(s,a,o,n)),{batchImages:s},(t,e)=>({batchImages:()=>Pt.runKernelFunc(r=>r.resizeNearestNeighborBackprop(t,e[0],n),{})}));return i?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}}),Ol=function(t,e,n){return Tl.apply(this,arguments)},Ml=ke({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=$e(t,"boxes","nonMaxSuppression"),o=$e(e,"scores","nonMaxSuppression"),l=Al(a,o,n,r,s,i),u=Pt.runKernel("NonMaxSuppressionV5",{boxes:a,scores:o},{maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:i=l.softNmsSigma});return{selectedIndices:u[0],selectedScores:u[1]}}}),Ll=function(t,e,n){return Dl.apply(this,arguments)},zl=ke({cropAndResize_:function(t,e,n,r,s,i){const a=$e(t,"image","cropAndResize"),o=$e(e,"boxes","cropAndResize","float32"),l=$e(n,"boxInd","cropAndResize","int32");s=s||"bilinear",i=i||0;const u=o.shape[0];return M(4===a.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),M(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),M(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),M(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),M(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),M("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`),Pt.runKernelFunc((t,e)=>t.cropAndResize(a,o,l,r,s,i),{images:a,boxes:o,boxInd:l},null,"CropAndResize",{method:s,extrapolationValue:i,cropSize:r})}}),Bl=(t,e)=>!(t>0)||"linear"===e,Pl=(t,e,n)=>{if(null==n||"linear"===n)return t;if("relu"===n)return t.mul(e.step());throw new Error(`Gradient for activation ${n} has not been implemented yet.`)},Wl=(t,e)=>{let n=e;const r=me(t.shape,e.shape);return r.length>0&&(n=n.sum(r)),n.reshape(t.shape)},Ul=(t,e,n)=>{if("linear"===e)return t;if("relu"===e)return Ya(t);if("elu"===e)return va(t);if("relu6"===e)return Ja(t);if("prelu"===e)return Wa(t,n);throw new Error(`Unknown fused activation ${e}.`)},Vl=ke({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a}){if(!1===Bl(Pt.state.gradientDepth,i)){let o=Sr(t,e,n,r);return null!=s&&(o=Ie(o,s)),Ul(o,i,a)}let o=$e(t,"a","fused matMul"),l=$e(e,"b","fused matMul");[o,l]=Ot(o,l);const u=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?o.shape[o.rank-1]:o.shape[o.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],p=o.shape.slice(0,-2),f=l.shape.slice(0,-2),g=P(p),m=P(f);M(o.rank>=2&&l.rank>=2&&o.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${l.rank}.`),M(W(p,f),()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${o.shape} and ${l.shape} must match.`),M(u===c,()=>`Error in fused matMul: inner shapes (${u}) and (${c}) of Tensors with shapes ${o.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=o.shape.slice(0,-2).concat([h,d]),y=n?o.as3D(g,u,h):o.as3D(g,h,u),x=r?l.as3D(m,d,c):l.as3D(m,c,d);let v,w;null!=s&&(v=$e(s,"bias","fused matMul"),[v]=Ot(v,o),be(b,v.shape)),null!=a&&(w=$e(a,"prelu weights","fused matMul"));const $={a:y,b:x};return null!=s&&($.bias=v),null!=a&&($.preluActivationWeights=w),Pt.runKernelFunc((t,e)=>{const s=t.fusedBatchMatMul({a:y,b:x,transposeA:n,transposeB:r,bias:v,activation:i,preluActivationWeights:w});return e([y,x,s]),s},$,(t,e)=>{const[a,o,l]=e,u=Pl(t,l,i);let c={};return null!=s&&(c={bias:()=>Wl(v,u)}),Object.assign(n||r?!n&&r?{a:()=>u.matMul(o,!1,!1),b:()=>u.matMul(a,!0,!1)}:n&&!r?{a:()=>o.matMul(u,!1,!0),b:()=>a.matMul(u,!1,!1)}:{a:()=>o.matMul(u,!0,!0),b:()=>u.matMul(a,!0,!0)}:{a:()=>u.matMul(o,!1,!0),b:()=>a.matMul(u,!0,!1)},c)},"_FusedMatMul",{transposeA:n,transposeB:r,activation:i},[y,x],[!0]).reshape(b)}}),Gl=ke({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u}){if(!1===Bl(Pt.state.gradientDepth,l=l||"linear")){let c=Mr(t,e,n,r,s,i,a);return null!=o&&(c=Ie(c,o)),Ul(c,l,u)}const c=$e(t,"x","conv2d"),h=$e(e,"filter","conv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),M(4===d.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),M(4===h.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),null!=a&&M(U(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`),M(d.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`),M(vr(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),M("NHWC"===s,()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`);const f=dr(d.shape,h.shape,n,i,r,a);let g,m;null!=o&&(g=$e(o,"bias","fused conv2d"),[g]=Ot(g,c),be(f.outShape,g.shape)),null!=u&&(m=$e(u,"prelu weights","fused conv2d"));const b={x:d,filter:h};null!=o&&(b.bias=g),null!=u&&(b.preluActivationWeights=m);const y=Pt.runKernelFunc((t,e)=>{const n=t.fusedConv2d({input:d,filter:h,convInfo:f,bias:g,activation:l,preluActivationWeights:m});return e([h,d,n]),n},b,(t,e)=>{const[s,a,u]=e,c=Pl(t,u,l);M(xr(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);let h={};return null!=o&&(h={bias:()=>Wl(g,c)}),Object.assign({x:()=>_r(a.shape,c,s,n,r),filter:()=>Fr(a,c,s.shape,n,r)},h)},"FusedConv2D",{convInfo:f,activation:l},[h,d],[!0]);return p?y.as3D(y.shape[1],y.shape[2],y.shape[3]):y}}),Hl=ke({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u}){if(!1===Bl(Pt.state.gradientDepth,l)){let c=ma(t,e,n,r,s,i,a);return null!=o&&(c=Ie(c,o)),Ul(c,l,u)}const c=$e(t,"x","depthwiseConv2d"),h=$e(e,"filter","depthwiseConv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=c.as4D(1,c.shape[0],c.shape[1],c.shape[2])),M(4===d.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),M(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),M(d.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==i&&(i=[1,1]),M(vr(n,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),null!=a&&M(U(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${a} but got pad ${r}.`);const f=dr(d.shape,h.shape,n,i,r,a,!0);let g,m;null!=o&&(g=$e(o,"bias","fused conv2d"),[g]=Ot(g,c),be(f.outShape,g.shape)),null!=u&&(m=$e(u,"prelu weights","fused depthwiseConv2d"));const b={x:d,filter:h};null!=o&&(b.bias=g),null!=u&&(b.preluActivationWeights=m);const y=Pt.runKernelFunc((t,e)=>{const n=t.fusedDepthwiseConv2D({input:d,filter:h,convInfo:f,bias:g,activation:l,preluActivationWeights:m});return e([h,d,n]),n},b,(t,e)=>{M(xr(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[n,r,s]=e,a=Pl(t,s,l);let u={};return null!=o&&(u={bias:()=>Wl(g,a)}),Object.assign({x:()=>Hr(r.shape,a,n,f),filter:()=>Gr(r,a,n.shape,f)},u)},"FusedDepthwiseConv2D",{convInfo:f,activation:l},[h,d],[!0]);return p?y.as3D(y.shape[1],y.shape[2],y.shape[3]):y}});class ql extends Pi{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:s[t.name]}));this.applyGradients(t)}else this.applyGradients(s);return ji(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){M(nt(t),()=>"The f passed in variableGrads(f) must be a function"),M(null==e||Array.isArray(e)&&e.every(t=>t instanceof Et),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in Pt.registeredVariables)e.push(Pt.registeredVariables[t])}const r=n?e.filter(t=>!t.trainable):null,s=e.length;M((e=e.filter(t=>t.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const{value:i,grads:a}=Pt.gradients(t,e,null,!0);M(a.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),M(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const o={};return e.forEach((t,e)=>{null!=a[e]&&(o[t.name]=a[e])}),null!=r&&r.forEach(t=>o[t.name]=null),{value:i,grads:o}}(t,e)}dispose(){null!=this.iterations_&&ji(this.iterations_)}saveIterations(){var t=this;return b(function*(){return null==t.iterations_&&(t.iterations_=0),{name:"iter",tensor:Fe(t.iterations_,"int32")}})()}getWeights(){return b(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(t){var e=this;return b(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${e.getClassName()}`)})()}extractIterations(t){var e=this;return b(function*(){return e.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})()}}Object.defineProperty(ql,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});let jl=(()=>{class t extends ql{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Pt.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Pt.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:qi(()=>qe(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:qi(()=>qe(r).variable(!1))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;qi(()=>{const t=i.mul(this.rho).add(s.square().mul(1-this.rho)),e=a.add(this.epsilon).sqrt().div(i.add(this.epsilon).sqrt()).mul(s),n=a.mul(this.rho).add(e.square().mul(1-this.rho));i.assign(t),a.assign(n);const o=e.mul(-this.learningRate).add(r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ji(this.accumulatedGrads.map(t=>t.variable)),ji(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){var t=this;return b(function*(){const e=[...t.accumulatedGrads,...t.accumulatedUpdates];return[yield t.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})()}setWeights(t){var e=this;return b(function*(){const n=(t=yield e.extractIterations(t)).length/2;e.accumulatedGrads=t.slice(0,n).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),e.accumulatedUpdates=t.slice(n,2*n).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}return t.className="Adadelta",t})();Ui(jl);let Kl=(()=>{class t extends ql{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Pt.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:qi(()=>Ca(r.shape,this.initialAccumulatorValue).variable(t))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedGrads[n].variable;qi(()=>{const t=i.add(s.square());i.assign(t);const e=s.div(t.add(Pt.backend.epsilon()).sqrt()).mul(-this.learningRate).add(r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ji(this.accumulatedGrads.map(t=>t.variable))}getWeights(){var t=this;return b(function*(){return[yield t.saveIterations()].concat(t.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})()}setWeights(t){var e=this;return b(function*(){t=yield e.extractIterations(t),e.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}return t.className="Adagrad",t})();Ui(Kl);let Xl=(()=>{class t extends ql{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],qi(()=>{this.accBeta1=Fe(e).variable(),this.accBeta2=Fe(n).variable()}),null==r&&(this.epsilon=Pt.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);qi(()=>{const n=Yr(1,this.accBeta1),r=Yr(1,this.accBeta2);e.forEach((e,s)=>{const i=Pt.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:qi(()=>qe(i).variable(!1))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:qi(()=>qe(i).variable(!1))});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=o.mul(this.beta1).add(a.mul(1-this.beta1)),c=l.mul(this.beta2).add(a.square().mul(1-this.beta2)),h=u.div(n),d=c.div(r);o.assign(u),l.assign(c);const p=h.div(d.sqrt().add(this.epsilon)).mul(-this.learningRate).add(i);i.assign(p)}),this.accBeta1.assign(this.accBeta1.mul(this.beta1)),this.accBeta2.assign(this.accBeta2.mul(this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ji(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&ji(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){var t=this;return b(function*(){const e=[...t.accumulatedFirstMoment,...t.accumulatedSecondMoment];return[yield t.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})()}setWeights(t){var e=this;return b(function*(){t=yield e.extractIterations(t),qi(()=>{e.accBeta1.assign(Ss(e.beta1,e.iterations_+1)),e.accBeta2.assign(Ss(e.beta2,e.iterations_+1))});const n=t.length/2;e.accumulatedFirstMoment=t.slice(0,n).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),e.accumulatedSecondMoment=t.slice(n,2*n).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}return t.className="Adam",t})();Ui(Xl);let Yl=(()=>{class t extends ql{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],qi(()=>{this.iteration=Fe(0).variable(),this.accBeta1=Fe(e).variable()}),null==r&&(this.epsilon=Pt.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);qi(()=>{const n=Yr(1,this.accBeta1),r=an(-this.learningRate,this.iteration.mul(this.decay).add(1));e.forEach((e,s)=>{const i=Pt.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:qe(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:qe(i).variable(!1)});const a=Array.isArray(t)?t[s].tensor:t[e];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=o.mul(this.beta1).add(a.mul(1-this.beta1)),c=l.mul(this.beta2),h=a.abs(),d=c.maximum(h);o.assign(u),l.assign(d);const p=r.div(n).mul(u.div(d.add(this.epsilon))).add(i);i.assign(p)}),this.iteration.assign(this.iteration.add(1)),this.accBeta1.assign(this.accBeta1.mul(this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ji(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&ji(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return b(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(t){return b(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}return t.className="Adamax",t})();Ui(Yl);let Jl=(()=>{class t extends ql{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=Pt.registeredVariables[e];qi(()=>{const t=this.c.mul(r).add(s);s.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Ki(Fe(-t))}dispose(){this.c.dispose()}getWeights(){var t=this;return b(function*(){return[yield t.saveIterations()]})()}setWeights(t){var e=this;return b(function*(){if(0!==(t=yield e.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}return t.className="SGD",t})();Ui(Jl);let Zl=(()=>{class t extends Jl{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Fe(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Pt.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:qi(()=>qe(r).variable(t))}}const s=this.accumulations[n].variable,i=Array.isArray(t)?t[n].tensor:t[e];null!=i&&qi(()=>{let t;const e=this.m.mul(s).add(i);t=this.useNesterov?this.c.mul(i.add(e.mul(this.m))).add(r):this.c.mul(e).add(r),s.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ji(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){var t=this;return b(function*(){return[yield t.saveIterations()].concat(t.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})()}setWeights(t){var e=this;return b(function*(){t=yield e.extractIterations(t),e.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}return t.className="Momentum",t})();Ui(Zl);let Ql=(()=>{class t extends ql{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Pt.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Pt.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:qi(()=>qe(r).variable(s))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:qi(()=>qe(r).variable(s))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:qi(()=>qe(r).variable(s))});const i=Array.isArray(t)?t[n].tensor:t[e];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;qi(()=>{const t=a.mul(this.decay).add(i.square().mul(1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=e.mul(this.decay).add(i.mul(1-this.decay)),l=o.mul(this.momentum).add(i.mul(this.learningRate).div(t.sub(s.square().add(this.epsilon)).sqrt()));a.assign(t),e.assign(s),o.assign(l);const u=r.sub(l);r.assign(u)}else{const t=a.mul(this.decay).add(i.square().mul(1-this.decay)),e=o.mul(this.momentum).add(i.mul(this.learningRate).div(t.add(this.epsilon).sqrt()));a.assign(t),o.assign(e);const n=r.sub(e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ji(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&ji(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&ji(this.accumulatedMoments.map(t=>t.variable))}getWeights(){var t=this;return b(function*(){const e=[...t.accumulatedMeanSquares,...t.accumulatedMoments];return t.centered&&e.push(...t.accumulatedMeanGrads),[yield t.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))})()}setWeights(t){var e=this;return b(function*(){t=yield e.extractIterations(t);const n=e.centered?t.length/3:t.length/2,r=!1;e.accumulatedMeanSquares=t.slice(0,n).map(t=>({originalName:t.name,variable:t.tensor.variable(r)})),e.accumulatedMoments=t.slice(n,2*n).map(t=>({originalName:t.name,variable:t.tensor.variable(r)})),e.centered&&(e.accumulatedMeanGrads=t.slice(2*n,3*n).map(t=>({originalName:t.name,variable:t.tensor.variable(r)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}return t.className="RMSProp",t})();Ui(Ql);class tu{static sgd(t){return new Jl(t)}static momentum(t,e,n=!1){return new Zl(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Ql(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new Xl(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new jl(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new Yl(t,e,n,r,s)}static adagrad(t,e=.1){return new Kl(t,e)}}const eu={sgd:tu.sgd,momentum:tu.momentum,adadelta:tu.adadelta,adagrad:tu.adagrad,rmsprop:tu.rmsprop,adamax:tu.adamax,adam:tu.adam},nu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function ru(){return new Promise(t=>nu(()=>t()))}function su(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function iu(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function au(t,e,n,r=!0){const s=[];s.push(r?t[0]/n:t[0]*n);for(let i=1;i<t.length;++i)s.push(i<=e.length?r?e[i-1]*t[i]:t[i]/e[i-1]:t[i]);return s}function ou(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function lu(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}function uu(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let s=1;for(let u=0;u<n.length-1;++u)s*=n[u];const i=t.shape,a=n.slice();a.pop();let o=1;for(let u=r;u<t.rank;++u)o*=i[u],a.push(i[u]);const l=[...st(t.shape).map(t=>t/o),1].slice(0,r);return[a,s,o,l]}const cu=.3275911,hu=.254829592,du=-.284496736,pu=1.421413741,fu=-1.453152027,gu=1.061405429;function mu(...t){v().getBool("IS_TEST")||console.warn(...t)}function bu(...t){v().getBool("IS_TEST")||console.log(...t)}function yu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function xu(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function vu(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function wu(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function $u(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Cu(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function ku(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const i=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function Iu(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function Su(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Ue(t.shape),r=t.toFloat(),s=n.complex(r,e);return e.dispose(),r.dispose(),s}if(!function(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}(t.dtype,e))return Pt.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),s=r.cast(e);return r.dispose(),s}if("int32"===e)return n.int(t);if("bool"===e){const e=Fe(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function Eu(t,e){return Pt.makeTensorFromDataId(t.dataId,e,t.dtype)}function Ru(t,e,n){const r=(e-t)/(n-1),s=ut(n,"float32");s[0]=t;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return _e(s,"float32")}function Au(t,e,n){const r=new Array(t.rank).fill(0),s=t.shape.slice();return e.map(e=>{const i=[...s];i[n]=e;const a=t.slice(r,i);return r[n]+=e,a})}function Nu(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const r=Xe(n,t.dtype);for(let s=0;s<r.values.length;++s){const e=r.indexToLoc(s),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const i=t.locToIndex(n);r.values[s]=t.values[i]}return r.toTensor()}function Tu(t,e,n,r,s){const i=e[e.length-1],[a,o]=[t.length/i,i],l=X(n,a*r),u=X("int32",a*r);for(let h=0;h<a;h++){const e=h*o,n=t.subarray(e,e+o),s=[];for(let t=0;t<n.length;t++)s.push({value:n[t],index:t});s.sort((t,e)=>e.value-t.value);const i=h*r,a=l.subarray(i,i+r),c=u.subarray(i,i+r);for(let t=0;t<r;t++)a[t]=s[t].value,c[t]=s[t].index}const c=e.slice();return c[c.length-1]=r,[Te(l,c,n),Te(u,c,"int32")]}class Du{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Fu{time(t){return _u("time")}read(t){return _u("read")}readSync(t){return _u("readSync")}numDataIds(){return _u("numDataIds")}disposeData(t){return _u("disposeData")}write(t,e,n){return _u("write")}move(t,e,n,r){return _u("move")}memory(){return _u("memory")}floatPrecision(){return _u("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return _u("batchMatMul")}fusedBatchMatMul({}){return _u("fusedBatchMatMul")}slice(t,e,n){return _u("slice")}stridedSlice(t,e,n,r){return _u("stridedSlice")}unstack(t,e){return _u("unstack")}reverse(t,e){return _u("reverse")}concat(t,e){return _u("concat")}neg(t){return _u("neg")}add(t,e){return _u("add")}addN(t){return _u("addN")}subtract(t,e){return _u("subtract")}multiply(t,e){return _u("multiply")}realDivide(t,e){return _u("realDivide")}floorDiv(t,e){return _u("floorDiv")}sum(t,e){return _u("sum")}prod(t,e){return _u("prod")}unsortedSegmentSum(t,e,n){return _u("unsortedSegmentSum")}argMin(t,e){return _u("argMin")}argMax(t,e){return _u("argMax")}equal(t,e){return _u("equal")}notEqual(t,e){return _u("notEqual")}less(t,e){return _u("less")}lessEqual(t,e){return _u("lessEqual")}greater(t,e){return _u("greater")}greaterEqual(t,e){return _u("greaterEqual")}logicalNot(t){return _u("logicalNot")}logicalAnd(t,e){return _u("logicalAnd")}logicalOr(t,e){return _u("logicalOr")}where(t){return _u("where")}select(t,e,n){return _u("select")}topk(t,e,n){return _u("topk")}min(t,e){return _u("min")}minimum(t,e){return _u("minimum")}mod(t,e){return _u("mod")}max(t,e){return _u("max")}maximum(t,e){return _u("maximum")}all(t,e){return _u("all")}any(t,e){return _u("any")}squaredDifference(t,e){return _u("squaredDifference")}ceil(t){return _u("ceil")}floor(t){return _u("floor")}round(t){return _u("round")}sign(t){return _u("sign")}isNaN(t){return _u("isNaN")}isInf(t){return _u("isInf")}isFinite(t){return _u("isFinite")}pow(t,e){return _u("pow")}exp(t){return _u("exp")}expm1(t){return _u("expm1")}softmax(t,e){return _u("softmax")}log(t){return _u("log")}log1p(t){return _u("log1p")}sqrt(t){return _u("sqrt")}rsqrt(t){return _u("rsqrt")}square(t){return _u("square")}reciprocal(t){return _u("reciprocal")}relu(t){return _u("relu")}relu6(t){return _u("relu6")}prelu(t,e){return _u("prelu")}elu(t){return _u("elu")}eluDer(t,e){return _u("eluDer")}selu(t){return _u("selu")}int(t){return _u("int")}clip(t,e,n){return _u("clip")}abs(t){return _u("abs")}complexAbs(t){return _u("complexAbs")}sigmoid(t){return _u("sigmoid")}softplus(t){return _u("softplus")}sin(t){return _u("sin")}cos(t){return _u("cos")}tan(t){return _u("tan")}asin(t){return _u("asin")}acos(t){return _u("acos")}atan(t){return _u("atan")}atan2(t,e){return _u("atan2")}sinh(t){return _u("sinh")}cosh(t){return _u("cosh")}tanh(t){return _u("tanh")}asinh(t){return _u("asinh")}acosh(t){return _u("acosh")}atanh(t){return _u("atanh")}erf(t){return _u("erf")}step(t,e){return _u("step")}fusedConv2d({}){return _u("fusedConv2d")}conv2d(t,e,n){return _u("conv2d")}conv2dDerInput(t,e,n){return _u("conv2dDerInput")}conv2dDerFilter(t,e,n){return _u("conv2dDerFilter")}fusedDepthwiseConv2D({}){return _u("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return _u("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return _u("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return _u("depthwiseConv2DDerFilter")}conv3d(t,e,n){return _u("conv3d")}conv3dDerInput(t,e,n){return _u("conv3dDerInput")}conv3dDerFilter(t,e,n){return _u("conv3dDerFilter")}maxPool(t,e){return _u("maxPool")}maxPoolBackprop(t,e,n,r){return _u("maxPoolBackprop")}avgPool(t,e){return _u("avgPool")}avgPoolBackprop(t,e,n){return _u("avgPoolBackprop")}avgPool3d(t,e){return _u("avgPool3d")}avgPool3dBackprop(t,e,n){return _u("avgPool3dBackprop")}maxPool3d(t,e){return _u("maxPool3d")}maxPool3dBackprop(t,e,n,r){return _u("maxPool3dBackprop")}reshape(t,e){return _u("reshape")}cast(t,e){return _u("cast")}tile(t,e){return _u("tile")}pad(t,e,n){return _u("pad")}transpose(t,e){return _u("transpose")}gather(t,e,n){return _u("gather")}gatherND(t,e){return _u("gatherND")}scatterND(t,e,n){return _u("scatterND")}batchToSpaceND(t,e,n){return _u("batchToSpaceND")}spaceToBatchND(t,e,n){return _u("spaceToBatchND")}resizeBilinear(t,e,n,r){return _u("resizeBilinear")}resizeBilinearBackprop(t,e,n){return _u("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return _u("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return _u("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,s,i){return _u("batchNorm")}localResponseNormalization4D(t,e,n,r,s){return _u("localResponseNormalization4D")}LRNGrad(t,e,n,r,s,i,a){return _u("LRNGrad")}multinomial(t,e,n,r){return _u("multinomial")}oneHot(t,e,n,r){return _u("oneHot")}cumsum(t,e,n,r){return _u("cumsum")}nonMaxSuppression(t,e,n,r,s){return _u("nonMaxSuppression")}fft(t){return _u("fft")}ifft(t){return _u("ifft")}complex(t,e){return _u("complex")}real(t){return _u("real")}imag(t){return _u("imag")}cropAndResize(t,e,n,r,s,i){return _u("cropAndResize")}depthToSpace(t,e,n){return _u("depthToSpace")}split(t,e,n){return _u("split")}sparseToDense(t,e,n,r){return _u("sparseToDense")}diag(t){return _u("diag")}fill(t,e,n){return _u("fill")}onesLike(t){return _u("onesLike")}zerosLike(t){return _u("zerosLike")}linspace(t,e,n){return _u("linspace")}dispose(){return _u("dispose")}}function _u(t){throw new Error(`'${t}' not yet implemented or not found in the registry. Did you forget to import the kernel?`)}let Ou;function Mu(){return null==Ou&&(Ou=Pt.backend.epsilon()),Ou}St.prototype.add=function(t){return this.throwIfDisposed(),Ie(this,t)},St.prototype.atan2=function(t){return this.throwIfDisposed(),Ji(this,t)},St.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Zi(this,t,e,n,r)},St.prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),ea(this,t,e,n,r,s)},St.prototype.broadcastTo=function(t){return this.throwIfDisposed(),aa(this,t)},St.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),_s(this,t,e)},St.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof St&&(t=[t]),je([this,...t],e)},St.prototype.conv1d=function(t,e,n,r,s,i){return this.throwIfDisposed(),ha(this,t,e,n,r,s,i)},St.prototype.conv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Mr(this,t,e,n,r,s,i)},St.prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),da(this,t,e,n,r,s)},St.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Ur(this,t,e,n)},St.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ga(this,t,e)},St.prototype.depthwiseConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),ma(this,t,e,n,r,s,i)},St.prototype.depthwiseConv2D=function(t,e,n,r,s,i){return Vi("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),ma(this,t,e,n,r,s,i)},St.prototype.div=function(t){return this.throwIfDisposed(),an(this,t)},St.prototype.divNoNan=function(t){return this.throwIfDisposed(),ya(this,t)},St.prototype.dot=function(t){return this.throwIfDisposed(),xa(this,t)},St.prototype.elu=function(){return this.throwIfDisposed(),va(this)},St.prototype.equal=function(t){return this.throwIfDisposed(),wa(this,t)},St.prototype.floorDiv=function(t){return this.throwIfDisposed(),sn(this,t)},St.prototype.greater=function(t){return this.throwIfDisposed(),hs(this,t)},St.prototype.greaterEqual=function(t){return this.throwIfDisposed(),ss(this,t)},St.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Ia(this,t)},St.prototype.less=function(t){return this.throwIfDisposed(),is(this,t)},St.prototype.lessEqual=function(t){return this.throwIfDisposed(),ds(this,t)},St.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Sa(this,t,e,n,r)},St.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Sr(this,t,e,n)},St.prototype.max=function(t,e){return this.throwIfDisposed(),Ea(this,t,e)},St.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Ra(this,t,e,n,r)},St.prototype.maximum=function(t){return this.throwIfDisposed(),ka(this,t)},St.prototype.minimum=function(t){return this.throwIfDisposed(),Ta(this,t)},St.prototype.mod=function(t){return this.throwIfDisposed(),Da(this,t)},St.prototype.mul=function(t){return this.throwIfDisposed(),on(this,t)},St.prototype.notEqual=function(t){return this.throwIfDisposed(),_a(this,t)},St.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),zi(this,t,e,n)},St.prototype.pad=function(t,e){return this.throwIfDisposed(),Ps(this,t,e)},St.prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),Pa(this,t,e,n,r,s)},St.prototype.pow=function(t){return this.throwIfDisposed(),Ss(this,t)},St.prototype.prelu=function(t){return this.throwIfDisposed(),Wa(this,t)},St.prototype.relu=function(){return this.throwIfDisposed(),Ya(this)},St.prototype.relu6=function(){return this.throwIfDisposed(),Ja(this)},St.prototype.selu=function(){return this.throwIfDisposed(),Za(this)},St.prototype.separableConv2d=function(t,e,n,r,s,i){return this.throwIfDisposed(),Qa(this,t,e,n,r,s,i)},St.prototype.split=function(t,e){return this.throwIfDisposed(),Tr(this,t,e)},St.prototype.squaredDifference=function(t){return this.throwIfDisposed(),to(this,t)},St.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Rr(this,t,e)},St.prototype.sub=function(t){return this.throwIfDisposed(),Yr(this,t)},St.prototype.tile=function(t){return this.throwIfDisposed(),Jr(this,t)},St.prototype.transpose=function(t){return this.throwIfDisposed(),Wr(this,t)},kt=c;class Lu extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Lu.prototype)}}class zu extends Error{constructor(t){super(t),Object.setPrototypeOf(this,zu.prototype)}}class Bu extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Bu.prototype)}}class Pu extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Pu.prototype)}}class Wu extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Wu.prototype)}}function Uu(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Vu(t,e){if(!t)throw new Wu(e)}function Gu(t,e){let n=0;for(const r of t)r===e&&n++;return n}function Hu(t){return 1===t.length?t[0]:t}function qu(t){return Array.isArray(t)?t:[t]}function ju(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Ku(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}Error;let Xu={};function Yu(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Ju(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach(t=>Ju(t));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Ju(e):t[n]=e.value)}}}function Zu(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let i;if(s in n)i=n[s];else if(s in Xu)i=Xu[s];else if(i=e[s],null==i)throw new Bu(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=t;if(null==i.className||null==i.config)throw new Bu(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,l;if(a in n?[o,l]=n[a]:a in Xu?[o,l]=Xu.className:a in e&&([o,l]=e[a]),null==o)throw new Bu(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const n of Object.keys(Xu))t[n]=Xu[n];for(const s of Object.keys(n))t[s]=n[s];i.config.customObjects=t;const e=Object.assign({},Xu);for(const s of Object.keys(n))Xu[s]=n[s];Ju(i.config);const r=l(o,i.config,n,s);return Xu=Object.assign({},e),r}{const t=Object.assign({},Xu);for(const r of Object.keys(n))Xu[r]=n[r];const e=new o(i.config);return Xu=Object.assign({},t),e}}}function Qu(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function ec(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function nc(t){if(null==t)throw new Bu(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function rc(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Bu(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function sc(t,e,n=0,r=1/0){return Vu(n>=0),Vu(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function ic(t,e){Array.isArray(t)?(M(t.length>0,()=>`${e} is unexpectedly an empty array.`),t.forEach((t,n)=>ic(t,`element ${n+1} of ${e}`))):M(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got ${ac(t)}.`)}function ac(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>ac(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function oc(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function lc(t,e){return qi(()=>ir(Sn(on(t,t),e,!0)))}class uc extends Pi{getConfig(){return{}}}Ui((()=>{class t extends uc{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return qi(()=>{const e=lc(t,this.axis),n=Ln(e,0,this.maxValue);return on(t,an(n,Ie(Mu(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return t.className="MaxNorm",t})()),Ui((()=>{class t extends uc{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return qi(()=>an(t,Ie(Mu(),lc(t,this.axis))))}getConfig(){return{axis:this.axis}}}return t.className="UnitNorm",t})()),Ui((()=>{class t extends uc{apply(t){return Ya(t)}}return t.className="NonNeg",t})()),Ui((()=>{class t extends uc{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return qi(()=>{const e=lc(t,this.axis),n=Ie(on(this.rate,Ln(e,this.minValue,this.maxValue)),on(1-this.rate,e));return on(t,an(n,Ie(Mu(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return t.className="MinMaxNorm",t})());const cc={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function hc(t){return Yu(t)}function dc(t,e={}){return Zu(t,Wi.getMap().classNameMap,e,"constraint")}function pc(t){return null==t?null:"string"==typeof t?dc({className:t in cc?cc[t]:t,config:{}}):t instanceof uc?t:dc(t)}const fc=["channelsFirst","channelsLast"],gc=["valid","same","causal"],mc=["max","avg"],bc=["sum","mul","concat","ave"],yc=new Map;function xc(t){rc(fc,"DataFormat",t)}function vc(t){rc(gc,"PaddingMode",t)}function wc(t){rc(mc,"PoolMode",t)}const $c=[];function Cc(t,e){$c.push(t);try{const t=e();return $c.pop(),t}catch(n){throw $c.pop(),n}}function kc(t){if(!Ec(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===$c.length?"":$c.join("/")+"/")+t}function Ic(t){if(!Ec(t))throw new Error("Not a valid tensor name: '"+t+"'");yc.has(t)||yc.set(t,0);const e=yc.get(t);if(yc.set(t,yc.get(t)+1),e>0){const n=`${t}_${e}`;return yc.set(n,1),n}return t}const Sc=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ec(t){return!!t.match(Sc)}function Rc(t){return t===parseInt(t.toString(),10)}function Ac(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function Nc(t){return _e(t=Array.isArray(t)?new Float32Array(t):t)}function Tc(t){return kn(Nc(t)).dataSync()[0]}function Dc(t){return Ea(Nc(t)).dataSync()[0]}function Fc(t,e){if(e<t)throw new Bu(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function _c(t,e){return t.asType(e)}function Oc(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function Mc(t,e,n){return qi(()=>{switch(t.rank){case 1:return Xs(t,e,n);case 2:return Ys(t,[e,0],[n,t.shape[1]]);case 3:return Js(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Zs(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Ks(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Ks(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Bu(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Lc(t,e,n){return qi(()=>{switch(t.rank){case 1:return Xs(t,e,n);case 2:return Ys(t,[0,e],[t.shape[0],n]);case 3:return Js(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Zs(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Bu(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function zc(t,e,n,r){return qi(()=>{switch(t.rank){case 1:return Xs(t,e,n);case 2:switch(r){case 1:return Mc(t,e,n);case 2:return Lc(t,e,n);default:throw new Bu(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Mc(t,e,n);case 2:return Js(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Lc(t,e,n);default:throw new Bu(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Mc(t,e,n);case 2:return Zs(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Zs(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Lc(t,e,n);default:throw new Bu(`The axis is not within the rank of the tensor ${r}`)}default:throw new Bu(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}})}function Bc(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),je(t,e)}function Pc(t,e){switch(t.rank){case 1:return oa([t,e]);case 2:return la([t,e],0);case 3:return ua([t,e],0);case 4:return ca([t,e],0);default:throw new Bu(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function Wc(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Bu(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Jr(t,e)}function Uc(t,e=0,n=1,r,s){return Ka(t,e,n,r,s)}function Vc(t,e,n,r){if(t.rank<2||e.rank<2)throw new Pu(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Pu(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return Vl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?qc(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),i=s.pop();t=t.reshape([-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(c).reshape([l,-1]);const h=[...s,...u];return Vl({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?qc(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Gc(t,e,n){return qi(()=>(e=Array.isArray(e)?_e(e,"int32"):e.toInt(),uo(t,e,n)))}function Hc(t){return on(t,t)}function qc(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Bu(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return e.reshape(1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return e.reshape(1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===t){if("channelsFirst"===n)return e.reshape(1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return e.reshape(1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===t){if("channelsFirst"===n)return e.reshape(1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return e.reshape(1===r.length?[1,1,r[0]]:[1].concat(r))}else if(t<3)return e;throw new Bu(`Unsupported input rank by biasAdd: ${e.rank}`)}function jc(t,e,n){return qi(()=>(null==n&&(n="channelsLast"),xc(n),t.add(qc(t.rank,e,n))))}function Kc(t,e,n,r){return qi(()=>Qo(t,e,n,r))}function Xc(t,e,n=!1){return n?t():e()}const Yc=["fanIn","fanOut","fanAvg"],Jc=["normal","uniform","truncatedNormal"];class Zc extends Pi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}Ui((()=>{class t extends Zc{apply(t,e){return Ue(t,e)}}return t.className="Zeros",t})());let Qc=(()=>{class t extends Zc{apply(t,e){return We(t,e)}}return t.className="Ones",t})();Ui(Qc),Ui((()=>{class t extends Zc{constructor(t){if(super(),"object"!=typeof t)throw new Bu(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new Bu(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return qi(()=>on(Fe(this.value),We(t,e)))}getConfig(){return{value:this.value}}}return t.className="Constant",t})()),Ui((()=>{class t extends Zc{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Xa(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return t.className="RandomUniform",t})()),Ui((()=>{class t extends Zc{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Pu(`randomNormal does not support dType ${e}.`);return Uc(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return t.className="RandomNormal",t})()),Ui((()=>{class t extends Zc{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Pu(`truncatedNormal does not support dType ${e}.`);return eo(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return t.className="TruncatedNormal",t})()),Ui((()=>{class t extends Zc{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return qi(()=>{if(2!==t.length||t[0]!==t[1])throw new Bu("Identity matrix initializer can only be used for 2D square matrices.");return on(this.gain,$a(t[0]))})}getConfig(){return{gain:this.gain}}}return t.className="Identity",t})());let th=(()=>{class t extends Zc{constructor(t){if(super(),t.scale<0)throw new Bu(`scale must be a positive float. Got: ${t.scale}`);this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,function(t){rc(Yc,"FanMode",t)}(this.mode),this.distribution=null==t.distribution?"normal":t.distribution,function(t){rc(Jc,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(xc(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Ac(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=Ac(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=Ac(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let i=this.scale;if(i/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,s):Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Pu(`${this.getClassName()} does not support dType ${e}.`);return eo(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Xa(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return t.className="VarianceScaling",t})();Ui(th);let eh=(()=>{class t extends th{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return th.className}}return t.className="GlorotUniform",t})();Ui(eh);let nh=(()=>{class t extends th{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return th.className}}return t.className="GlorotNormal",t})();Ui(nh);let rh=(()=>{class t extends th{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return th.className}}return t.className="HeNormal",t})();Ui(rh);let sh=(()=>{class t extends th{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return th.className}}return t.className="HeUniform",t})();Ui(sh);let ih=(()=>{class t extends th{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return th.className}}return t.className="LeCunNormal",t})();Ui(ih);let ah=(()=>{class t extends th{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return th.className}}return t.className="LeCunNormal",t})();Ui(ah),Ui((()=>{class t extends Zc{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Pu("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return qi(()=>{if(2!==t.length)throw new Pu("The Orthogonal Initializer does not support non-2D shapes yet.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Uc(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=xl(e);return t[0]>t[1]&&(n=n.transpose()),on(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}return t.className="Orthogonal",t})());const oh={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function lh(t,e={}){return Zu(t,Wi.getMap().classNameMap,e,"initializer")}function uh(t){return Yu(t)}function ch(t){if("string"==typeof t){const e=t in oh?oh[t]:t;if("GlorotNormal"===e)return new nh;if("GlorotUniform"===e)return new eh;if("HeNormal"===e)return new rh;if("HeUniform"===e)return new sh;if("LeCunNormal"===e)return new ih;if("LeCunUniform"===e)return new ah;{const t={};return t.className=e,t.config={},lh(t)}}return t instanceof Zc?t:lh(t)}let hh=0;function dh(){return hh++}const ph={};function fh(t=""){return t in ph||(ph[t]=0),ph[t]+=1,t+ph[t].toString()}function gh(t){return Array.isArray(t)&&Array.isArray(t[0])}function mh(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function bh(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Bu(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function yh(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new Bu(`Expected exactly 1 Shape; got ${t.length}`)}return t}function xh(t){let e=0;for(const n of t)e+=0===n.shape.length?1:n.shape.reduce((t,e)=>t*e);return e}const vh="Variable";class wh{constructor(t,e="float32",n=vh,r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=dh(),this.originalName=kc(n=null==n?vh:n),this.name=Ic(this.originalName),this.trainable_=r,this.constraint=s,this.val=Pe(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function $h(t){return t.map(t=>t.read())}function Ch(t){t.forEach(t=>{t[0].write(t[1])})}class kh{constructor(t){this.dtype=t.dtype,this.shape=t.shape,this.ndim=null!=t.shape?t.shape.length:t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ih{constructor(t,e,n,r,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=dh(),null!=i&&(this.originalName=kc(i),this.name=Ic(this.originalName)),this.rank=e.length}}let Sh=0;class Eh{constructor(t,e){this.callArgs=e,this.id=Sh++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)t.push(null!=e?e.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Rh=0;class Ah extends Pi{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Rh++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=ju(t)+"_"+fh(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}this.initialWeights=null!=t.weights?t.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new zu(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Bu(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Hu(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Hu(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Lu(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Lu(`Layer ${this.name} is not connected, no input to return.`);return Hu(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Lu(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Lu(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Hu(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=qu(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=qu(this.inputSpec);if(t.length!==e.length)throw new Bu(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new Bu(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new Bu(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new Bu(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Bu(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),i=s.axes[e],a=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new Bu(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],i=r.shape[t];if(null!=e&&null!=i&&e!==i)throw new Bu(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=qu(t);let r=!0;for(const i of n)if(!(i instanceof Ih)){r=!1;break}let s=!0;for(const i of n)if(i instanceof Ih){s=!1;break}if(r===s)throw new Bu("Arguments to apply() must be all SymbolicTensors or all Tensors");return Cc(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of qu(t))e.push(n.shape);this.build(Hu(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=qu(r),i=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),i.push(t);if(r=Hu(i),null!=this.activityRegularizer)throw new Pu("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=qu(t);const e=[];for(const n of t)e.push(n.shape);return Hu(e)}(t),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Ih(i,n,this,qu(t),e,this.name,r)):new Ih(i,r,this,qu(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Pu("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Lu(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Lu(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "outut shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new zu(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return xh(this.weights)}build(t){this.built=!0}getWeights(t=!1){return $h(t?this.trainableWeights:this.weights)}setWeights(t){qi(()=>{const e=this.weights;if(e.length!==t.length)throw new Bu(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=$h(e);for(let s=0;s<r.length;++s){const i=r[s],a=e[s],o=t[s];if(!W(i.shape,o.shape))throw new Bu(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}Ch(n)})}addWeight(t,e,n,r,s,i,a){if(-1!==this._addedWeightNames.indexOf(t))throw new Bu(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=ch("zeros"));const o=r.apply(e,n),l=new wh(o,n,t,i,a);return o.dispose(),null!=s&&this.addLoss(()=>s.apply(l.read())),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=qu(t),null!=this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,s,i,a=null){const o=qu(t);e=qu(e),n=qu(n),r=qu(r),s=mh(s),i=mh(i);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new Eh({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Nh(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=Nh(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}let Th=(()=>{class t extends Ah{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:fh("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Bu("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Bu("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Bu("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Ih(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Eh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Bu(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return t.className="InputLayer",t})();function Dh(t){return Fh.apply(this,arguments)}function Fh(){return(Fh=b(function*(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const i=t[s];if("number"!=typeof i){const t=i;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=yield Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];ji(r)}})).apply(this,arguments)}function _h(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}Ui(Th);class Oh{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return b(function*(){})()}onEpochEnd(t,e){return b(function*(){})()}onBatchBegin(t,e){return b(function*(){})()}onBatchEnd(t,e){return b(function*(){})()}onTrainBegin(t){return b(function*(){})()}onTrainEnd(t){return b(function*(){})()}setModel(t){}}class Mh{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){var n=this;return b(function*(){null==e&&(e={});for(const r of n.callbacks)yield r.onEpochBegin(t,e)})()}onEpochEnd(t,e){var n=this;return b(function*(){null==e&&(e={});for(const r of n.callbacks)yield r.onEpochEnd(t,e)})()}onBatchBegin(t,e){var n=this;return b(function*(){null==e&&(e={});for(const r of n.callbacks)yield r.onBatchBegin(t,e)})()}onBatchEnd(t,e){var n=this;return b(function*(){null==e&&(e={});for(const r of n.callbacks)yield r.onBatchEnd(t,e)})()}onTrainBegin(t){var e=this;return b(function*(){null==t&&(t={});for(const n of e.callbacks)yield n.onTrainBegin(t)})()}onTrainEnd(t){var e=this;return b(function*(){null==t&&(t={});for(const n of e.callbacks)yield n.onTrainEnd(t)})()}}class Lh extends Oh{constructor(){super()}onEpochBegin(t){var e=this;return b(function*(){e.seen=0,e.totals={}})()}onBatchEnd(t,e){var n=this;return b(function*(){null==e&&(e={});const t=null==e.size?0:e.size;n.seen+=t;for(const r in e){const s=e[r];if("number"==typeof s)n.totals.hasOwnProperty(r)||(n.totals[r]=0),n.totals[r]=n.totals[r]+s*t;else{let e;r in n.totals?e=n.totals[r]:n.totals[r]=0;const i=qi(()=>Ie(n.totals[r],on(s,t)));n.totals[r]=i,null!=e&&e.dispose()}}})()}onEpochEnd(t,e){var n=this;return b(function*(){if(null!=e)for(const t of n.params.metrics)null!=n.totals[t]&&("number"==typeof n.totals[t]?e[t]=n.totals[t]/n.seen:qi(()=>{const r=on(an(1,n.seen),n.totals[t]);e[t]=r,n.totals[t].dispose(),Ki(e[t])}))})()}}class zh extends Oh{onTrainBegin(t){var e=this;return b(function*(){e.epoch=[],e.history={}})()}onEpochEnd(t,e){var n=this;return b(function*(){null==e&&(e={}),n.epoch.push(t);for(const t in e)null==n.history[t]&&(n.history[t]=[]),n.history[t].push(e[t])})()}syncData(){var t=this;return b(function*(){const e=[],n=[],r=[];for(const i in t.history){const s=t.history[i];for(let t=0;t<s.length;++t)"number"!=typeof s[t]&&(e.push(s[t].data()),n.push(i),r.push(t))}const s=yield Promise.all(e);for(let i=0;i<s.length;++i)t.history[n[i]][r[i]].dispose(),t.history[n[i]][r[i]]=s[i][0]})()}}class Bh extends Oh{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");tt(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=ct();return(...s)=>{const i=ct();return i-r<e||(r=i,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,n){var r=this;return b(function*(){const s=[];null!=r.yield&&(yield Dh(n),s.push(r.yield(t,e,n))),s.push(ru()),yield Promise.all(s)})()}onEpochBegin(t,e){var n=this;return b(function*(){n.currentEpoch=t,null!=n.epochBegin&&(yield Dh(e),yield n.epochBegin(t,e))})()}onEpochEnd(t,e){var n=this;return b(function*(){const r=[];null!=n.epochEnd&&(yield Dh(e),r.push(n.epochEnd(t,e))),"epoch"===n.yieldEvery&&r.push(ru()),yield Promise.all(r)})()}onBatchBegin(t,e){var n=this;return b(function*(){null!=n.batchBegin&&(yield Dh(e),yield n.batchBegin(t,e))})()}onBatchEnd(t,e){var n=this;return b(function*(){const r=[];null!=n.batchEnd&&(yield Dh(e),r.push(n.batchEnd(t,e))),"batch"===n.yieldEvery?r.push(ru()):tt(n.yieldEvery)&&r.push(n.maybeWait(n.currentEpoch,t,e)),yield Promise.all(r)})()}onTrainBegin(t){var e=this;return b(function*(){null!=e.trainBegin&&(yield Dh(t),yield e.trainBegin(t))})()}onTrainEnd(t){var e=this;return b(function*(){null!=e.trainEnd&&(yield Dh(t),yield e.trainEnd(t))})()}}function Ph(t,e){return null==t&&(t={}),t instanceof Oh?[t]:Array.isArray(t)&&t[0]instanceof Oh?t:qu(t).map(t=>new Bh(t,e))}let Wh=(()=>{class t{constructor(){}static registerCallbackConstructor(e,n){M(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),t.checkForDuplicate(n),null==t.constructors[e]&&(t.constructors[e]=[]),t.constructors[e].push(n)}static checkForDuplicate(e){for(const n in t.constructors)t.constructors[+n].forEach(t=>{if(t===e)throw new Bu("Duplicate callback constructor.")})}static clear(){t.constructors={}}static createCallbacks(e){const n=[];for(const r in t.constructors){const s=+r;e>=s&&n.push(...t.constructors[s])}return n.map(t=>new t)}}return t.constructors={},t})();function Uh(t,e,n,r,s,i,a,o,l){const u=new zh,c=[new Lh,...Wh.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new Mh(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Vh(t,e={},n=!1){return Zu(t,Wi.getMap().classNameMap,e,"layer",n)}function Gh(t,e){return qi(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Sn(Hc(t),e,!0),r=Ca(n.shape,Mu()),s=ir(ka(n,r));return an(t,s)})}function Hh(t,e){return qi(()=>Cn(Hc(Yr(e,t)),-1))}function qh(t,e){return qi(()=>Cn(An(Yr(e,t)),-1))}function jh(t,e){return qi(()=>{const n=Yr(t,e),r=Ln(An(t),Mu(),Number.MAX_VALUE),s=An(an(n,r));return on(100,Cn(s,-1))})}function Kh(t,e,n=!1){return qi(()=>{if(n)e=_o(e);else{const t=Sn(e,e.shape.length-1,!0);e=an(e,t)}return e=Ln(e,Mu(),1-Mu()),jn(Sn(on(t.toFloat(),Gn(e)),e.shape.length-1))})}function Xh(t,e,n=!1){return qi(()=>{const r=Vn(function(t){const e=[Ac(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=Ln(e,Mu(),1-Mu())).shape;return Kh(zi(r,s[s.length-1]).reshape(s),e,n)})}function Yh(t,e){return qi(()=>{let n;return n=Ln(e,Mu(),1-Mu()),n=Gn(an(n,Yr(1,n))),Cn(function(t,e){if(!W(t.shape,e.shape))throw new Bu(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return qi(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function Jh(t,e){return qi(()=>{const n=Gh(t,-1),r=Gh(e,-1),s=on(n,r);return jn(Sn(s,-1))})}const Zh={meanSquaredError:Hh,meanAbsoluteError:qh,meanAbsolutePercentageError:jh,meanSquaredLogarithmicError:function(t,e){return qi(()=>{const n=Ln(e,Mu(),Number.MAX_VALUE),r=Gn(Ie(1,n)),s=Ln(t,Mu(),Number.MAX_VALUE),i=Gn(Ie(1,s));return Cn(Hc(Yr(r,i)),-1)})},squaredHinge:function(t,e){return qi(()=>{const n=ka(0,Yr(1,on(t,e)));return Cn(Hc(n),-1)})},hinge:function(t,e){return qi(()=>{const n=ka(0,Yr(1,on(t,e)));return Cn(n,-1)})},categoricalHinge:function(t,e){return qi(()=>{const n=Sn(on(t,e),-1),r=Ea(on(Yr(1,t),e),-1);return ka(0,Ie(1,Yr(r,n)))})},logcosh:function(t,e){return qi(()=>{const n=Math.log(2),r=Yr(e,t),s=Yr(Ie(r,sr(on(-2,r))),n);return Cn(s,-1)})},categoricalCrossentropy:Kh,sparseCategoricalCrossentropy:Xh,binaryCrossentropy:Yh,kullbackLeiblerDivergence:function(t,e){return qi(()=>{const n=Ln(t,Mu(),1),r=Ln(e,Mu(),1);return Sn(on(t,Gn(an(n,r))),-1)})},poisson:function(t,e){return qi(()=>{const n=Gn(Ie(Mu(),e));return Cn(Yr(e,on(t,n)),-1)})},cosineProximity:Jh};function Qh(t){if("string"==typeof t){if(t in Zh)return Zh[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Bu(e)}return t}function td(t,e){return qi(()=>{const n=on(.5,He(e)),r=_c(hs(e,n),t.dtype);return Cn(wa(t,r),-1)})}function ed(t,e){return qi(()=>_c(wa(vn(t,-1),vn(e,-1)),"float32"))}function nd(t,e){return Yh(t,e)}function rd(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),wa(t,e).asType("float32")}const sd=Kh,id=Xh,ad={binaryAccuracy:td,categoricalAccuracy:ed,precision:function(t,e){return qi(()=>{const n=function(t,e){return qi(()=>vs(t.equal(1),e.equal(1)).sum().cast("float32"))}(t,e),r=function(t,e){return qi(()=>vs(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),s=n.add(r);return ks(hs(s,0),n.div(s),0).cast("float32")})},categoricalCrossentropy:sd,sparseCategoricalCrossentropy:id,mse:Hh,MSE:Hh,mae:qh,MAE:qh,mape:jh,MAPE:jh,cosine:Jh};function od(t){if("string"==typeof t&&t in ad)return ad[t];if("string"!=typeof t&&null!=t)return t;throw new Bu(`Unknown metric ${t}`)}function ld(t){if(Vu(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(Zh))if(Zh[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(ad))if(ad[n]===t){e=n;break}return void 0!==e?e:t.name}}function ud(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!cd(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function cd(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e)if("string"!=typeof n||!cd(t[n]))return!1;return!0}if(Array.isArray(t)){for(const e of t)if(!cd(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function hd(t,e,n=console.log){let r="";for(let s=0;s<t.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=t[s],r=r.slice(0,e[s]),r+=" ".repeat(e[s]-r.length);n(r)}function dd(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(s){r="multiple"}hd([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function pd(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(u){s="multiple"}const i=[];for(const c of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(c)))for(let t=0;t<c.inboundLayers.length;++t)i.push(`${c.inboundLayers[t].name}[${c.nodeIndices[t]}][${c.tensorIndices[t]}]`);const a=t.name,o=t.getClassName(),l=0===i.length?"":i[0];hd([`${a} (${o})`,s,t.countParams().toString(),l],e,r);for(let c=1;c<i.length;++c)hd(["","","",i[c]],e,r)}function fd(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function gd(t,e){if(null===t)return null;if("string"==typeof t)return Ku(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];fd(e,s,r)?n.push(r):n.push(gd(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Ku(n);e[t]=gd(r,t)}}return e}}function md(t,e){if(null==t)return null;if("string"==typeof t)return ju(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];fd(e,s,r)?n.push(r):n.push(md(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[ju(n)]="name"!==n&&"className"!==n||"string"!=typeof r?md(r,n):r}return e}}class bd{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof bd)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Bu(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,n){if(null==t.dtype||t.dtype===n.dtype)return n;try{return Je(n,t.dtype)}catch(e){throw new Bu(`The dtype of the feed (${n.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ih){if(null==this.id2Value[t.id])throw new Bu(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Bu(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Ih){if(null==this.id2Value[t.id])throw new Bu(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Bu(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&ji(this.id2Mask)}}const yd={},xd={};function vd(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),a=i?t:[t],o=a.map(t=>t.name),l=[],u=e.names();for(const f of o)-1!==u.indexOf(f)?l.push(e.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+e.names().join(",");let h,d;if(null==yd[c]){const t=function(t,e){M(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const s=$d(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of t){const{sorted:t,recipientMap:a}=$d(i,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const e in a)null==r[e]&&(r[e]=new Set),a[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:wd(r)}}(a,e);h=t.sorted,d=t.recipientCounts,yd[c]=h,xd[c]=d}h=yd[c],d={},s||Object.assign(d,xd[c]);const p=new bd(e);for(let f=0;f<h.length;++f){if(null!=r){const t=Hi().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=h[f],i=t.sourceLayer;if(i instanceof Th)continue;const a=[],u=[],c=[];let g=!1;for(const n of t.inputs){const t=p.getValue(n),r=p.getMask(n);a.push(t),u.push(r),null!=r&&(g=!0),s||(d[n.name]--,0===d[n.name]&&!e.hasKey(n)&&-1===o.indexOf(n.name)&&!t.isDisposed&&!0!==n.sourceLayer.stateful&&c.push(t))}g&&((n=n||{}).mask=u[0]);const m=qu(i.apply(a,n));let b=null;i.supportsMasking&&(b=i.computeMask(a,u));const y=Cd(t),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=m[e])}s||ji(c)}return p.disposeMasks(),i?l:l[0]}function wd(t){const e={};for(const n in t)e[n]=t[n].size;return e}function $d(t,e){const n=new Set,r=[],s={};for(const o of e.names())n.add(o);const i=[],a=[];for(i.push(t);i.length>0;){const t=i[i.length-1];if(n.has(t.name)){i.pop();continue}const e=a[a.length-1]===i.length-1;if(0===t.inputs.length||e)i.pop(),r.push(t),n.add(t.name),e&&a.pop();else{a.push(i.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),!n.has(e.name)&&i.push(e)}}return{sorted:r,recipientMap:s}}function Cd(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class kd extends Ah{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=fh(t)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(t.inputs)?t.inputs.slice():[t.inputs],this.outputs=Array.isArray(t.outputs)?t.outputs.slice():[t.outputs],ec(this.inputs).length!==this.inputs.length)throw new Bu(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(t=>t.name)}`);ec(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(t=>t.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const t=b.nodeIndex,e=b.tensorIndex;this.outputLayers.push(b.sourceLayer),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(e)}for(const b of this.inputs){const t=b.sourceLayer,e=b.nodeIndex,n=b.tensorIndex;Vu(0===e,"input layer has >1 nodes"),Vu(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const e=this.inputLayers[b];if(!(e instanceof Th))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},s={},i={},a=[],o=(t,e,n,r,s,l)=>{(null==r||null==s||null==l)&&(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new zu(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(kd.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let i=0;i<c;i++)o(u.inputTensors[i],e,n,u.inboundLayers[i],u.nodeIndices[i],u.tensorIndices[i]);for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const b of this.outputs)o(b,l,u);const c=a.slice().reverse();for(const b of c){n[b.id]=b,b.id in e||(e[b.id]=0);let t=e[b.id];t=Math.max(t,null==r[b.outboundLayer.id]?0:r[b.outboundLayer.id]),r[b.outboundLayer.id]=t,s[b.outboundLayer.id]=b.outboundLayer,e[b.id]=t;for(let r=0;r<b.inboundLayers.length;r++){const s=b.inboundLayers[r].inboundNodes[b.nodeIndices[r]];e[s.id]=Math.max(t+1,null==e[s.id]?0:e[s.id]),n[s.id]=s}}const h={};for(const b in e){const t=e[b];t in h||(h[t]=[]),h[t].push(n[b])}const d={};for(const b in r){const t=r[b];t in d||(d[t]=[]),d[t].push(s[b])}let p=Object.keys(d).map(t=>parseInt(t,10)).sort(Qu);this.layers=[];for(const b of p){const t=d[b];t.sort((t,e)=>{const n=i[t.id],r=i[e.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof kd&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map(t=>parseInt(t,10)).sort(Qu);const f=this.inputs.slice(),g=[];for(const b of p)for(const t of h[b]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new zu(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map(t=>t.name);for(const b of m){const t=m.filter(t=>t===b).length;if(1!==t)throw new zu(`The name "${b}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Eh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Bu("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const i of this.layers)for(const t of i.weights){if(null!=n[t.originalName])throw new Bu(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const i in t){let r=i;if(null==n[i]){const t=i.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])s.push([n[r],t[i]]);else if(e)throw new Bu(`Provided weight data has no target variable: ${i}`);delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Bu(`${t.length} of ${r} weights are not set: ${t}`)}Ch(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.0.1",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=md(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return qi(()=>{t=qu(t);const n=new bd;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return vd(this.outputs,n,e)})}computeMask(t,e){return qi(()=>{let n;return t=qu(t),n=null==e?Uu(null,t.length):qu(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=mh(t);if(e.length!==this.inputLayers.length)throw new Bu(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<e.length;a++)n[this.inputLayers[a].name+"_0_0"]=e[a];const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(Qu);if(r.length>1)for(const a of r){const t=this.nodesByDepth[a];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let a=0;a<e.inboundLayers.length;a++)r.push(n[`${e.inboundLayers[a].name}_${e.nodeIndices[a]}_${e.tensorIndices[a]}`]);const s=mh(t.computeOutputShape(Hu(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${i}_${e}`]=s[e]}}const s=[],i=[];for(let a=0;a<this.outputLayers.length;a++)i.push(`${this.outputLayers[a].name}_${this.outputLayersNodeIndices[a]}_${this.outputLayersTensorIndices[a]}`);for(let a=0;a<i.length;a++){const t=i[a];Vu(t in n),s.push(n[t])}return Hu(s)}runInternalGraph(t,e){null==e&&(e=Uu(null,t.length));const n={};for(let o=0;o<this.inputs.length;++o)n[this.inputs[o].id]=[t[o],e[o]];const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(Qu);for(const o of r){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===i.length){const[e,n]=i[0];null==u.mask&&(u.mask=n),o=qu(t.call(e,u)),l=qu(t.computeMask(e,n)),r=[e],a=[n]}else r=i.map(t=>t[0]),a=i.map(t=>t[1]),null==u.mask&&(u.mask=a),o=qu(t.call(r,u)),l=qu(t.computeMask(r,a));if(t.activityRegularizer)throw new Pu("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t)n[s[t].id]=[o[t],l[t]]}}}const s=[],i=[],a=[];for(const o of this.outputs){Vu(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[t,e]=n[o.id];a.push(t.shape),s.push(t),i.push(e)}return[s,i,a]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof kd?1:0;for(let t=0;t<r.inboundNodes.length;t++){const s=kd.nodeKey(r,t);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Bu(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Bu("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new Bu(`No such layer: ${t}`)}calculateLosses(){return qi(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=kd.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const t=a.getClassName(),r=a.getConfig(),s=[];for(let n=0;n<a.inboundNodes.length;n++){const t=a.inboundNodes[n],r=kd.nodeKey(a,n);let o={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(i){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${t.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.tensorIndices[r];let a=e[kd.nodeKey(s,t.nodeIndices[r])];null==a&&(a=0),n.push([s.name,a,i,o])}s.push(n)}}}const o={};o.name=a.name,o.className=t,o.config=r,o.inboundNodes=s,n.push(o)}t.layers=n;const r=[];for(let a=0;a<this.inputLayers.length;a++){const t=this.inputLayers[a],n=kd.nodeKey(t,this.inputLayersNodeIndices[a]);if(!this.containerNodes.has(n))continue;let s=e[n];null==s&&(s=0),r.push([t.name,s,this.inputLayersTensorIndices[a]])}t.inputLayers=r;const s=[];for(let a=0;a<this.outputLayers.length;a++){const t=this.outputLayers[a],n=kd.nodeKey(t,this.outputLayersNodeIndices[a]);if(!this.containerNodes.has(n))continue;let r=e[n];null==r&&(r=0),s.push([t.name,r,this.outputLayersTensorIndices[a]])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},i={};function a(t,e){t.name in i?i[t.name].push(e):i[t.name]=[e]}function o(t,e){const n=[];let r;for(const i of e){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(t,e);const c=s[o];if(c.inboundNodes.length<=l)return void a(t,e);n.push(c.inboundNodes[l].outputTensors[u])}n.length>0&&t.apply(Hu(n),r)}function l(t){const n=t.name,i=Vh(t,null!=e.customObjects?e.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new Bu(`Corrupted configuration, expected array for nodeData: ${t}`);a(i,t)})}const u=e.name,c=e.layers;for(const g of c)l(g);for(;!nc(i);)for(const t of c){const e=s[t.name];if(e.name in i){const t=i[e.name];delete i[e.name];for(const n of t)o(e,n)}}const h=[],d=[],p=e.inputLayers;for(const g of p){const t=g[0],e=g[1],n=g[2];Vu(t in s),h.push(s[t].inboundNodes[e].outputTensors[n])}const f=e.outputLayers;for(const g of f){const t=g[0],e=g[1],n=g[2];Vu(t in s),d.push(s[t].inboundNodes[e].outputTensors[n])}return new t({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Bu("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){qi(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function Id(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{n.push(e in t?t[e]:null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}function Sd(t,e,n,r){return Ed.apply(this,arguments)}function Ed(){return(Ed=b(function*(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=qi(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1)return t.argMax(1);if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(yield e.data());ji(e);const s=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])}),_e(s,"float32")}return null})).apply(this,arguments)}function Rd(t,e){return on(t,e)}function Ad(t,e){let n,r;n=e.xs,r=e.ys,M(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const s=Nd("input",t.inputNames,n),i=Nd("output",t.outputNames,r),a=s[0].shape[0];M(s.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`),M(i.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`);for(let o=0;o<s.length;o++)M(s[o].shape[0]===a,()=>`Batch size mismatch: input ${t.inputNames[o]} has ${s[o].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);for(let o=0;o<i.length;o++)M(i[o].shape[0]===a,()=>`Batch size mismatch: output ${t.outputNames[o]} has ${i[o].shape[0]}; expected  ${a} based on input ${t.inputNames[0]}.`);return{xs:s,ys:i}}function Nd(t,e,n){if(n instanceof St)return[n];if(Array.isArray(n))return M(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const s of e){if(null==n[s])throw new Bu(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function Td(t){if(3===t.length)throw new Pu("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}function Dd(){return(Dd=b(function*(t,e,n){const r=null!=n.batchesPerEpoch;if(M(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),M(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),M(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),M(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),M(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(_d(n.validationData))M(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const t=Td(n.validationData);i=t.xs,a=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map(t=>"val_"+t)):l.slice();const c=Ph(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Uh(c,h,n.epochs,null,null,Fd(e,n),null,s,u);d.setModel(t),t.history=p,yield d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=yield e.iterator();for(;f<n.epochs;){const u={};yield d.onEpochBegin(f);let c=0,h=0;for(r||(g=yield e.iterator());!r||c<n.batchesPerEpoch;){const e=yield g.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=e.value){const{xs:r,ys:s}=Ad(t,e.value),i={};i.batch=h,i.size=r[0].shape[0],yield d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const e=Id(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)a.push(yield Sd(s[t],null,e[t]))}const u=r.concat(s).concat(a),p=o(u);ji(u);for(let t=0;t<l.length;++t){const e=p[t];i[l[t]]=e,Ki(e)}yield d.onBatchEnd(h,i),_h(i),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=_d(n.validationData)?qu(yield t.evaluateDataset(n.validationData,{batches:n.validationBatches})):qu(t.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(yield d.onEpochEnd(f,u),f++,t.stopTraining_)break}return yield d.onTrainEnd(),yield t.history.syncData(),t.history}finally{t.isTraining=!1}})).apply(this,arguments)}function Fd(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}function _d(t){return"function"==typeof t.iterator}function Od(t){return"function"==typeof t.next}function Md(){return(Md=b(function*(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new Pu("Verbose mode is not implemented yet.");M(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const a=Od(e)?e:yield e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=yield a.next();if(i=qi(()=>{if(e.value){const{xs:n,ys:r}=Ad(t,e.value),a=n.concat(r),u=qi(()=>s(a));if(ji(a),0===l)for(let t=0;t<u.length;++t)i.push(Fe(0));const c=a[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=i[t];i[t]=qi(()=>Ie(i[t],on(c,e))),l>0&&ji(n)}ji(u),o+=c,++l}return i}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const t=i[u];i[u]=an(i[u],o),ji(t)}return Hu(i)})).apply(this,arguments)}function Ld(t){M(t>0&&Number.isInteger(t),()=>`batchSize is required to be a positive integer, but got ${t}`)}function zd(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>Mc(t,e,n-e)):Mc(t,e,n-e)}function Bd(t,e){return qi(()=>null==t?null:Array.isArray(t)?t.map(t=>Bd(t,e)):Gc(t,"int32"===e.dtype?e:e.toInt()))}function Pd(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function Wd(t,e,n,r,s,i,a,o,l,u,c,h,d,p,f){return Ud.apply(this,arguments)}function Ud(){return(Ud=b(function*(t,e,n,r,s,i,a,o,l,u,c,h,d,p,f){null==s&&(s=32),null==i&&(i=1),null==c&&(c=!0),null==d&&(d=0);let g=!1;if(null!=l&&null!=u&&(g=!0),null!=f&&(g=!0,null==p))throw new Bu("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=t.checkNumSamples(n,s,p,"steps_per_epoch");let b;null!=m&&(b=Fc(0,m)),null==a&&(a=1);const{callbackList:y,history:x}=Uh(o,a,i,d,m,p,s,g,h);y.setModel(t),t.history=x,yield y.onTrainBegin(),t.stopTraining_=!1;for(let v=d;v<i;++v){yield y.onEpochBegin(v);const i={};if(null!=p)throw new Pu("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new Pu("batch shuffling is not implemneted yet");c&&F(b);const a=_e(b),o=Pd(m,s);for(let c=0;c<o.length;++c){const h={};if(yield y.onBatchBegin(c,h),qi(()=>{const d=o[c][0],p=o[c][1],f=Mc(a,d,p-d);h.batch=c,h.size=p-d;const m=Bd(n,f),b=e(m);for(let t=0;t<r.length;++t){const e=b[t];h[r[t]]=e,Ki(e)}if(c===o.length-1&&g){const e=t.testLoop(l,u,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];Ki(s),i["val_"+n]=s}}}),yield y.onBatchEnd(c,h),_h(h),t.stopTraining_)break}a.dispose()}if(yield y.onEpochEnd(v,i),t.stopTraining_)break}return yield y.onTrainEnd(),yield t.history.syncData(),t.history})).apply(this,arguments)}function Vd(){return(Vd=b(function*(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,a,o,l,u,c;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Ld(h);const d=!1,p=yield t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,d,h);s=p[0],i=p[1],c=p[2];let f,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Pu("validationData including sample weights is not supported yet."):new Bu(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);a=r.validationData[0],o=r.validationData[1];const e=!0,n=yield t.standardizeUserData(a,o,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=zd(s,t,e),s=zd(s,0,t),u=zd(i,t,e),i=zd(i,0,t),f=l.concat(u)}else null!=r.validationSteps&&(g=!0);const m=s.concat(i).concat(c);t.checkTrainableWeightsConsistency();const b=t.makeTrainFunction(),y=t.getDedupedMetricsNames();let x,v;g?(t.makeTestFunction(),x=t.testFunction,v=y.slice().concat(y.map(t=>"val_"+t))):(x=null,f=[],v=y.slice());const w=Ph(r.callbacks,r.yieldEvery);return yield Wd(t,b,m,y,h,r.epochs,r.verbose,w,x,f,r.shuffle,v,r.initialEpoch,null,null)}finally{t.isTraining=!1,Hd(s,e),Hd(i,n),Hd(l,a),Hd(u,o),null!=c&&ji(c)}})).apply(this,arguments)}function Gd(t){const e=[];t instanceof St&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Oc(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Hd(t,e){if(null==t)return;const n=[];if(e instanceof St)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const s in e)n.push(e[s].id);const r=[];if(t instanceof St)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const s in t){const e=t[s];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}function qd(t){return Array.isArray(t)}function jd(t){return!function(t){return t instanceof St}(t)&&!qd(t)}function Kd(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(qd(t)&&t.length>0)e=!0;else if(jd(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Bu(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map(t=>null);let i;if(jd(t)){t=t,i=[];for(const n of e){if(null==t[n])throw new Bu(`No data provided for "${n}". Need data for each key in: ${e}`);i.push(t[n])}}else if(qd(t)){if((t=t).length!==e.length)throw new Bu(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);i=t}else{if(t=t,e.length>1)throw new Bu(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);i=[t]}if(i=Gd(i),null!=n)for(let a=0;a<e.length;++a){if(null==n[a])continue;const t=i[a];if(t.shape.length!==n[a].length)throw new Bu(`Error when checking ${s}: expected ${e[a]} to have ${n[a].length} dimension(s). but got array with shape ${t.shape}`);for(let i=0;i<n[a].length;++i){if(0===i&&!r)continue;const o=t.shape[i],l=n[a][i];if(null!=l&&l>=0&&o!==l)throw new Bu(`Error when checking ${s}: expected ${e[a]} to have shape [${n[a]}], but got array with shape [${t.shape}].`)}}return i}function Xd(t,e,n,r=!0,s=""){let i;if(Array.isArray(t)){if(t.length!==e.length)throw new Bu(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);i=t}else{if(e.length>1)throw new Bu(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);i=[t]}if(null!=n)for(let a=0;a<e.length;++a){if(null==n[a])continue;const t=i[a];if(t.shape.length!==n[a].length)throw new Bu(`Error when checking ${s}: expected ${e[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(t.shape)}`);for(let i=0;i<n[a].length;++i){if(0===i&&!r)continue;const o=t.shape[i],l=n[a][i];if(null!=l&&l!==o)throw new Bu(`Error when checking ${s}: expected ${e[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}let Yd=(()=>{class t extends kd{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Bu("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const s in t.nodesByDepth)n.push(t.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){e=!1;break}r.push(...s)}if(e)for(const s of t.layers){let t=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),i=["Layer (type)","Output shape","Param #"];let a;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!s){i.push("Receives inputs"),a=[];for(const e in t.nodesByDepth)a.push(...t.nodesByDepth[e])}r("_".repeat(e)),hd(i,n,r),r("=".repeat(e));const o=t.layers;for(let c=0;c<o.length;++c)s?dd(o[c],n,r):pd(o[c],n,a,r),r((c===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=xh(null!=t.collectedTrainableWeights?t.collectedTrainableWeights:t.trainableWeights),e}(t),u=xh(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>eu.adagrad(.01),Adadelta:()=>eu.adadelta(1,.95,Mu()),Adam:()=>eu.adam(.001,.9,.999,Mu()),Adamax:()=>eu.adamax(.002,.9,.999,Mu(),0),RMSProp:()=>eu.rmsprop(.001,.9,0,Mu()),SGD:()=>eu.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Bu(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof ql))throw new Bu("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Bu(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(t=>Qh(t))}else{const n=Qh(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Bu(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Qh(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const t=this.internalOutputShapes[i];this.feedOutputNames.push(this.outputNames[i]),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Cc("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Cc("metric",()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,i;for(const a of e){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===Yh?-1!==["accuracy","acc"].indexOf(a)?r=td:-1!==["crossentropy","ce"].indexOf(a)&&(r=nd):this.lossFunctions[t]===Xh?-1!==["accuracy","acc"].indexOf(a)?r=rd:-1!==["crossentropy","ce"].indexOf(a)&&(r=id):-1!==["accuracy","acc"].indexOf(a)?r=ed:-1!==["crossentropy","ce"].indexOf(a)&&(r=sd),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else i=od(a),n=""+ld(a);let e;Cc(n,()=>{e=i}),s(t,n,e)}})(r[t])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Ld(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const i=s[0].concat(s[1]);return this.makeTestFunction(),Hu(this.testLoop(this.testFunction,i,r,n.verbose,n.steps))}finally{Hd(s[0],t),Hd(s[1],e)}}evaluateDataset(t,e){var n=this;return b(function*(){return n.makeTestFunction(),function(t,e,n){return Md.apply(this,arguments)}(n,t,e)})()}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Bu(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Bu(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Bu("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=this.retrieveSymbolicTensors(n?e:[e]),s=new bd;if(t instanceof St&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Bu(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const a of this.inputs){const e=t[a.name];if(null==e)throw new Bu(`No value is provided for the model's input ${a.name}`);s.add(a,e)}const i=vd(r,s);return n?i:i[0]}retrieveSymbolicTensors(t){const e=Uu(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map(t=>t.name);for(let r=0;r<t.length;++r){const a=i.indexOf(t[r]);if(-1!==a&&(e[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new Bu(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return qi(()=>{const r=this.checkNumSamples(t);if(n)throw new Pu("Verbose predictLoop() is not implemented yet.");const s=Pd(r,e),i=this.outputs.map(t=>[]);for(let e=0;e<s.length;++e)qi(()=>{const n=zd(t,s[e][0],s[e][1]),r=[];if(Array.isArray(n))for(let t=0;t<n.length;++t)r.push({key:this.inputs[t],value:n[t]});else r.push({key:this.inputs[0],value:n});const i=new bd(r);return vd(this.outputs,i)}).forEach((t,e)=>i[e].push(t));return Hu(i.map(t=>je(t,0)))})}predict(t,e={}){const n=Gd(t);Xd(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return Ld(r),this.predictLoop(n,r)}finally{Hd(n,t)}}predictOnBatch(t){Xd(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new zu("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let i=0;i<this.feedOutputShapes.length;++i){const t=this.feedOutputShapes[i];s.push(this.feedLossFns[i]===Xh?t.slice(0,t.length-1).concat([1]):t)}if(function(t,e,n){const r=ec(t.map(t=>t.shape[0]));r.sort();const s=ec(e.map(t=>t.shape[0]));if(s.sort(),r.length>1)throw new Bu(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(t=>t.shape))}`);if(s.length>1)throw new Bu(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(t=>t.shape))}`);if(r.length>0&&s.length>0&&!W(r,s))throw new Bu(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=Kd(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Kd(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[Hh,Yh,Kh];for(let s=0;s<t.length;++s){const i=t[s],a=e[s],o=n[s];if(null!=a){if(a===Kh&&1===i.shape[i.shape.length-1])throw new Bu(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const t=i.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new Bu(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new Bu(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}standardizeUserData(t,e,n,r,s=!0,i){var a=this;return b(function*(){const[o,l]=a.standardizeUserDataXY(t,e,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=Id(r,a.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(yield Sd(l[e],null,t[e]))}return[o,l,u]})()}testLoop(t,e,n,r=0,s){return qi(()=>{const i=this.checkNumSamples(e,n,s,"steps"),a=[];if(r>0)throw new Pu("Verbose mode is not implemented yet.");if(null!=s)throw new Pu("steps mode in testLoop() is not implemented yet");{const r=Pd(i,n),s=_e(Fc(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=Mc(s,i,o-i),u=Bd(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)a.push(Fe(0));for(let t=0;t<c.length;++t)a[t]=Ie(a[t],on(o-i,c[t]))}for(let t=0;t<a.length;++t)a[t]=an(a[t],i)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;Gu(t,r)>1&&(s+=`_${Gu(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const a=new bd(t),o=vd(this.outputs,a,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let t=this.lossFunctions[n](r[n],o[n]);null!=s[n]&&(t=Rd(t,s[n]));const i=Cn(t);e.push(i),l=0===n?t:Ie(l,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][1];t=Cn((0,this.metricsTensors[n][0])(r[e],o[e]))}Ki(t),i.push(t)}return l=Cn(l),this.calculateLosses().forEach(t=>{l=Ie(l,t)}),l},!0,a)].concat(i)}}makeTestFunction(){this.testFunction=t=>qi(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const a=new bd(i),o=vd(this.outputs,a);for(let t=0;t<this.lossFunctions.length;++t){const r=Cn((0,this.lossFunctions[t])(s[t],o[t]));n=0===t?r:Ie(n,r),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][1],r=Cn((0,this.metricsTensors[t][0])(s[n],o[n]));e.push(r)}return e})}fit(t,e,n={}){var r=this;return b(function*(){return function(t,e,n){return Vd.apply(this,arguments)}(r,t,e,n)})()}fitDataset(t,e){var n=this;return b(function*(){return function(t,e,n){return Dd.apply(this,arguments)}(n,t,e)})()}trainOnBatch(t,e){var n=this;return b(function*(){const r=yield n.standardizeUserData(t,e),s=r[0],i=r[1],a=n.makeTrainFunction()(s.concat(i)),o=[];for(const t of a){const e=yield t.data();o.push(e[0])}return ji(a),Hu(o)})()}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||e.push({name:r[i].originalName,tensor:s[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Hi().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Hi().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=ju(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>ju(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=ju(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ju(ld(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>ju(ld(t)));{const t={};for(const e in this.metrics)t[e]=ju(ld(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Vh(gd(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Ku(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>Ku(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Ku(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>Ku(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Ku(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}save(t,e){var n=this;return b(function*(){if("string"==typeof t){const e=(t=>li.getSaveHandlers(t))(t);if(0===e.length)throw new Bu(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Bu(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Bu("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=yield ei(n.getNamedWeights(e)),s={modelTopology:n.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.0.1",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=n.optimizer){s.trainingConfig=n.getTrainingConfig();const t="optimizer",{data:e,specs:i}=yield ei(yield n.optimizer.getWeights(),t);r.specs.push(...i),r.data=ai([r.data,e])}return null!=n.userDefinedMetadata&&(ud(n.userDefinedMetadata,n.name,!0),s.userDefinedMetadata=n.userDefinedMetadata),s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)})()}setUserDefinedMetadata(t){ud(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}return t.className="Model",t})();Ui(Yd),Ui((()=>{class t extends Yd{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:fh("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new Bu(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const n=e instanceof t||e instanceof Yd;let r;if(n){if(r=e,1!==r.outputs.length)throw new Bu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==r.inputs.length)throw new Bu("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Bu("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Bu("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new Th({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=r.outputs,this.inputs=r.inputs;else{if(1!==e.inboundNodes.length)throw new Bu(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Bu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Nh(this.outputs[0])}this.inboundNodes=[],new Eh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Uu(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(yh(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Yd({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new zu("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}evaluateDataset(t,e){var n=this;return b(function*(){if(!n.built)throw new zu("The model needs to be compiled before being used.");return n.model.evaluateDataset(t,e)})()}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}fit(t,e,n={}){var r=this;return b(function*(){if(!r.built)throw new zu("The model needs to be compiled before being used.");return r.model.fit(t,e,n)})()}fitDataset(t,e){var n=this;return b(function*(){if(!n.built)throw new zu("The model needs to be compiled before being used.");return n.model.fitDataset(t,e)})()}trainOnBatch(t,e){var n=this;return b(function*(){return n.model.trainOnBatch(t,e)})()}static fromConfig(e,n,r={},s=!1){let i,a={};if(n instanceof Array){if(null==n[0].className||"Merge"===n[0].className)throw new Bu("Legacy serialization format not supported yet.");i=n}else M(null!=n.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=n.layers,delete n.layers,a=n;const o=new e(a);if(!(o instanceof t))throw new Pu(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const t of i){const e=Vh(t,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(t){if(null==this.model)throw new Bu("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Bu("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}return t.className="Sequential",t})());class Jd extends Pi{getConfig(){return{}}}Ui((()=>{class t extends Jd{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Pu(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return va(t)}(t,e)}}return t.className="elu",t})()),Ui((()=>{class t extends Jd{apply(t){return Za(t)}}return t.className="selu",t})()),Ui((()=>{class t extends Jd{apply(t){return Ya(t)}}return t.className="relu",t})()),Ui((()=>{class t extends Jd{apply(t){return qi(()=>Ta(6,Ya(t)))}}return t.className="relu6",t})()),Ui((()=>{class t extends Jd{apply(t){return t}}return t.className="linear",t})()),Ui((()=>{class t extends Jd{apply(t){return Jn(t)}}return t.className="sigmoid",t})()),Ui((()=>{class t extends Jd{apply(t){return function(t){return qi(()=>{const e=Ie(.5,on(.2,t));return Ln(e,0,1)})}(t)}}return t.className="hardSigmoid",t})()),Ui((()=>{class t extends Jd{apply(t){return sr(t)}}return t.className="softplus",t})()),Ui((()=>{class t extends Jd{apply(t){return function(t){return qi(()=>an(t,An(t).add(1)))}(t)}}return t.className="softsign",t})()),Ui((()=>{class t extends Jd{apply(t){return lr(t)}}return t.className="tanh",t})());let Zd=(()=>{class t extends Jd{apply(t,e=-1){return _o(t,e)}}return t.className="softmax",t})();function Qd(t){return t.getClassName()}function tp(t,e={}){return Zu(t,Wi.getMap().classNameMap,e,"activation")}function ep(t){if(null==t){return tp({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},tp(e)}return t instanceof Jd?t:tp(t)}Ui(Zd),Ui((()=>{class t extends Jd{apply(t,e=-1){return Oo(t,e)}}return t.className="logSoftmax",t})());class np extends Pi{}Ui((()=>{class t extends np{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return qi(()=>{let e=Ue([1]);return this.hasL1&&(e=Ie(e,Sn(on(this.l1,An(t))))),this.hasL2&&(e=Ie(e,Sn(on(this.l2,Hc(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}return t.className="L1L2",t})());const rp={l1l2:"L1L2"};function sp(t){return Yu(t)}function ip(t,e={}){return Zu(t,Wi.getMap().classNameMap,e,"regularizer")}function ap(t){return null==t?null:"string"==typeof t?ip({className:t in rp?rp[t]:t,config:{}}):t instanceof np?t:ip(t)}function op(t,e,n){if("number"==typeof t)return Uu(t,e);if(t.length!==e)throw new Bu(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const s=t[r];if(!Rc(s))throw new Bu(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${s}`)}return t}function lp(t,e,n,r,s=1){if(null==t)return t;let i;return i="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((i+r-1)/r)}function up(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Dc([n-e,0]);else{if("same"!==r)throw new Bu(`Unsupport padding mode: ${r}.`);t*=e}return t}function cp(t,e){return qi(()=>(xc(e),"channelsFirst"===e?Wr(t,[0,2,3,1]):t))}function hp(t,e){return qi(()=>(xc(e),"channelsFirst"===e?Wr(t,[0,2,3,4,1]):t))}function dp(t,e,n,r=[1,1],s="valid",i,a,o=null){return qi(()=>{if(null==i&&(i="channelsLast"),xc(i),3!==t.rank&&4!==t.rank)throw new Bu(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Bu(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=cp(t,i);if("causal"===s)throw new Pu("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Gl({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=Wr(l,[0,3,1,2])),l})}Ui((()=>{class t extends Ah{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=bh(t);let n=Ya(t);return null!=this.maxValue&&(n=Ln(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}return t.className="ReLU",t})()),Ui((()=>{class t extends Ah{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=bh(t);return Ia(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}return t.className="LeakyReLU",t})()),Ui((()=>{class t extends Ah{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=ch(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ap(t.alphaRegularizer),this.alphaConstraint=pc(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Bu(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=yh(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new kh({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=bh(t),Wa(t,this.alpha.read())}getConfig(){const t={alphaInitializer:uh(this.alphaInitializer),alphaRegularizer:sp(this.alphaRegularizer),alphaConstraint:hc(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}return t.className="PReLU",t})()),Ui((()=>{class t extends Ah{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Pu(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=bh(t);return va(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}return t.className="ELU",t})()),Ui((()=>{class t extends Ah{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=bh(t);return n.mul(_c(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}return t.className="ThresholdedReLU",t})()),Ui((()=>{class t extends Ah{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Zd).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=bh(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}return t.className="Softmax",t})());class pp extends Ah{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",pp.verifyArgs(e),this.rank=t,ic(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Pu(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=op(e.kernelSize,t,"kernelSize"),this.strides=op(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,vc(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,xc(this.dataFormat),this.activation=ep(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=ch(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=pc(e.biasConstraint),this.biasRegularizer=ap(e.biasRegularizer),this.activityRegularizer=ap(e.activityRegularizer),this.dilationRate=op(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Bu(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Bu(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Bu(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(Vu("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!sc(t.kernelSize,"number",1,3))throw new Bu(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Qd(this.activation),useBias:this.useBias,biasInitializer:uh(this.biasInitializer),biasRegularizer:sp(this.biasRegularizer),activityRegularizer:sp(this.activityRegularizer),biasConstraint:hc(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class fp extends pp{constructor(t,e){super(t,e),this.kernel=null,fp.verifyArgs(e),this.filters=e.filters,ic(this.filters,"filters"),this.kernelInitializer=ch(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=pc(e.kernelConstraint),this.kernelRegularizer=ap(e.kernelRegularizer)}build(t){t=yh(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Bu(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return qi(()=>{let e;t=bh(t);const n=null==this.bias?null:this.bias.read(),r=oc(this.activation.getClassName());if(null!=r&&2===this.rank)e=dp(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",i,a=1){return qi(()=>{if(null==i&&(i="channelsLast"),xc(i),3!==t.shape.length)throw new Bu(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Bu(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Bu(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=Wr(t,[0,2,1])),"causal"===s)throw new Pu("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=ha(t,e,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=jc(o,n)),o})}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=dp(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Pu("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",i,a){return qi(()=>{if(null==i&&(i="channelsLast"),xc(i),4!==t.rank&&5!==t.rank)throw new Bu(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Bu(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=hp(t,i);if("causal"===s)throw new Pu("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=pa(o,e,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=jc(o,n)),"channelsFirst"===i&&(o=Wr(o,[0,4,1,2,3])),o})}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=yh(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){const t=lp(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:uh(this.kernelInitializer),kernelRegularizer:sp(this.kernelRegularizer),kernelConstraint:hc(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Bu(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}let gp=(()=>{class t extends fp{constructor(e){super(2,e),t.verifyArgs(e)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!sc(t.kernelSize,"number",1,2))throw new Bu(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}return t.className="Conv2D",t})();Ui(gp),Ui((()=>{class t extends fp{constructor(e){super(3,e),t.verifyArgs(e)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Bu(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}return t.className="Conv3D",t})()),Ui((()=>{class t extends gp{constructor(t){if(super(t),this.inputSpec=[new kh({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Bu(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=yh(t)).length)throw new Bu("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Bu("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new kh({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return qi(()=>{let e=bh(t);if(4!==e.shape.length)throw new Bu(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape;let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const i=n[s],a=this.kernelSize[1],o=this.strides[1],l=[n[0],up(n[r],this.strides[0],this.kernelSize[0],this.padding),up(i,o,a,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=Wr(e,[0,2,3,1]));let u=da(e,this.kernel.read(),l,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(u=Wr(u,[0,3,1,2])),null!=this.bias&&(u=jc(u,this.bias.read(),this.dataFormat)),null!=this.activation&&(u=this.activation.apply(u)),u})}computeOutputShape(t){const e=(t=yh(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=up(e[r],o,i,this.padding),e[s]=up(e[s],l,a,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}return t.className="Conv2DTranspose",t})());let mp=(()=>{class t extends fp{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Bu("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Bu("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Bu(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ch(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ap(e.depthwiseRegularizer),this.depthwiseConstraint=pc(e.depthwiseConstraint),this.pointwiseInitializer=ch(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ap(e.pointwiseRegularizer),this.pointwiseConstraint=pc(e.pointwiseConstraint)}build(t){if((t=yh(t)).length<this.rank+2)throw new Bu(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Bu(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):null,this.inputSpec=[new kh({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return qi(()=>{let e;if(t=bh(t),1===this.rank)throw new Pu("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Wr(t,[0,2,3,1])),e=Qa(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=jc(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=Wr(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=uh(this.depthwiseInitializer),t.pointwiseInitializer=uh(this.pointwiseInitializer),t.depthwiseRegularizer=sp(this.depthwiseRegularizer),t.pointwiseRegularizer=sp(this.pointwiseRegularizer),t.depthwiseConstraint=hc(this.depthwiseConstraint),t.pointwiseConstraint=hc(this.pointwiseConstraint),t}}return t.className="SeparableConv",t})();Ui((()=>{class t extends mp{constructor(t){super(2,t)}}return t.className="SeparableConv2D",t})()),Ui((()=>{class t extends fp{constructor(e){super(1,e),t.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!sc(t.kernelSize,"number",1,1))throw new Bu(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}return t.className="Conv1D",t})()),Ui((()=>{class t extends Ah{constructor(t){super(t),this.cropping="number"==typeof t.cropping?[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return qi(()=>{if(t=bh(t),"channelsLast"===this.dataFormat){const e=zc(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return zc(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=zc(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return zc(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}return t.className="Cropping2D",t})()),Ui((()=>{class t extends Ah{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],null==t[2]?null:this.size[0]*t[2],null==t[3]?null:this.size[1]*t[3]]:[t[0],null==t[1]?null:this.size[0]*t[1],null==t[2]?null:this.size[1]*t[2],t[3]]}call(t,e){return qi(()=>{let e=bh(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=Wr(e,[0,2,3,1]);const t=e.resizeNearestNeighbor([this.size[0]*n[2],this.size[1]*n[3]]);return Wr(t,[0,3,1,2])}return e.resizeNearestNeighbor([this.size[0]*n[1],this.size[1]*n[2]])})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}return t.className="UpSampling2D",t})()),Ui((()=>{class t extends pp{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ch(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=pc(t.depthwiseConstraint),this.depthwiseRegularizer=ap(t.depthwiseRegularizer)}build(t){if((t=yh(t)).length<4)throw new Bu(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Bu(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(t,e){return qi(()=>{let e=function(t,e,n=[1,1],r="valid",s,i){return qi(()=>{null==s&&(s="channelsLast"),xc(s);let a=cp(t,s);if(4!==t.rank)throw new Bu(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Bu(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=ma(a,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=Wr(a,[0,3,1,2])),a})}(t=bh(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=jc(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=yh(t);const e="channelsFirst"===this.dataFormat?t[3]:t[2],n="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=lp("channelsFirst"===this.dataFormat?t[2]:t[1],this.kernelSize[0],this.padding,this.strides[0]),s=lp(e,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],n,r,s]:[t[0],r,s,n]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=uh(this.depthwiseInitializer),t.depthwiseRegularizer=sp(this.depthwiseRegularizer),t.depthwiseConstraint=hc(this.depthwiseRegularizer),t}}return t.className="DepthwiseConv2D",t})());let bp=(()=>{class t extends Ah{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return qi(()=>{this.invokeCallHook(t,e);const n=bh(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Xc(()=>Kc(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}return t.className="Dropout",t})();Ui(bp),Ui((()=>{class t extends bp{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}return t.className="SpatialDropout1D",t})()),Ui((()=>{class t extends Ah{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,ic(this.units,"units"),this.activation=ep(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=ch(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ch(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=pc(t.kernelConstraint),this.biasConstraint=pc(t.biasConstraint),this.kernelRegularizer=ap(t.kernelRegularizer),this.biasRegularizer=ap(t.biasRegularizer),this.activityRegularizer=ap(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=yh(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=yh(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return qi(()=>{this.invokeCallHook(t,e);const n=bh(t),r=oc(this.activation.getClassName());let s;return null!=r?s=Vc(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Vc(n,this.kernel.read()),null!=this.bias&&(s=jc(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s})}getConfig(){const t={units:this.units,activation:Qd(this.activation),useBias:this.useBias,kernelInitializer:uh(this.kernelInitializer),biasInitializer:uh(this.biasInitializer),kernelRegularizer:sp(this.kernelRegularizer),biasRegularizer:sp(this.biasRegularizer),activityRegularizer:sp(this.activityRegularizer),kernelConstraint:hc(this.kernelConstraint),biasConstraint:hc(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}return t.className="Dense",t})()),Ui((()=>{class t extends Ah{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=yh(t);for(const e of t.slice(1))if(null==e)throw new Bu(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Ac(t,1)]}call(t,e){return qi(()=>{this.invokeCallHook(t,e);let n=bh(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Bu(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Ac(t.shape,1)];return t.reshape(e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}return t.className="Flatten",t})()),Ui((()=>{class t extends Ah{constructor(t){super(t),this.supportsMasking=!0,this.activation=ep(t.activation)}call(t,e){return qi(()=>{this.invokeCallHook(t,e);const n=bh(t);return this.activation.apply(n)})}getConfig(){const t={activation:Qd(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}return t.className="Activation",t})()),Ui((()=>{class t extends Ah{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return qi(()=>function(t,e){return qi(()=>{if(2!==t.shape.length)throw new Bu(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Wc(Oc(t,1),[1,e,1])})}(t=bh(t),this.n))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}return t.className="RepeatVector",t})()),Ui((()=>{class t extends Ah{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,i=null;for(let o=0;o<r.length;++o){const t=r[o];if(this.isUnknown(t)){if(null!==i)throw new Bu("Can only specifiy one unknown dimension.");i=o}else s*=t}const a=Ac(t);if(null!==i){if(0===s||a%s!=0)throw new Bu(n);r[i]=a/s}else if(a!==s)throw new Bu(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return qi(()=>{this.invokeCallHook(t,e);const n=bh(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}return t.className="Reshape",t})()),Ui((()=>{class t extends Ah{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Fc(1,t.dims.length+1);if(!W(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new kh({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=yh(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Wr(bh(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}return t.className="Permute",t})()),Ui((()=>{class t extends Ah{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=bh(t);return xn(_a(n,this.maskValue),-1)}call(t,e){return qi(()=>{this.invokeCallHook(t,e);const n=bh(t),r=xn(_a(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}return t.className="Masking",t})()),Ui((()=>{class t extends Ah{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=null==t.inputLength?[e,null]:[e].concat(qu(t.inputLength))}this.inputDim=t.inputDim,ic(this.inputDim,"inputDim"),this.outputDim=t.outputDim,ic(this.outputDim,"outputDim"),this.embeddingsInitializer=ch(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ap(t.embeddingsRegularizer),this.activityRegularizer=ap(t.activityRegularizer),this.embeddingsConstraint=pc(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return qi(()=>this.maskZero?(t=bh(t),_a(t,qe(t))):null)}computeOutputShape(t){if(t=yh(t),null==this.inputLength)return[...t,this.outputDim];const e=qu(this.inputLength);if(e.length!==t.length-1)throw new Bu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],i=t[r+1];if(null!=s&&null!=i&&s!==i)throw new Bu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return qi(()=>{this.invokeCallHook(t,e);let n=bh(t);return"int32"!==n.dtype&&(n=_c(n,"int32")),Gc(this.embeddings.read(),n.as1D()).reshape(yh(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:uh(this.embeddingsInitializer),embeddingsRegularizer:sp(this.embeddingsRegularizer),activityRegularizer:sp(this.activityRegularizer),embeddingsConstraint:hc(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}return t.className="Embedding",t})());class yp extends Ah{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Pu}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],i=e[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new Bu("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[yh(t)]),(t=t).length<2)throw new Bu(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const s of t)null!=s&&null!==s[0]&&e.push(s[0]);if(e=ec(e),e.length>1)throw new Bu(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const e=null==t[s]?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);this.reshapeRequired=-1!==t.indexOf(null)||1!==ec(r).length}call(t,e){return qi(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=Dc(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Oc(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const i of t){const t=i.rank;if(null==t){const t=i.shape,r=t[0],s=t.slice(1).concat([r]);let a=i.reshape([r].concat(Ac(t.slice(1))));a=Wr(a,[1,0]),a=a.reshape(s),e.push(a),n=!0}else if(t>1){const r=Fc(1,t).concat([0]);e.push(Wr(i,r)),n=!0}else e.push(i)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=Wr(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(Fc(0,s-1));r=Wr(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=ec(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return qi(()=>{if(null==e)return null;if(!Array.isArray(e))throw new Bu("`mask` should be an Array");if(!Array.isArray(t))throw new Bu("`inputs` should be an Array");if(e.length!==t.length)throw new Bu(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:Ze(t,0)))[0];for(let t=1;t<e.length-1;++t)n=vs(n,e[t]);return n})}}function xp(t,e){for(;t<0;)t+=e;return t}function vp(t,e,n,r,s,i=.001){let a;if(2===t.rank)a=na(t,e,n,r,s,i);else if(3===t.rank)a=ra(t,e,n,r,s,i);else{if(4!==t.rank)throw new Pu(`batchNormalization is not implemented for array of rank ${t.rank} yet`);a=sa(t,e,n,r,s,i)}return a}function wp(t,e,n,r,s,i){return qi(()=>{let a;xc(s),wc(i),vc(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=cp(t,s);const o="same"===r?"same":"valid";return a="max"===i?Ra(t,e,n,o):Zi(t,e,n,o),"channelsFirst"===s&&(a=Wr(a,[0,3,1,2])),a})}function $p(t,e,n,r,s,i){return qi(()=>{let a;xc(s),wc(i),vc(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=hp(t,s);const o="same"===r?"same":"valid";return a="max"===i?Aa(t,e,n,o):Qi(t,e,n,o),"channelsFirst"===s&&(a=Wr(a,[0,4,1,2,3])),a})}Ui((()=>{class t extends yp{constructor(t){super(t)}mergeFunction(t){return qi(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ie(e,t[n]);return e})}}return t.className="Add",t})()),Ui((()=>{class t extends yp{constructor(t){super(t)}mergeFunction(t){return qi(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=on(e,t[n]);return e})}}return t.className="Multiply",t})()),Ui((()=>{class t extends yp{constructor(t){super(t)}mergeFunction(t){return qi(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ie(e,t[n]);return on(1/t.length,e)})}}return t.className="Average",t})()),Ui((()=>{class t extends yp{constructor(t){super(t)}mergeFunction(t){return qi(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ka(e,t[n]);return e})}}return t.className="Maximum",t})()),Ui((()=>{class t extends yp{constructor(t){super(t)}mergeFunction(t){return qi(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Ta(e,t[n]);return e})}}return t.className="Minimum",t})()),Ui((()=>{class t extends yp{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Bu("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let s=!1;for(const t of n)if(W(t,e)){s=!0;break}s||n.push(e)}if(n.length>1)throw new Bu("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return qi(()=>Bc(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Bu("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of e.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Bu("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Bu("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Bu(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return qi(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let i=0;i<t.length;++i)r.push(null==e[i]?He(t[i]).asType("bool"):e[i].rank<t[i].rank?Ze(e[i],-1):e[i]);const s=je(r,this.axis);return yn(s,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}return t.className="Concatenate",t})()),Ui((()=>{class t extends yp{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){M(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Pu("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new Bu(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Bu(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>xp(e,t[n].shape.length)):[xp(this.axes,n.shape.length),xp(this.axes,r.shape.length)],this.normalize&&(n=Gh(n,e[0]),r=Gh(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Pu("batchDot is not implemented for tensors of 4D or higher rank yet");if(M(t.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`),M(t.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Pu("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return qi(()=>{let n,a;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(a=2===t.shape.length&&2===e.shape.length?i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]):t.matMul(e,i[0]!==t.shape.length-1,i[1]===e.shape.length-1),n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[xp(this.axes,t.length),xp(this.axes,e.length)],n}computeOutputShape(t){M(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Pu("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}return t.className="Dot",t})()),Ui((()=>{class t extends Ah{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return qi(()=>{this.invokeCallHook(t,e);const n=bh(t);return Xc(()=>Uc(n.shape,0,this.stddev).add(n),()=>n,e.training||!1)})}}return t.className="GaussianNoise",t})()),Ui((()=>{class t extends Ah{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return qi(()=>{this.invokeCallHook(t,e);const n=bh(t);return this.rate>0&&this.rate<1?Xc(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Uc(n.shape,1,t))},()=>n,e.training||!1):n})}}return t.className="GaussianDropout",t})()),Ui((()=>{class t extends Ah{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||bh(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return qi(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Xc(()=>{const e=bh(t),r=-1.7580993408473766;let s=ss(Xa(n),this.rate);s=_c(s,"float32");const i=tc((1-this.rate)*(1+this.rate*tc(r,2)),-.5),a=-i*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(i).add(a)},()=>bh(t),e.training||!1)}return t})}}return t.className="AlphaDropout",t})()),Ui((()=>{class t extends Ah{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ch(t.betaInitializer||"zeros"),this.gammaInitializer=ch(t.gammaInitializer||"ones"),this.movingMeanInitializer=ch(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ch(t.movingVarianceInitializer||"ones"),this.betaConstraint=pc(t.betaConstraint),this.gammaConstraint=pc(t.gammaConstraint),this.betaRegularizer=ap(t.betaRegularizer),this.gammaRegularizer=ap(t.gammaRegularizer)}build(t){t=yh(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Bu(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new kh({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return qi(()=>{const n=null!=e.training&&e.training,r=bh(t),s=r.shape,i=s.length,a=Fc(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=Uu(1,i);l[o]=s[o];const u=a.slice();u.sort();const c=!W(u,Fc(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return vp(r,t,e,n,s,this.epsilon)}return vp(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(t,e,n,r,s=.001){return W(r.slice().sort(),Fc(0,t.rank-1))?function(t,e,n,r,s=.001){return qi(()=>{const i=In(t,r),a=i.mean,o=i.variance;return[vp(t,a,o,n,e,s),a,o]})}(t,e,n,r,s):function(t,e,n,r,s=.001){return qi(()=>{const i=In(t,r),a=i.mean,o=i.variance,l=[];for(const e of Fc(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=a.reshape(l),c=o.reshape(l),h=null==e?null:e.reshape(l),d=null==n?null:n.reshape(l);return[vp(t,u,c,d,h,s),a,o]})}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(t,e,n)=>{qi(()=>{const r=1-n,s=t.read(),i=s.sub(e).mul(r);t.write(s.sub(i))})};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:uh(this.betaInitializer),gammaInitializer:uh(this.gammaInitializer),movingMeanInitializer:uh(this.movingMeanInitializer),movingVarianceInitializer:uh(this.movingVarianceInitializer),betaRegularizer:sp(this.betaRegularizer),gammaRegularizer:sp(this.gammaRegularizer),betaConstraint:hc(this.betaConstraint),gammaConstraint:hc(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}return t.className="BatchNormalization",t})()),Ui((()=>{class t extends Ah{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=ch(t.betaInitializer||"zeros"),this.gammaInitializer=ch(t.gammaInitializer||"ones"),this.betaRegularizer=ap(t.betaRegularizer),this.gammaRegularizer=ap(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=yh(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==ec(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(e=>t[e]);this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(t,e){const n=bh(t),r=n.shape,s=r.length;return qi(()=>{let{mean:t,variance:e}=In(n,this.axis,!0);const i=Uu(1,s);for(const n of this.axis)i[n]=r[n];const a=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(i):t;let o=a(this.gamma.read()),l=a(this.beta.read());const u=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(u.push(r[n]),c.push(1)):(u.push(1),c.push(r[n]));return t=t.tile(u),e=e.tile(u),o=o.tile(c),l=l.tile(c),vp(n,t,e,l,o,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:uh(this.betaInitializer),gammaInitializer:uh(this.gammaInitializer),betaRegularizer:sp(this.betaRegularizer),gammaRegularizer:sp(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}return t.className="LayerNormalization",t})()),Ui((()=>{class t extends Ah{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Bu(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Bu(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Bu(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new kh({ndim:4})]}computeOutputShape(t){let e,n;return t=yh(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return qi(()=>function(t,e,n){return qi(()=>{if(4!==t.rank)throw new Bu(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==e&&(e=[[1,1],[1,1]]),2!==e.length||2!==e[0].length||2!==e[1].length)throw new Bu("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new Bu(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],e[0],e[1]]:[[0,0],e[0],e[1],[0,0]],Ps(t,r)})}(bh(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}return t.className="ZeroPadding2D",t})());class Cp extends Ah{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Bu(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(ic(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Bu(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}ic(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,vc(this.padding),this.inputSpec=[new kh({ndim:3})]}computeOutputShape(t){const e=lp((t=yh(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return qi(()=>{this.invokeCallHook(t,e),t=Oc(bh(t),2);const n=this.poolingFunction(bh(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return tn(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}Ui((()=>{class t extends Cp{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xc(s),vc(r),wp(t,e,n,r,s,"max")}}return t.className="MaxPooling1D",t})()),Ui((()=>{class t extends Cp{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xc(s),vc(r),wp(t,e,n,r,s,"avg")}}return t.className="AveragePooling1D",t})());class kp extends Ah{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Bu(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];ic(this.poolSize,"poolSize"),ic(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,xc(this.dataFormat),vc(this.padding),this.inputSpec=[new kh({ndim:4})]}computeOutputShape(t){t=yh(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=lp(e,this.poolSize[0],this.padding,this.strides[0]),n=lp(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return qi(()=>(this.invokeCallHook(t,e),this.poolingFunction(bh(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Ui((()=>{class t extends kp{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xc(s),vc(r),wp(t,e,n,r,s,"max")}}return t.className="MaxPooling2D",t})()),Ui((()=>{class t extends kp{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xc(s),vc(r),wp(t,e,n,r,s,"avg")}}return t.className="AveragePooling2D",t})());class Ip extends Ah{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Bu(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];ic(this.poolSize,"poolSize"),ic(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,xc(this.dataFormat),vc(this.padding),this.inputSpec=[new kh({ndim:5})]}computeOutputShape(t){t=yh(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=lp(e,this.poolSize[0],this.padding,this.strides[0]),n=lp(n,this.poolSize[1],this.padding,this.strides[1]),r=lp(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return qi(()=>(this.invokeCallHook(t,e),this.poolingFunction(bh(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Ui((()=>{class t extends Ip{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xc(s),vc(r),$p(t,e,n,r,s,"max")}}return t.className="MaxPooling3D",t})()),Ui((()=>{class t extends Ip{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return xc(s),vc(r),$p(t,e,n,r,s,"avg")}}return t.className="AveragePooling3D",t})());class Sp extends Ah{constructor(t){super(t),this.inputSpec=[new kh({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Pu}}Ui((()=>{class t extends Sp{constructor(t){super(t||{})}call(t,e){return qi(()=>{const e=bh(t);return Cn(e,1)})}}return t.className="GlobalAveragePooling1D",t})()),Ui((()=>{class t extends Sp{constructor(t){super(t||{})}call(t,e){return qi(()=>{const e=bh(t);return Ea(e,1)})}}return t.className="GlobalMaxPooling1D",t})());class Ep extends Ah{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,xc(this.dataFormat),this.inputSpec=[new kh({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Pu}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Rp(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Bu("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function Ap(t,e,n,r=!1,s,i,a=!1,o=!1){return qi(()=>{const l=e.shape.length;if(l<3)throw new Bu(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Fc(2,l));if(e=Wr(e,u),null!=i)throw new Pu("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=Ze(s,-1)),s=Wr(s,u)),r&&(e=fo(e,0),null!=s&&(s=fo(s,0)));const c=[];let h,d=n;const p=e.shape[0],f=nn(e);let g,m;null!=s&&(g=nn(s));for(let e=0;e<p;++e){const n=f[e],r=qi(()=>t(n,d));if(null==s)h=r[0],d=r[1];else{const t=qi(()=>{const t=g[e],n=He(t).sub(t);return{output:r[0].mul(t).add(d[0].mul(n)),newStates:d.map((e,s)=>r[1][s].mul(t).add(e.mul(n)))}});h=t.output,d=t.newStates}o&&c.push(h)}return o&&(m=en(c,1)),[h,m,d]})}Ui((()=>{class t extends Ep{call(t,e){return qi(()=>{const e=bh(t);return Cn(e,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return t.className="GlobalAveragePooling2D",t})()),Ui((()=>{class t extends Ep{call(t,e){return qi(()=>{const e=bh(t);return Ea(e,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}return t.className="GlobalMaxPooling2D",t})());let Np=(()=>{class t extends Ah{constructor(t){let e;if(super(t),null==t.cell)throw new Bu("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Op({cells:t.cell}):t.cell,null==e.stateSize)throw new Bu("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new kh({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Fc(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null):this.states_}setStates(t){this.states_=t}computeOutputShape(t){gh(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return qi(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Pu("Constants support is not implemented in RNN yet.");gh(t)&&(t=t[0]),t=t,this.inputSpec[0]=new kh({shape:[this.stateful?t[0]:null,null,t[t.length-1]]});const e=[t[0]].concat(t.slice(2));let n;if(this.cell.build(e),n=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!W(this.stateSpec.map(t=>t.shape[t.shape.length-1]),n))throw new Bu(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=n.map(t=>new kh({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){qi(()=>{if(!this.stateful)throw new Lu("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Bu("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>Ue([n,t])):[Ue([n,this.cell.stateSize])];else if(null==t)ji(this.states_),null!=this.keptStates&&(ji(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>Ue([n,t])):this.states_[0]=Ue([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Bu(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):ji(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!W(r.shape,i))throw new Bu(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>Ki(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=Rp(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new kh({shape:t.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(e.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Ih){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return qi(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=bh(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new Bu(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=Ap((t,e)=>{const n=this.cell.call([t].concat(e),a);return[n[0],n.slice(1)]},t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h})}getInitialState(t){return qi(()=>{let e=Ue(t.shape);return e=Sn(e,[1,2]),e=Oc(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?Wc(e,[1,t]):e):this.cell.stateSize>1?[Wc(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const e=this.cell.getConfig();t.cell={className:this.cell.getClassName(),config:e};const n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,e,n={}){const r=Vh(e.cell,n);return new t(Object.assign(e,{cell:r}))}}return t.className="RNN",t})();Ui(Np);class Tp extends Ah{}let Dp=(()=>{class t extends Tp{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ic(this.units,"units"),this.activation=ep(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ch(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ch(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ch(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ap(t.kernelRegularizer),this.recurrentRegularizer=ap(t.recurrentRegularizer),this.biasRegularizer=ap(t.biasRegularizer),this.kernelConstraint=pc(t.kernelConstraint),this.recurrentConstraint=pc(t.recurrentConstraint),this.biasConstraint=pc(t.biasConstraint),this.dropout=Tc([1,Dc([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Tc([1,Dc([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=yh(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(t,e){return qi(()=>{if(2!==(t=t).length)throw new Bu(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mp(()=>He(t),this.dropout,r)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mp(()=>He(n),this.recurrentDropout,r));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=Vc(null!=i?on(t,i):t,this.kernel.read()),null!=this.bias&&(s=jc(s,this.bias.read())),null!=a&&(n=on(n,a));let o=Ie(s,Vc(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const t={units:this.units,activation:Qd(this.activation),useBias:this.useBias,kernelInitializer:uh(this.kernelInitializer),recurrentInitializer:uh(this.recurrentInitializer),biasInitializer:uh(this.biasInitializer),kernelRegularizer:sp(this.kernelRegularizer),recurrentRegularizer:sp(this.recurrentRegularizer),biasRegularizer:sp(this.biasRegularizer),activityRegularizer:sp(this.activityRegularizer),kernelConstraint:hc(this.kernelConstraint),recurrentConstraint:hc(this.recurrentConstraint),biasConstraint:hc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return Object.assign(t,e),t}}return t.className="SimpleRNNCell",t})();Ui(Dp),Ui((()=>{class t extends Np{constructor(t){t.cell=new Dp(t),super(t)}call(t,e){return qi(()=>(null!=this.cell.dropoutMask&&(ji(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ji(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(t,{mask:null==e?null:e.mask,training:null==e?null:e.training,initialState:null==e?null:e.initialState})))}get units(){return this.cell.units}get activation(){return this.cell.activation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}getConfig(){const t={units:this.units,activation:Qd(this.activation),useBias:this.useBias,kernelInitializer:uh(this.kernelInitializer),recurrentInitializer:uh(this.recurrentInitializer),biasInitializer:uh(this.biasInitializer),kernelRegularizer:sp(this.kernelRegularizer),recurrentRegularizer:sp(this.recurrentRegularizer),biasRegularizer:sp(this.biasRegularizer),activityRegularizer:sp(this.activityRegularizer),kernelConstraint:hc(this.kernelConstraint),recurrentConstraint:hc(this.recurrentConstraint),biasConstraint:hc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return new t(e)}}return t.className="SimpleRNN",t})());let Fp=(()=>{class t extends Tp{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Bu("GRUCell does not support reset_after parameter set to true.");this.units=t.units,ic(this.units,"units"),this.activation=ep(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ep(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ch(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ch(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ch(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ap(t.kernelRegularizer),this.recurrentRegularizer=ap(t.recurrentRegularizer),this.biasRegularizer=ap(t.biasRegularizer),this.kernelConstraint=pc(t.kernelConstraint),this.recurrentConstraint=pc(t.recurrentConstraint),this.biasConstraint=pc(t.biasConstraint),this.dropout=Tc([1,Dc([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Tc([1,Dc([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=yh(t),this.kernel=this.addWeight("kernel",[t[t.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(t,e){return qi(()=>{if(2!==(t=t).length)throw new Bu(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mp(()=>He(t),this.dropout,n,3)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mp(()=>He(r),this.recurrentDropout,n,3));const s=this.recurrentDropoutMask;let i,a,o;0<this.dropout&&this.dropout<1&&(t=on(t,this.dropoutMask[0]));let l=Vc(t,this.kernel.read());this.useBias&&(l=jc(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=on(r,s[0]));const u=this.recurrentKernel.read(),[c,h]=Tr(u,[2*this.units,this.units],u.rank-1),d=Vc(r,c),[p,f,g]=Tr(l,3,l.rank-1),[m,b]=Tr(d,2,d.rank-1);i=this.recurrentActivation.apply(Ie(p,m)),a=this.recurrentActivation.apply(Ie(f,b));const y=Vc(on(a,r),h);o=this.activation.apply(Ie(g,y));const x=Ie(on(i,r),on(Ie(1,jn(i)),o));return[x,x]})}getConfig(){const t={units:this.units,activation:Qd(this.activation),recurrentActivation:Qd(this.recurrentActivation),useBias:this.useBias,kernelInitializer:uh(this.kernelInitializer),recurrentInitializer:uh(this.recurrentInitializer),biasInitializer:uh(this.biasInitializer),kernelRegularizer:sp(this.kernelRegularizer),recurrentRegularizer:sp(this.recurrentRegularizer),biasRegularizer:sp(this.biasRegularizer),activityRegularizer:sp(this.activityRegularizer),kernelConstraint:hc(this.kernelConstraint),recurrentConstraint:hc(this.recurrentConstraint),biasConstraint:hc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return Object.assign(t,e),t}}return t.className="GRUCell",t})();Ui(Fp),Ui((()=>{class t extends Np{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Fp(t),super(t)}call(t,e){return qi(()=>(null!=this.cell.dropoutMask&&(ji(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ji(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(t,{mask:null==e?null:e.mask,training:null==e?null:e.training,initialState:null==e?null:e.initialState})))}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:Qd(this.activation),recurrentActivation:Qd(this.recurrentActivation),useBias:this.useBias,kernelInitializer:uh(this.kernelInitializer),recurrentInitializer:uh(this.recurrentInitializer),biasInitializer:uh(this.biasInitializer),kernelRegularizer:sp(this.kernelRegularizer),recurrentRegularizer:sp(this.recurrentRegularizer),biasRegularizer:sp(this.biasRegularizer),activityRegularizer:sp(this.activityRegularizer),kernelConstraint:hc(this.kernelConstraint),recurrentConstraint:hc(this.recurrentConstraint),biasConstraint:hc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}return t.className="GRU",t})());let _p=(()=>{class t extends Tp{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ic(this.units,"units"),this.activation=ep(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ep(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=ch(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ch(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ch(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ap(t.kernelRegularizer),this.recurrentRegularizer=ap(t.recurrentRegularizer),this.biasRegularizer=ap(t.biasRegularizer),this.kernelConstraint=pc(t.kernelConstraint),this.recurrentConstraint=pc(t.recurrentConstraint),this.biasConstraint=pc(t.biasConstraint),this.dropout=Tc([1,Dc([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Tc([1,Dc([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;let n;if(t=yh(t),this.kernel=this.addWeight("kernel",[t[t.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,r=this.units;n=new((e=class extends Zc{apply(e,n){const s=t.apply([r]),i=(new Qc).apply([r]),a=t.apply([2*r]);return Pc(Pc(s,i),a)}}).className="CustomInit",e)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return qi(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new Bu(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mp(()=>He(t),this.dropout,n,4)),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mp(()=>He(r),this.recurrentDropout,n,4));const i=this.recurrentDropoutMask;let a,o,l,u;0<this.dropout&&this.dropout<1&&(t=on(t,this.dropoutMask[0]));let c=Vc(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=on(r,i[0])),c=Ie(c,Vc(r,this.recurrentKernel.read())),this.useBias&&(c=jc(c,this.bias.read()));const[h,d,p,f]=Tr(c,4,c.rank-1);a=this.recurrentActivation.apply(h),o=this.recurrentActivation.apply(d),l=Ie(on(o,s),on(a,this.activation.apply(p))),u=this.recurrentActivation.apply(f);const g=on(u,this.activation.apply(l));return[g,g,l]})}getConfig(){const t={units:this.units,activation:Qd(this.activation),recurrentActivation:Qd(this.recurrentActivation),useBias:this.useBias,kernelInitializer:uh(this.kernelInitializer),recurrentInitializer:uh(this.recurrentInitializer),biasInitializer:uh(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:sp(this.kernelRegularizer),recurrentRegularizer:sp(this.recurrentRegularizer),biasRegularizer:sp(this.biasRegularizer),activityRegularizer:sp(this.activityRegularizer),kernelConstraint:hc(this.kernelConstraint),recurrentConstraint:hc(this.recurrentConstraint),biasConstraint:hc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return Object.assign(t,e),t}}return t.className="LSTMCell",t})();Ui(_p),Ui((()=>{class t extends Np{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new _p(t),super(t)}call(t,e){return qi(()=>(null!=this.cell.dropoutMask&&(ji(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ji(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(t,{mask:null==e?null:e.mask,training:null==e?null:e.training,initialState:null==e?null:e.initialState})))}get units(){return this.cell.units}get activation(){return this.cell.activation}get recurrentActivation(){return this.cell.recurrentActivation}get useBias(){return this.cell.useBias}get kernelInitializer(){return this.cell.kernelInitializer}get recurrentInitializer(){return this.cell.recurrentInitializer}get biasInitializer(){return this.cell.biasInitializer}get unitForgetBias(){return this.cell.unitForgetBias}get kernelRegularizer(){return this.cell.kernelRegularizer}get recurrentRegularizer(){return this.cell.recurrentRegularizer}get biasRegularizer(){return this.cell.biasRegularizer}get kernelConstraint(){return this.cell.kernelConstraint}get recurrentConstraint(){return this.cell.recurrentConstraint}get biasConstraint(){return this.cell.biasConstraint}get dropout(){return this.cell.dropout}get recurrentDropout(){return this.cell.recurrentDropout}get implementation(){return this.cell.implementation}getConfig(){const t={units:this.units,activation:Qd(this.activation),recurrentActivation:Qd(this.recurrentActivation),useBias:this.useBias,kernelInitializer:uh(this.kernelInitializer),recurrentInitializer:uh(this.recurrentInitializer),biasInitializer:uh(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:sp(this.kernelRegularizer),recurrentRegularizer:sp(this.recurrentRegularizer),biasRegularizer:sp(this.biasRegularizer),activityRegularizer:sp(this.activityRegularizer),kernelConstraint:hc(this.kernelConstraint),recurrentConstraint:hc(this.recurrentConstraint),biasConstraint:hc(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation},e=super.getConfig();return delete e.cell,Object.assign(t,e),t}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}return t.className="LSTM",t})());let Op=(()=>{class t extends Tp{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return qi(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[t[0]].concat(n):[i[0]].concat(n),i=o.call(i,e),s.push(i.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[i[0]].concat(n)})}build(t){let e;gh(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{Cc(`RNNCell_${r}`,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=[];for(const r of this.cells)t.push({className:r.getClassName(),config:r.getConfig()});const e={cells:t},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(t,e,n={}){const r=[];for(const s of e.cells)r.push(Vh(s,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return $h(t)}setWeights(t){const e=[];for(const n of this.cells){const r=t.splice(n.weights.length);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}Ch(e)}}return t.className="StackedRNNCells",t})();function Mp(t,e,n=null,r=1){function s(){return Kc(t(),e)}if(r>1){const e=[];for(let i=0;i<r;i++)e.push(Xc(s,t,n));return e.map(t=>Ki(t.clone()))}return Ki(Xc(s,t,n).clone())}Ui(Op);class Lp extends Ah{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Vh(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}var zp;function Bp(t,e,n,r){const s=X(r,P(n));for(let i=0;i<s.length;++i){const n=i*e;let r=t[n];for(let s=0;s<e;++s){const e=t[n+s];e>r&&(r=e)}s[i]=r}return s}function Pp(t,e,n,r,s){const i=e.length,a=P(e),o=st(e),l=st(s),u=X(n,P(s));for(let c=0;c<a;++c){const e=ft(c,i,o),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];u[pt(n,i,l)]=t[c]}return u}function Wp(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&M("complex64"!==t.dtype,()=>`${e} does not support complex64 tensors in the CPU backend.`)})}function Up(t,e,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Xe(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let v=0;v<s.batchSize;++v){const e=v*b,n=v*r[0];for(let g=0;g<s.inChannels;++g)for(let b=0;b<s.outHeight;++b){const v=b*a-d,w=Math.max(0,v),$=Math.min(s.inHeight,c+v),C=e+b*y;for(let e=0;e<s.outWidth;++e){const a=e*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let b=f,y=0,v=0;for(let e=w;e<$;e+=l){const s=n+e*r[1];for(let e=c;e<d;e+=u){const n=t[s+e*r[2]+g];"max"===i&&n>b?b=n:"avg"===i&&(y+=n,v++)}if(isNaN(b))break}m[C+e*x+g]="avg"===i?y/v:b}}}return g}function Vp(t,e,n,r,s=!1,i=!1){const a=Xe(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=Xe(e,n,t);for(let m=0;m<r.batchSize;++m)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*o-p;let b=n;for(;b<0;)b+=u;const y=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let e=b;e<y;e+=u){const a=e-n;for(let n=p;n<x;n+=c){const o=n-h,l=g.get(m,e,n,t);l>v&&(v=l,w=s?i?((m*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:a*d+o)}}a.set(w,m,e,o,t)}}return a}Ui((()=>{class t extends Lp{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=yh(t)).length<3)throw new Bu(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=yh(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e);return[n[0],t[1]].concat(n.slice(1))}call(t,e){return qi(()=>Ap((t,n)=>[bh(this.layer.call(t,e)),[]],t=bh(t),[],!1,null,null,!1,!0)[1])}}return t.className="TimeDistributed",t})()),Ui((()=>{class t extends Lp{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Vh(n),e.goBackwards=!0!==e.goBackwards;const r={};if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Vh(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,function(t){rc(bc,"BidirectionalMergeMode",t)}(this.mergeMode),t.weights)throw new Pu("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=Math.floor(t.length/2);this.forwardLayer.setWeights(t.slice(0,e)),this.backwardLayer.setWeights(t.slice(e))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState&&(r=s.slice(1)),e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):Hu(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=Rp(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const i=[],a=[];if(null!=n){const t=n.length;if(t%2>0)throw new Bu("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);const r=n.map(t=>new kh({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),a.push(...r)}if(null!=r)throw new Pu("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof Ih;for(const l of i)if(l instanceof Ih!==o)throw new Bu("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return qi(()=>{const n=e.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:i})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=fo(s,1)),"concat"===this.mergeMode?a=Bc([r,s]):"sum"===this.mergeMode?a=Ie(r,s):"ave"===this.mergeMode?a=on(.5,Ie(r,s)):"mul"===this.mergeMode?a=on(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Cc(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Cc(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Vh(e.layer);if(delete e.layer,null!=e.numConstants)throw new Pu("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}return t.className="Bidirectional",t})()),function(t){let e;var n;(n=e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(zp||(zp={})),Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Gp=Cl,Hp=Au,qp=Nu,jp=Tu,Kp=ys;function Xp(t,e,n,r){if("linear"===n)return t.linear(e);if("relu"===n)return t.relu(e);if("elu"===n)return t.elu(e);if("relu6"===n)return t.relu6(e);if("prelu"===n)return t.prelu(e,r);throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}class Yp extends Fu{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Du(this,Gi())}write(t,e,n){this.firstUse&&(this.firstUse=!1,v().get("IS_NODE")&&mu("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n}),r}move(t,e,n,r){this.data.set(t,{values:e,dtype:r})}numDataIds(){return this.data.numDataIds()}read(t){var e=this;return b(function*(){return e.readSync(t)})()}readSync(t){const{dtype:e,complexTensors:n}=this.data.get(t);return"complex64"===e?yu(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>dt(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Xe(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Gi().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensors:e}=this.data.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}}time(t){return b(function*(){const e=ct();return t(),{kernelMs:ct()-e}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}complex(t,e){const n=this.makeOutput(null,t.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:Gi().keep(t.clone()),imag:Gi().keep(e.clone())},n}real(t){return this.data.get(t.dataId).complexTensors.real.clone()}imag(t){return this.data.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(Wp(t,"slice"),qs(t.shape,e,n)){const r=js(e,t.strides),s=P(n);return Te(this.readSync(t.dataId).subarray(r,r+s),n,t.dtype)}const r=Xe(n,t.dtype),s=this.bufferSync(t);for(let i=0;i<r.size;++i){const t=r.indexToLoc(i).map((t,n)=>t+e[n]);r.values[i]=s.get(...t)}return r.toTensor()}stridedSlice(t,e,n,r){Wp(t,"stridedSlice");const s=Us(e,n,r);if(s.some(t=>0===t))return Te([],s);const i=Xe(s,t.dtype),a=this.bufferSync(t);for(let o=0;o<i.size;o++){const t=i.indexToLoc(o),n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*r[s]+e[s];i.set(a.get(...n),...t)}return i.toTensor()}diag(t){const e=this.readSync(t.dataId),n=Xe([t.size,t.size],t.dtype),r=n.values;for(let s=0;s<e.length;s++)r[s*t.size+s]=e[s];return n.toTensor()}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let l=0;l<t.rank;l++)l!==e&&(r[s++]=t.shape[l]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let l=0;l<o.length;l++)i[e]=l,o[l]=this.slice(t,i,a).reshape(r);return o}reverse(t,e){Wp(t,"reverse");const n=Xe(t.shape,t.dtype),r=this.bufferSync(t);for(let s=0;s<n.size;s++){const i=n.indexToLoc(s),a=i.slice();e.forEach(e=>a[e]=t.shape[e]-1-a[e]),n.set(r.get(...a),...i)}return n.toTensor()}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>Ne(t)),r=t.map(t=>Ae(t));return Re(this.concat(n,e),this.concat(r,e))}const n=t.map(t=>{const n=P(t.shape.slice(e));return t.as2D(-1,n)}),r=Ee(n.map(t=>t.shape),1),s=Xe(r,t[0].dtype).values;if(1===n[0].shape[0]){let t=0;n.forEach(e=>{s.set(this.readSync(e.dataId),t),t+=e.size})}else{let t=0;n.forEach(e=>{const n=this.readSync(e.dataId);let i=0;for(let a=0;a<e.shape[0];++a){const o=a*r[1]+t;for(let t=0;t<e.shape[1];++t)s[o+t]=n[i++]}t+=e.shape[1]})}const i=Ee(t.map(t=>t.shape),e);return Te(s,i,t[0].dtype)}neg(t){return Wp(t,"neg"),this.multiply(Fe(-1),t)}add(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t+n,imag:e+r})):this.broadcastedBinaryOp(t,e,Ft(t.dtype,e.dtype),(t,e)=>t+e)}addN(t){Wp(t,"addN");const e=t.map(t=>this.readSync(t.dataId)),n=Xe(t[0].shape,t[0].dtype),r=n.values;for(let s=0;s<t.length;s++){const t=e[s];for(let e=0;e<r.length;e++)r[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=j([e],t.shape),r=Ea(t,n),s=dn(r.shape,n),i=this.subtract(t,r.reshape(s)),a=this.exp(i),o=this.sum(a,n).reshape(s);return an(a,o)}subtract(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t-n,imag:e-r})):this.broadcastedBinaryOp(t,e,Ft(t.dtype,e.dtype),(t,e)=>t-e)}pow(t,e){return Wp([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.pow(t,e))}batchMatMul(t,e,n,r){Wp([t,e],"matMul");const s=n?t.shape[1]:t.shape[2],i=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],o=t.shape[0],l=this.readSync(t.dataId),u=this.readSync(e.dataId),[c,h,d]=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],[p,f,g]=r?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],m=i*a,b=Xe([o,i,a],t.dtype),y=b.values,x=this.blockSize;for(let v=0;v<o;v++)for(let t=0;t<i;t+=x)for(let e=0;e<a;e+=x)for(let n=0;n<s;n+=x){const r=Math.min(t+x,i),o=Math.min(e+x,a),b=Math.min(n+x,s);for(let s=t;s<r;s++)for(let t=e;t<o;t++){let e=0;for(let r=n;r<b;r++)e+=l[v*c+s*h+r*d]*u[r*p+t*f+v*g];y[v*m+(s*a+t)]+=e}}return b.toTensor()}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:a}){let o=this.batchMatMul(t,e,n,r);return s&&(o=this.add(o,s)),i&&(o=Xp(this,o,i,a)),o}multiply(t,e){return"complex64"===t.dtype||"complex64"===e.dtype?this.broadcastedBinaryComplexOp(t.cast("complex64"),e.cast("complex64"),(t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})):this.broadcastedBinaryOp(t,e,Ft(t.dtype,e.dtype),(t,e)=>t*e)}floorDiv(t,e){return Wp([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",(t,e)=>Math.floor(t/e))}sum(t,e){Wp(t,"sum"),pn("sum",e,t.rank);const[n,r]=hn(t.shape,e),s=Ue(n,Ft(t.dtype,"int32")),i=P(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let l=0;l<a.length;++l){const t=l*i;let e=0;for(let n=0;n<i;++n)e+=o[t+n];a[l]=e}return s}prod(t,e){Wp(t,"sum");const[n,r]=hn(t.shape,e),s=Ue(n,Ft(t.dtype,"int32")),i=P(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let l=0;l<a.length;++l){const t=l*i;let e=1;for(let n=0;n<i;++n)e*=o[t+n];a[l]=e}return s}unsortedSegmentSum(t,e,n){Wp(t,"unsortedSegmentSum");const r=[],s=t.rank-e.rank;for(let i=0;i<s;++i)e=e.expandDims(i+1);for(let i=0;i<n;++i){const n=Fe(i,"int32"),s=wa(n,e).asType("float32").mul(t).sum(0);r.push(s)}return en(r)}argMin(t,e){Wp(t,"argMin");const n=[e];pn("argMin",n,t.rank);const[r,s]=hn(t.shape,n),i=Ue(r,"int32"),a=P(s),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let u=0;u<o.length;++u){const t=u*a;let e=l[t],n=0;for(let r=0;r<a;++r){const s=l[t+r];s<e&&(e=s,n=r)}o[u]=n}return i}argMax(t,e){Wp(t,"argMax");const n=[e];pn("argMax",n,t.rank);const[r,s]=hn(t.shape,n),i=Ue(r,"int32"),a=P(s),o=this.readSync(i.dataId),l=this.readSync(t.dataId);for(let u=0;u<o.length;++u){const t=u*a;let e=l[t],n=0;for(let r=0;r<a;++r){const s=l[t+r];s>e&&(e=s,n=r)}o[u]=n}return i}cumsum(t,e,n,r){if(Wp(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=Ft(t.dtype,"int32"),i=Ue(t.shape,s),a=this.readSync(i.dataId),o=this.readSync(t.dataId),l=t.shape[t.rank-1],u=r?(t,e)=>t+l-e-1:(t,e)=>t+e;for(let c=0;c<o.length;c+=l)for(let t=0;t<l;t++){const e=u(c,t);if(0===t)a[e]=n?0:o[e];else{const r=u(c,t-1);a[e]=n?o[r]+a[r]:o[e]+a[r]}}return i}equal(t,e){return Wp([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t===e?1:0)}notEqual(t,e){return Wp([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t!==e?1:0)}less(t,e){return Wp([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<e?1:0)}lessEqual(t,e){return Wp([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t<=e?1:0)}greater(t,e){return Wp([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>e?1:0)}greaterEqual(t,e){return Wp([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t>=e?1:0)}logicalNot(t){Wp(t,"logicalNot");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n[r]=e[r]?0:1;return this.makeOutput(n,t.shape,"bool")}logicalAnd(t,e){return Wp([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t&&e)}logicalOr(t,e){return Wp([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",(t,e)=>t||e)}select(t,e,n){Wp([t,e,n],"select");const r=this.readSync(t.dataId),s=this.readSync(e.dataId),i=this.readSync(n.dataId),a=Ue(e.shape,Ft(e.dtype,n.dtype)),o=this.readSync(a.dataId);let l=0;const u=0===t.rank||t.rank>1||1===e.rank?1:P(e.shape.slice(1));for(let c=0;c<r.length;c++)for(let t=0;t<u;t++)o[l++]=1===r[c]?s[c]:i[c];return a}where(t){Wp([t],"where");const e=this.readSync(t.dataId);return Kp(t.shape,e)}topk(t,e,n){Wp(t,"topk");const r=this.readSync(t.dataId);return jp(r,t.shape,t.dtype,e,n)}min(t,e){Wp(t,"min"),pn("min",e,t.rank);const[n,r]=hn(t.shape,e),s=Ue(n,t.dtype),i=P(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let l=0;l<a.length;++l){const t=l*i;let e=o[t];for(let n=0;n<i;++n){const r=o[t+n];r<e&&(e=r)}a[l]=e}return s}minimum(t,e){return Wp([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.min(t,e))}mod(t,e){return Wp([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})}maximum(t,e){return Wp([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.max(t,e))}all(t,e){Wp(t,"all"),pn("all",e,t.rank);const[n,r]=hn(t.shape,e),s=Ue(n,t.dtype),i=P(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let l=0;l<a.length;++l){const t=l*i;let e=o[t];for(let n=0;n<i;++n){const r=o[t+n];e=e&&r}a[l]=e}return s}any(t,e){Wp(t,"any"),pn("any",e,t.rank);const[n,r]=hn(t.shape,e),s=Ue(n,t.dtype),i=P(r),a=this.readSync(s.dataId),o=this.readSync(t.dataId);for(let l=0;l<a.length;++l){const t=l*i;let e=o[t];for(let n=0;n<i;++n){const r=o[t+n];e=e||r}a[l]=e}return s}squaredDifference(t,e){return Wp([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>{const n=t-e;return n*n})}ceil(t){Wp(t,"ceil");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.ceil(e[r]);return this.makeOutput(n,t.shape,"float32")}floor(t){Wp(t,"floor");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.floor(e[r]);return this.makeOutput(n,t.shape,"float32")}sign(t){Wp(t,"x");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=e[r]<0?-1:e[r]>0?1:0;return this.makeOutput(n,t.shape,"float32")}isNaN(t){Wp(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)Number.isNaN(e[r])&&(n[r]=1);return this.makeOutput(n,t.shape,"bool")}isInf(t){Wp(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)Math.abs(e[r])===1/0&&(n[r]=1);return this.makeOutput(n,t.shape,"bool")}isFinite(t){Wp(t,"x");const e=this.readSync(t.dataId),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)Number.isFinite(e[r])&&(n[r]=1);return this.makeOutput(n,t.shape,"bool")}round(t){Wp(t,"round");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r){const t=Math.floor(e[r]);n[r]=e[r]-t<.5?Math.floor(e[r]):e[r]-t>.5?Math.ceil(e[r]):t%2==0?t:t+1}return this.makeOutput(n,t.shape,"float32")}exp(t){Wp(t,"exp");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.exp(e[r]);return this.makeOutput(n,t.shape,"float32")}expm1(t){Wp(t,"expm1");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.expm1(e[r]);return this.makeOutput(n,t.shape,"float32")}log(t){Wp(t,"log");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.log(e[r]);return this.makeOutput(n,t.shape,"float32")}log1p(t){Wp(t,"log1p");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.log1p(e[r]);return this.makeOutput(n,t.shape,"float32")}sqrt(t){Wp(t,"sqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=Math.sqrt(e[r]);return this.makeOutput(n,t.shape,"float32")}rsqrt(t){Wp(t,"rsqrt");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=1/Math.sqrt(e[r]);return this.makeOutput(n,t.shape,"float32")}reciprocal(t){Wp(t,"reciprocal");const e=this.readSync(t.dataId),n=new Float32Array(e.length);for(let r=0;r<e.length;++r)n[r]=1/e[r];return this.makeOutput(n,t.shape,"float32")}linear(t){return t}relu(t){Wp(t,"relu");const e=Ue(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let s=0;s<r.length;++s)n[s]=Math.max(0,r[s]);return e}relu6(t){Wp(t,"relu");const e=Ue(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let s=0;s<r.length;++s)n[s]=Math.min(Math.max(0,r[s]),6);return e}prelu(t,e){return Wp([t,e],"prelu"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>t<0?e*t:t)}elu(t){Wp(t,"elu");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r){const t=n[r];e[r]=t>=0?t:Math.exp(t)-1}return this.makeOutput(e,t.shape,"float32")}eluDer(t,e){Wp([t,e],"eluDer");const n=new Float32Array(e.size),r=this.readSync(e.dataId),s=this.readSync(t.dataId);for(let i=0;i<r.length;++i){const t=r[i];n[i]=t>=1?s[i]:s[i]*(t+1)}return this.makeOutput(n,e.shape,"float32")}selu(t){Wp(t,"selu");const e=Ts,n=Ds,r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let i=0;i<s.length;++i){const t=s[i];r[i]=t>=0?n*t:e*(Math.exp(t)-1)}return this.makeOutput(r,t.shape,"float32")}clip(t,e,n){Wp(t,"clip");const r=new Float32Array(t.size),s=this.readSync(t.dataId);for(let i=0;i<s.length;++i){const t=s[i];r[i]=t>n?n:t<e?e:t}return this.makeOutput(r,t.shape,"float32")}abs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.abs(n[r]);return this.makeOutput(e,t.shape,"float32")}complexAbs(t){const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<t.size;++r)e[r]=Math.hypot(n[2*r],n[2*r+1]);return this.makeOutput(e,t.shape,"float32")}int(t){Wp(t,"int");const e=new Int32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=n[r];return this.makeOutput(e,t.shape,"int32")}sigmoid(t){Wp(t,"sigmoid");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=1/(1+Math.exp(-n[r]));return this.makeOutput(e,t.shape,"float32")}softplus(t){Wp(t,"softplus");const e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let s=0;s<r.length;++s){const t=r[s]>-e,i=r[s]<e,a=Math.exp(r[s]);let o;o=i?a:t?r[s]:Math.log(1+a),n[s]=o}return this.makeOutput(n,t.shape,"float32")}sin(t){Wp(t,"sin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.sin(n[r]);return this.makeOutput(e,t.shape,"float32")}cos(t){Wp(t,"cos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.cos(n[r]);return this.makeOutput(e,t.shape,"float32")}tan(t){Wp(t,"tan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.tan(n[r]);return this.makeOutput(e,t.shape,"float32")}asin(t){Wp(t,"asin");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.asin(n[r]);return this.makeOutput(e,t.shape,"float32")}acos(t){Wp(t,"acos");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.acos(n[r]);return this.makeOutput(e,t.shape,"float32")}atan(t){Wp(t,"atan");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.atan(n[r]);return this.makeOutput(e,t.shape,"float32")}atan2(t,e){return Wp([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,(t,e)=>Math.atan2(t,e))}sinh(t){Wp(t,"sinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.sinh(n[r]);return this.makeOutput(e,t.shape,"float32")}cosh(t){Wp(t,"cosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.cosh(n[r]);return this.makeOutput(e,t.shape,"float32")}tanh(t){Wp(t,"tanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=V(n[r]);return this.makeOutput(e,t.shape,"float32")}asinh(t){Wp(t,"asinh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.asinh(n[r]);return this.makeOutput(e,t.shape,"float32")}acosh(t){Wp(t,"acosh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.acosh(n[r]);return this.makeOutput(e,t.shape,"float32")}atanh(t){Wp(t,"atanh");const e=new Float32Array(t.size),n=this.readSync(t.dataId);for(let r=0;r<n.length;++r)e[r]=Math.atanh(n[r]);return this.makeOutput(e,t.shape,"float32")}erf(t){Wp(t,"erf");const e=new Float32Array(t.size),n=this.readSync(t.dataId),r=cu,s=hu,i=du,a=pu,o=fu,l=gu;for(let u=0;u<n.length;++u){const t=Math.sign(n[u]),c=Math.abs(n[u]),h=1/(1+r*c);e[u]=t*(1-((((l*h+o)*h+a)*h+i)*h+s)*h*Math.exp(-c*c))}return this.makeOutput(e,t.shape,"float32")}step(t,e=0){Wp(t,"step");const n=new Float32Array(t.size),r=this.readSync(t.dataId);for(let s=0;s<r.length;++s){const t=r[s];n[s]=isNaN(t)?NaN:t>0?1:e}return this.makeOutput(n,t.shape,"float32")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){let a=this.conv2d(t,e,n);return r&&(a=this.add(a,r)),s&&(a=Xp(this,a,s,i)),a}conv2d(t,e,n){Wp([t,e],"conv2d");const r=n.filterHeight,s=n.filterWidth,i=n.dilationHeight,a=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u="channelsLast"===n.dataFormat,c=Xe(n.outShape,t.dtype),h=t.strides[0],d=u?t.strides[1]:t.strides[2],p=u?t.strides[2]:1,f=u?1:t.strides[1],g=c.strides[0],m=u?c.strides[1]:c.strides[2],b=u?c.strides[2]:1,y=u?1:c.strides[1],x=this.readSync(t.dataId),v=this.readSync(e.dataId),w=c.values;for(let $=0;$<n.batchSize;++$){const t=$*h,u=$*g;for(let c=0;c<n.outHeight;++c){const h=u+c*m,g=c*n.strideHeight-l;for(let l=0;l<r;l++){const r=g+l*i;if(r<0||r>=n.inHeight)continue;const u=l*e.strides[0],c=t+r*d;for(let t=0;t<n.outWidth;++t){const r=h+t*b,i=t*n.strideWidth-o;for(let t=0;t<s;t++){const s=i+t*a;if(s<0||s>=n.inWidth)continue;const o=c+s*p;let l=u+t*e.strides[1];for(let t=0;t<n.inChannels;++t){const e=x[o+t*f];for(let t=0;t<n.outChannels;++t)w[r+t*y]+=e*v[l+t];l+=n.outChannels}}}}}}return c.toTensor()}conv3d(t,e,n){const r=n.filterDepth,s=n.filterHeight,i=n.filterWidth,a=n.dilationDepth,o=n.dilationHeight,l=n.dilationWidth,u=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,d=Xe(n.outShape,t.dtype),p=this.readSync(t.dataId),f=this.readSync(e.dataId),g=d.values;for(let m=0;m<n.batchSize;++m){const b=m*t.strides[0],y=m*d.strides[0];for(let m=0;m<n.outDepth;++m){const x=y+m*d.strides[1],v=m*n.strideDepth-u;for(let u=0;u<r;u++){const r=v+u*a;if(r<0||r>=n.inDepth)continue;const m=u*e.strides[0],y=b+r*t.strides[1];for(let a=0;a<n.outHeight;++a){const r=x+a*d.strides[2],u=a*n.strideHeight-h;for(let a=0;a<s;a++){const s=u+a*o;if(s<0||s>=n.inHeight)continue;const h=m+a*e.strides[1],d=y+s*t.strides[2];for(let t=0;t<n.outWidth;++t){const s=r+t*n.outChannels,a=t*n.strideWidth-c;for(let t=0;t<i;t++){const r=a+t*l;if(r<0||r>=n.inWidth)continue;const i=d+r*n.inChannels;let o=h+t*e.strides[2];for(let t=0;t<n.inChannels;++t){const e=p[i+t];for(let t=0;t<n.outChannels;++t)g[s+t]+=e*f[o+t];o+=n.outChannels}}}}}}}}return d.toTensor()}conv2dDerInput(t,e,n){Wp([t,e],"conv2dDerInput");const r=Xe(n.inShape,"float32"),s=r.values,i=this.readSync(t.dataId),a=this.readSync(e.dataId),[o,l,u]=e.strides,{batchSize:c,filterHeight:h,filterWidth:d,inChannels:p,inHeight:f,inWidth:g,outChannels:m,outHeight:b,outWidth:y,strideHeight:x,strideWidth:v,dataFormat:w}=n,$=h-1-n.padInfo.top,C=d-1-n.padInfo.left,k="channelsLast"===w,I=r.strides[0],S=k?r.strides[1]:r.strides[2],E=k?r.strides[2]:1,R=k?1:r.strides[1],A=t.strides[0],N=k?t.strides[1]:t.strides[2],T=k?t.strides[2]:1,D=k?1:t.strides[1];for(let F=0;F<c;++F)for(let t=0;t<p;++t)for(let e=0;e<f;++e){const n=e-$,r=Math.max(0,Math.ceil(n/x)),c=Math.min(b,(h+n)/x);for(let p=0;p<g;++p){const f=p-C,g=Math.max(0,Math.ceil(f/v)),b=Math.min(y,(d+f)/v);let w=0;for(let e=r;e<c;++e){const r=e*x-n;for(let n=g;n<b;++n){const s=A*F+N*e+T*n,c=o*(h-1-r)+l*(d-1-(n*v-f))+u*t;for(let t=0;t<m;++t)w+=i[s+D*t]*a[c+t]}}s[I*F+S*e+E*p+R*t]=w}}return r.toTensor()}conv3dDerInput(t,e,n){const r=Xe(n.inShape,"float32"),s=r.values,[i,a,o,l]=r.strides,u=this.readSync(t.dataId),[c,h,d,p]=t.strides,f=this.readSync(e.dataId),[g,m,b,y]=e.strides,{batchSize:x,filterDepth:v,filterHeight:w,filterWidth:$,inChannels:C,inDepth:k,inHeight:I,inWidth:S,outChannels:E,outDepth:R,outHeight:A,outWidth:N,strideDepth:T,strideHeight:D,strideWidth:F}=n,_=v-1-n.padInfo.front,O=w-1-n.padInfo.top,M=$-1-n.padInfo.left;for(let L=0;L<x;++L)for(let t=0;t<C;++t)for(let e=0;e<k;++e){const n=e-_,r=Math.max(0,Math.ceil(n/T)),x=Math.min(R,(v+n)/T);for(let C=0;C<I;++C){const k=C-O,I=Math.max(0,Math.ceil(k/D)),R=Math.min(A,(w+k)/D);for(let A=0;A<S;++A){const S=A-M,_=Math.max(0,Math.ceil(S/F)),O=Math.min(N,($+S)/F);let z=0;for(let e=r;e<x;++e){const r=e*T-n;for(let n=I;n<R;++n){const s=n*D-k;for(let i=_;i<O;++i){const a=c*L+h*e+d*n+p*i,o=g*(v-1-r)+m*(w-1-s)+b*($-1-(i*F-S))+y*t;for(let t=0;t<E;++t)z+=u[a+t]*f[o+t]}}}s[i*L+a*e+o*C+l*A+t]=z}}}return r.toTensor()}conv2dDerFilter(t,e,n){Wp([t,e],"conv2dDerFilter");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o="channelsLast"===n.dataFormat,l=Xe(n.filterShape,"float32"),u=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(t),d=this.bufferSync(e);for(let p=0;p<i;++p){const t=Math.max(0,Math.ceil((c-p)/r)),e=Math.min(n.outHeight,(n.inHeight+c-p)/r);for(let i=0;i<a;++i){const a=Math.max(0,Math.ceil((u-i)/s)),f=Math.min(n.outWidth,(n.inWidth+u-i)/s);for(let g=0;g<n.inChannels;++g)for(let m=0;m<n.outChannels;++m){let b=0;for(let l=0;l<n.batchSize;++l)for(let n=t;n<e;++n){const t=p+n*r-c;for(let e=a;e<f;++e){const r=i+e*s-u;b+=o?h.get(l,t,r,g)*d.get(l,n,e,m):h.get(l,g,t,r)*d.get(l,m,n,e)}}l.set(b,p,i,g,m)}}}return l.toTensor()}conv3dDerFilter(t,e,n){const r=n.strideDepth,s=n.strideHeight,i=n.strideWidth,a=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=Xe(n.filterShape,"float32"),c=u.values,[h,d,p,f]=u.strides,g=this.readSync(e.dataId),[m,b,y,x]=e.strides,v=this.readSync(t.dataId),[w,$,C,k]=t.strides,I=n.padInfo.front,S=n.padInfo.left,E=n.padInfo.top;for(let R=0;R<a;++R){const t=Math.max(0,Math.ceil((I-R)/r)),e=Math.min(n.outDepth,(n.inDepth+I-R)/r),a=R*h;for(let u=0;u<o;++u){const o=Math.max(0,Math.ceil((E-u)/s)),h=Math.min(n.outHeight,(n.inHeight+E-u)/s),A=u*d+a;for(let a=0;a<l;++a){const l=Math.max(0,Math.ceil((S-a)/i)),d=Math.min(n.outWidth,(n.inWidth+S-a)/i),N=a*p+A;for(let p=0;p<n.inChannels;++p){const A=p*f+N;for(let f=0;f<n.outChannels;++f){let N=0;for(let c=0;c<n.batchSize;++c){const n=c*w,A=c*m;for(let c=t;c<e;++c){const t=(R+c*r-I)*$+n,e=c*b+A;for(let n=o;n<h;++n){const r=(u+n*s-E)*C+t,o=n*y+e;for(let t=l;t<d;++t)N+=v[(a+t*i-S)*k+r+p]*g[t*x+o+f]}}}c[A+f]=N}}}}}return u.toTensor()}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){let a=this.depthwiseConv2D(t,e,n);return r&&(a=this.add(a,r)),s&&(a=Xp(this,a,s,i)),a}depthwiseConv2D(t,e,n){Wp([t,e],"depthwiseConv2D");const r=n.filterHeight,s=n.filterWidth,i=n.dilationHeight,a=n.dilationWidth,o=n.padInfo.left,l=n.padInfo.top,u=n.outChannels/n.inChannels,c=Xe(n.outShape,t.dtype),h=this.readSync(t.dataId),d=this.readSync(e.dataId),p=c.values;for(let f=0;f<n.batchSize;++f){const g=f*t.strides[0],m=f*c.strides[0];for(let f=0;f<n.outHeight;++f){const b=m+f*c.strides[1],y=f*n.strideHeight-o;for(let o=0;o<r;++o){const r=y+o*i;if(r<0||r>=n.inHeight)continue;const f=o*e.strides[0],m=g+r*t.strides[1];for(let t=0;t<n.outWidth;++t){const r=b+t*c.strides[2],i=t*n.strideWidth-l;for(let t=0;t<s;++t){const s=i+t*a;if(s<0||s>=n.inWidth)continue;const o=m+s*n.inChannels;let l=r,c=f+t*e.strides[1];for(let t=0;t<n.inChannels;++t){const e=h[o+t];for(let t=0;t<u;++t)p[l+t]+=e*d[c+t];l+=u,c+=u}}}}}}return c.toTensor()}depthwiseConv2DDerInput(t,e,n){Wp([t,e],"depthwiseConv2DDerInput");const r=Xe(n.inShape,"float32"),s=r.values,[i,a,o]=r.strides,l=this.readSync(t.dataId),[u,c,h]=t.strides,d=this.readSync(e.dataId),[p,f,g]=e.strides,{batchSize:m,filterHeight:b,filterWidth:y,inChannels:x,inHeight:v,inWidth:w,outChannels:$,outHeight:C,outWidth:k,strideHeight:I,strideWidth:S}=n,E=b-1-n.padInfo.top,R=y-1-n.padInfo.left,A=$/x;for(let N=0;N<m;++N)for(let t=0;t<x;++t)for(let e=0;e<v;++e){const n=e-E,r=Math.max(0,Math.ceil(n/I)),m=Math.min(C,(b+n)/I);for(let x=0;x<w;++x){const v=x-R,w=Math.max(0,Math.ceil(v/S)),$=Math.min(k,(y+v)/S);let C=0;for(let e=r;e<m;++e){const r=e*I-n;for(let n=w;n<$;++n){const s=u*N+c*e+h*n,i=p*(b-1-r)+f*(y-1-(n*S-v))+g*t;for(let e=0;e<A;++e)C+=l[s+(t*A+e)]*d[i+e]}}s[i*N+a*e+o*x+t]=C}}return r.toTensor()}depthwiseConv2DDerFilter(t,e,n){Wp([t,e],"depthwiseConv2DDerFilter");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o=Xe(n.filterShape,"float32"),l=n.padInfo.left,u=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(t),d=this.bufferSync(e);for(let p=0;p<i;++p){const t=Math.max(0,Math.ceil((u-p)/r)),e=Math.min(n.outHeight,(n.inHeight+u-p)/r);for(let i=0;i<a;++i){const a=Math.max(0,Math.ceil((l-i)/s)),f=Math.min(n.outWidth,(n.inWidth+l-i)/s);for(let g=0;g<n.outChannels;++g){const m=Math.trunc(g/c),b=g%c;let y=0;for(let o=0;o<n.batchSize;++o)for(let n=t;n<e;++n){const t=p+n*r-u;for(let e=a;e<f;++e)y+=h.get(o,t,i+e*s-l,m)*d.get(o,n,e,g)}o.set(y,p,i,m,b)}}}return o.toTensor()}tile(t,e){return Wp(t,"tile"),qp(this.bufferSync(t),e)}pad(t,e,n){Wp(t,"pad");const r=e.map((e,n)=>e[0]+t.shape[n]+e[1]),s=e.map(t=>t[0]),i=this.bufferSync(t),a=Xe(r,t.dtype);0!==n&&a.values.fill(n);for(let o=0;o<t.size;o++){const t=i.indexToLoc(o),e=t.map((t,e)=>t+s[e]);a.set(i.get(...t),...e)}return a.toTensor()}gather(t,e,n){Wp([t,e],"gather");const r=t.shape.slice(),s=this.readSync(e.dataId);r[n]=s.length;const i=Xe(r,t.dtype),a=this.bufferSync(t);for(let o=0;o<i.size;++o){const t=i.indexToLoc(o),e=t.slice();e[n]=s[t[n]];const r=a.locToIndex(e);i.values[o]=a.values[r]}return i.toTensor()}batchToSpaceND(t,e,n){Wp([t],"batchToSpaceND");const r=e.reduce((t,e)=>t*e),s=su(t.shape,e,r),i=iu(s.length,e.length),a=au(t.shape,e,r),o=ou(n,e.length),l=lu(a,n,e.length);return Wr(t.reshape(s),i).reshape(a).slice(o,l)}spaceToBatchND(t,e,n){Wp([t],"spaceToBatchND");const r=e.reduce((t,e)=>t*e),s=[[0,0]];s.push(...n);for(let u=1+e.length;u<t.shape.length;++u)s.push([0,0]);const i=t.pad(s),a=su(i.shape,e,r,!1),o=iu(a.length,e.length,!1),l=au(i.shape,e,r,!1);return Wr(i.reshape(a),o).reshape(l)}maxPool(t,e){return Wp(t,"maxPool"),Up(this.readSync(t.dataId),0,t.dtype,t.strides,e,"max").toTensor()}maxPoolBackprop(t,e,n,r){Wp([e,n],"maxPoolBackprop");const s=this.readSync(e.dataId),i=Xe(r.outShape,e.dtype,Vp(s,e.shape,e.dtype,r).values),a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=h-1-r.padInfo.left,p=c-1-r.padInfo.top,f=Xe(e.shape,"float32"),g=this.bufferSync(t);for(let m=0;m<r.batchSize;++m)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.inHeight;++e)for(let n=0;n<r.inWidth;++n){const s=e-p,b=n-d;let y=0;for(let e=0;e<c;e+=l){const n=(s+e)/a;if(!(n<0||n>=r.outHeight||Math.floor(n)!==n))for(let s=0;s<h;s+=u){const a=(b+s)/o;if(a<0||a>=r.outWidth||Math.floor(a)!==a)continue;const l=c*h-1-i.get(m,n,a,t)===e*h+s?1:0;0!==l&&(y+=g.get(m,n,a,t)*l)}}f.set(y,m,e,n,t)}return f.toTensor()}avgPoolBackprop(t,e,n){Wp([t,e],"avgPoolBackprop");const r=n.strideHeight,s=n.strideWidth,i=n.filterHeight,a=n.filterWidth,o=n.dilationHeight,l=n.dilationWidth,u=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=c-1-n.padInfo.left,d=u-1-n.padInfo.top,p=Xe(e.shape,"float32"),f=1/(i*a),g=this.bufferSync(t);for(let m=0;m<n.batchSize;++m)for(let t=0;t<n.inChannels;++t)for(let e=0;e<n.inHeight;++e)for(let i=0;i<n.inWidth;++i){const a=e-d,b=i-h;let y=0;for(let e=0;e<u;e+=o){const i=(a+e)/r;if(!(i<0||i>=n.outHeight||Math.floor(i)!==i))for(let e=0;e<c;e+=l){const r=(b+e)/s;r<0||r>=n.outWidth||Math.floor(r)!==r||(y+=g.get(m,i,r,t))}}p.set(y*f,m,e,i,t)}return p.toTensor()}pool3d(t,e,n){Wp(t,"pool3d");const r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=this.readSync(t.dataId),b=Xe(e.outShape,t.dtype),y=b.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[3]*e.outShape[4],$=e.outShape[4];for(let C=0;C<e.batchSize;++C){const b=C*x,k=C*t.strides[0];for(let x=0;x<e.inChannels;++x)for(let C=0;C<e.outDepth;++C){const I=C*r-d;let S=I;for(;S<0;)S+=a;const E=Math.min(e.inDepth,u+I),R=b+C*v;for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const b=Math.min(e.inHeight,c+u),v=R+r*w;for(let r=0;r<e.outWidth;++r){const s=r*i-f;let u=s;for(;u<0;)u+=l;const c=Math.min(e.inWidth,h+s),p=v+r*$;let w=g,C=0,I=0;for(let e=S;e<E;e+=a){const r=k+e*t.strides[1];for(let e=d;e<b;e+=o){const s=r+e*t.strides[2];for(let e=u;e<c;e+=l){const r=m[s+e*t.strides[3]+x];if("max"===n&&r>w?w=r:"avg"===n&&(C+=r,I++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}y[p+x]="avg"===n?C/I:w}}}}return b.toTensor()}avgPool3d(t,e){return Wp(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){Wp([t,e],"avgPool3dBackprop");const r=n.strideDepth,s=n.strideHeight,i=n.strideWidth,a=n.filterDepth,o=n.filterHeight,l=n.filterWidth,u=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,g=d-1-n.padInfo.front,m=f-1-n.padInfo.left,b=p-1-n.padInfo.top,y=Xe(e.shape,"float32"),x=1/(a*o*l),v=this.bufferSync(t);for(let w=0;w<n.batchSize;++w)for(let t=0;t<n.inChannels;++t)for(let e=0;e<n.inDepth;++e)for(let a=0;a<n.inHeight;++a)for(let o=0;o<n.inWidth;++o){const l=e-g,$=a-b,C=o-m;let k=0;for(let e=0;e<d;e+=u){const a=(l+e)/r;if(!(a<0||a>=n.outDepth||Math.floor(a)!==a))for(let e=0;e<p;e+=c){const r=($+e)/s;if(!(r<0||r>=n.outHeight||Math.floor(r)!==r))for(let e=0;e<f;e+=h){const s=(C+e)/i;s<0||s>=n.outWidth||Math.floor(s)!==s||(k+=v.get(w,a,r,s,t))}}}y.set(k*x,w,e,a,o,t)}return y.toTensor()}maxPool3d(t,e){return Wp(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=Xe(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left,g=this.bufferSync(t);for(let m=0;m<e.batchSize;++m)for(let t=0;t<e.inChannels;++t)for(let b=0;b<e.outDepth;++b){const y=b*r-d;let x=y;for(;x<0;)x+=a;const v=Math.min(e.inDepth,u+y);for(let r=0;r<e.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(e.inHeight,c+u);for(let s=0;s<e.outWidth;++s){const p=s*i-f;let $=p;for(;$<0;)$+=l;const C=Math.min(e.inWidth,h+p);let k=Number.NEGATIVE_INFINITY,I=-1;for(let e=x;e<v;e+=a){const n=e-y;for(let r=d;r<w;r+=o){const s=r-u;for(let i=$;i<C;i+=l){const a=i-p,o=g.get(m,e,r,i,t);o>=k&&(k=o,I=n*c*h+s*c+a)}}}n.set(I,m,b,r,s,t)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,r){Wp([e,n],"maxPool3dBackprop");const s=this.maxPool3dPositions(e,r),i=r.strideDepth,a=r.strideHeight,o=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=h-1-r.padInfo.front,g=p-1-r.padInfo.left,m=d-1-r.padInfo.top,b=Xe(e.shape,"float32"),y=this.bufferSync(s),x=this.bufferSync(t);for(let v=0;v<r.batchSize;++v)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.inDepth;++e)for(let n=0;n<r.inHeight;++n)for(let s=0;s<r.inWidth;++s){const w=e-f,$=n-m,C=s-g;let k=0;for(let e=0;e<h;e+=l){const n=(w+e)/i;if(!(n<0||n>=r.outDepth||Math.floor(n)!==n))for(let s=0;s<d;s+=u){const i=($+s)/a;if(!(i<0||i>=r.outHeight||Math.floor(i)!==i))for(let a=0;a<p;a+=c){const l=(C+a)/o;if(l<0||l>=r.outWidth||Math.floor(l)!==l)continue;const u=h*d*p-1-y.get(v,n,i,l,t)===e*d*p+s*p+a?1:0;0!==u&&(k+=x.get(v,n,i,l,t)*u)}}}b.set(k,v,e,n,s,t)}return b.toTensor()}cast(t,e){return Su(t,e,this)}reshape(t,e){return Eu(t,e)}avgPool(t,e){return Wp(t,"avgPool"),Wp(t,"maxPool"),Up(this.readSync(t.dataId),0,t.dtype,t.strides,e,"avg").toTensor().toFloat()}resizeBilinear(t,e,n,r){Wp(t,"resizeBilinear");const[s,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(P([s,e,n,o])),c=[r&&e>1?i-1:i,r&&n>1?a-1:a],h=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d=0;const p=c[0]/h[0],f=c[1]/h[1];for(let g=0;g<s;g++)for(let r=0;r<e;r++){const e=p*r,s=Math.floor(e),c=e-s,h=Math.min(i-1,Math.ceil(e)),m=g*t.strides[0]+s*t.strides[1],b=g*t.strides[0]+h*t.strides[1];for(let r=0;r<n;r++){const e=f*r,n=Math.floor(e),s=e-n,i=Math.min(a-1,Math.ceil(e)),h=m+n*t.strides[2],p=b+n*t.strides[2],g=m+i*t.strides[2],y=b+i*t.strides[2];for(let t=0;t<o;t++){const e=l[h+t],n=l[p+t],r=e+(l[g+t]-e)*s;u[d++]=r+(n+(l[y+t]-n)*s-r)*c}}}return Te(u,[s,e,n,o])}resizeBilinearBackprop(t,e,n){Wp([t,e],"resizeBilinearBackprop");const[r,s,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(r*s*i*a),c=[n&&o>1?s-1:s,n&&l>1?i-1:i],h=[n&&o>1?o-1:o,n&&l>1?l-1:l],d=c[0]/h[0],p=c[1]/h[1],f=this.readSync(t.dataId);let g=0;for(let m=0;m<r;m++){const t=m*e.strides[0];for(let n=0;n<o;n++){const r=n*d,o=Math.floor(r),c=Math.min(Math.ceil(r),s-1),h=t+o*e.strides[1],m=t+c*e.strides[1],b=r-o,y=1-b;for(let t=0;t<l;t++){const n=t*p,r=Math.floor(n),s=Math.min(Math.ceil(n),i-1),o=n-r,l=1-o,c=h+r*e.strides[2],d=h+s*e.strides[2],x=m+r*e.strides[2],v=m+s*e.strides[2],w=y*l,$=y*o,C=b*l,k=b*o;for(let t=0;t<a;t++){const e=f[g++];u[c+t]+=e*w,u[d+t]+=e*$,u[x+t]+=e*C,u[v+t]+=e*k}}}}return Le(u,[r,i,s,a],e.dtype)}resizeNearestNeighbor(t,e,n,r){Wp(t,"resizeNearestNeighbor");const[s,i,a,o]=t.shape,l=this.readSync(t.dataId),u=new Float32Array(s*e*n*o),c=[r&&e>1?i-1:i,r&&n>1?a-1:a],h=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=c[0]/h[0],p=c[1]/h[1];let f=0;for(let g=0;g<s;g++){const s=g*t.strides[0];for(let c=0;c<e;c++){const e=d*c,h=s+Math.min(i-1,r?Math.round(e):Math.floor(e))*t.strides[1];for(let s=0;s<n;s++){const e=p*s,n=h+Math.min(a-1,r?Math.round(e):Math.floor(e))*t.strides[2];for(let t=0;t<o;t++)u[f++]=l[n+t]}}}return Te(u,[s,e,n,o],t.dtype)}resizeNearestNeighborBackprop(t,e,n){Wp([t,e],"resizeNearestNeighborBackprop");const[r,s,i,a]=e.shape,[,o,l]=t.shape,u=new Float32Array(r*s*i*a),c=this.readSync(t.dataId),h=[n&&o>1?s-1:s,n&&l>1?i-1:i],d=[n&&o>1?o-1:o,n&&l>1?l-1:l],p=h[0]/d[0],f=h[1]/d[1],g=1/p,m=1/f,b=2*Math.ceil(g)+2,y=2*Math.ceil(m)+2;for(let x=0;x<r;x++){const r=x*e.strides[0];for(let h=0;h<s;h++){const d=r+h*e.strides[1],x=Math.floor(h*g),v=Math.floor(x-b/2);for(let g=0;g<i;g++){const x=d+g*e.strides[2],w=Math.floor(g*m),$=Math.floor(w-y/2);for(let e=0;e<a;e++){let a=0;for(let u=0;u<b;u++){const d=u+v;if(d<0||d>=o)continue;const m=r+d*t.strides[1],b=d*p;if(h===Math.min(s-1,n?Math.round(b):Math.floor(b)))for(let r=0;r<y;r++){const s=r+$;if(s<0||s>=l)continue;const o=m+s*t.strides[2],u=s*f;g===Math.min(i-1,n?Math.round(u):Math.floor(u))&&(a+=c[o+e])}}u[x+e]=a}}}}return Le(u,e.shape,e.dtype)}batchNorm(t,e,n,r,s,i){Wp([t,e,n,s,r],"batchNorm");const a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=this.readSync(n.dataId),u=s?this.readSync(s.dataId):new Float32Array([1]),c=r?this.readSync(r.dataId):new Float32Array([0]),h=new Float32Array(a.length),d=c.length,p=u.length,f=l.length,g=o.length;let m=0,b=0,y=0,x=0;for(let v=0;v<a.length;++v)h[v]=c[m++]+(a[v]-o[b++])*u[y++]/Math.sqrt(l[x++]+i),m>=d&&(m=0),b>=g&&(b=0),y>=p&&(y=0),x>=f&&(x=0);return Le(h,t.shape)}localResponseNormalization4D(t,e,n,r,s){Wp(t,"localResponseNormalization4D");const i=t.shape[3],a=i-1,o=this.readSync(t.dataId),l=t.size,u=new Float32Array(l);function c(t){const n=t%i;let r=t-n+Math.max(0,n-e);const s=t-n+Math.min(n+e,a);let l=0;for(;r<=s;r++){const t=o[r];l+=t*t}return l}for(let h=0;h<l;h++){const t=c(h),e=o[h]*Math.pow(n+r*t,-s);u[h]=e}return Le(u,t.shape)}LRNGrad(t,e,n,r,s,i,a){Wp(t,"LRNGrad");const o=t.shape[3],l=this.readSync(t.dataId),u=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),d=t.size;for(let p=0;p<d;p++){const t=p%o,e=p-t+Math.max(0,t-r),n=p-t+Math.min(o,t+r+1);let d=0;for(let r=e;r<n;r++)d+=Math.pow(u[r],2);d=i*d+s;for(let r=e;r<n;r++){let t=-2*i*a*u[r]*c[p]/d;p===r&&(t+=Math.pow(d,-a)),t*=l[p],h[r]+=t}}return Le(h,t.shape)}multinomial(t,e,n,r){Wp(t,"multinomial");const s=e?t:_o(t),i=s.shape[0],a=s.shape[1],o=Ue([i,n],"int32"),l=this.readSync(o.dataId),u=this.readSync(s.dataId);for(let c=0;c<i;++c){const t=c*a,e=new Float32Array(a-1);e[0]=u[t];for(let n=1;n<e.length;++n)e[n]=e[n-1]+u[t+n];const s=Va.alea(r.toString()),i=c*n;for(let r=0;r<n;++r){const t=s();l[i+r]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){l[i+r]=n;break}}}return o}oneHot(t,e,n,r){Wp(t,"oneHot");const s=new Float32Array(t.size*e);s.fill(r);const i=this.readSync(t.dataId);for(let a=0;a<t.size;++a)i[a]>=0&&i[a]<e&&(s[a*e+i[a]]=n);return Oe(s,[t.size,e],"int32")}nonMaxSuppression(t,e,n,r,s){Wp(t,"nonMaxSuppression");const i=this.readSync(t.dataId),a=this.readSync(e.dataId);return Gp(i,a,n,r,s)}fft(t){return this.fftBatch(t,!1)}ifft(t){return this.fftBatch(t,!0)}fftBatch(t,e){const n=t.shape[0],r=t.shape[1],s=Xe(t.shape,"float32"),i=Xe(t.shape,"float32"),a=Ne(t).as2D(n,r),o=Ae(t).as2D(n,r);for(let l=0;l<n;l++){const t=a.slice([l,0],[1,r]),n=o.slice([l,0],[1,r]),u=Re(t,n),c=this.readSync(this.fftImpl(u,e).dataId);for(let e=0;e<r;e++){const t=$u(c,e);s.values[l*r+e]=t.real,i.values[l*r+e]=t.imag}}return Re(s.toTensor(),i.toTensor()).as2D(n,r)}fftImpl(t,e){const n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){let s=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(s=Re(Ne(s).div(Fe(r)),Ae(s).div(Fe(r)))),s}{const n=this.readSync(t.dataId),s=xu(this.fourierTransformByMatmul(n,r,e));return Re(s.real,s.imag).as2D(t.shape[0],t.shape[1])}}isExponentOf2(t){return 0==(t&t-1)}fftRadix2(t,e,n){if(1===e)return t;const r=this.readSync(t.dataId),s=e/2,i=vu(r);let a=Re(i.real,i.imag).as1D();const o=wu(r);let l=Re(o.real,o.imag).as1D();a=this.fftRadix2(a,s,n),l=this.fftRadix2(l,s,n);const u=ku(e,n),c=Re(u.real,u.imag).mul(l),h=a.add(c),d=a.sub(c),p=Ne(h).concat(Ne(d)),f=Ae(h).concat(Ae(d));return Re(p,f).as1D()}fourierTransformByMatmul(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let i=0,a=0;for(let r=0;r<e;r++){const o=Iu(s*r,e,n),l=$u(t,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=e,a/=e),Cu(r,i,a,s)}return r}depthToSpace(t,e,n){M("NHWC"===n,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${n}`),M(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`);const r=t.shape[0],s=t.shape[1],i=t.shape[2],a=t.shape[3],o=s*e,l=i*e,u=a/(e*e),c=this.readSync(t.dataId),h=new Float32Array(r*o*l*u);let d=0;for(let p=0;p<r;++p)for(let t=0;t<o;++t){const n=Math.floor(t/e),r=t%e;for(let t=0;t<l;++t){const o=Math.floor(t/e),l=(r*e+t%e)*u;for(let t=0;t<u;++t)h[d++]=c[t+l+a*(o+i*(n+s*p))]}}return Le(h,[r,o,l,u])}broadcastedBinaryOp(t,e,n,r){const s=be(t.shape,e.shape),i=Xe(s,n),a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=ge(t.shape,s),u=ge(e.shape,s),c=i.values;if(l.length+u.length===0)for(let h=0;h<c.length;++h)c[h]=r(a[h%a.length],o[h%o.length]);else{const n=this.bufferSync(t),s=this.bufferSync(e);for(let h=0;h<c.length;++h){const d=i.indexToLoc(h),p=d.slice(-t.rank);l.forEach(t=>p[t]=0);const f=n.locToIndex(p),g=d.slice(-e.rank);u.forEach(t=>g[t]=0);const m=s.locToIndex(g);c[h]=r(a[f],o[m])}}return i.toTensor()}broadcastedBinaryComplexOp(t,e,n){const r=be(t.shape,e.shape),s=Xe(r,"float32"),i=Xe(r,"float32"),a=this.readSync(t.dataId),o=this.readSync(e.dataId),l=ge(t.shape,r),u=ge(e.shape,r),c=s.values,h=i.values;if(l.length+u.length===0)for(let d=0;d<c.length;d++){const t=d%a.length,e=d%o.length,r=n(a[2*t],a[2*t+1],o[2*e],o[2*e+1]);c[d]=r.real,h[d]=r.imag}else{const r=this.bufferSync(this.data.get(t.dataId).complexTensors.real),i=this.bufferSync(this.data.get(e.dataId).complexTensors.real);for(let d=0;d<c.length;d++){const p=s.indexToLoc(d),f=p.slice(-t.rank);l.forEach(t=>f[t]=0);const g=r.locToIndex(f),m=p.slice(-e.rank);u.forEach(t=>m[t]=0);const b=i.locToIndex(m),y=n(a[2*g],a[2*g+1],o[2*b],o[2*b+1]);c[d]=y.real,h[d]=y.imag}}return this.complex(s.toTensor(),i.toTensor())}split(t,e,n){return Hp(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,r,s,i){const[a,o,l,u]=t.shape,c=e.shape[0],[h,d]=r,p=Xe([c,h,d,u],"float32"),f=this.readSync(e.dataId),g=this.readSync(n.dataId),m=this.readSync(t.dataId),b=t.strides,y=p.strides;for(let x=0;x<c;x++){const t=4*x,e=f[t],n=f[t+1],r=f[t+2],c=f[t+3],v=g[x];if(v>=a)continue;const w=h>1?(r-e)*(o-1)/(h-1):0,$=d>1?(c-n)*(l-1)/(d-1):0;for(let a=0;a<h;a++){const t=h>1?e*(o-1)+a*w:.5*(e+r)*(o-1);if(t<0||t>o-1)for(let e=0;e<d;e++)for(let t=0;t<u;t++)p.values[t+e*y[2]+a*y[1]+x*y[0]]=i;else if("bilinear"===s){const e=Math.floor(t),r=Math.ceil(t),s=t-e;for(let t=0;t<d;t++){const o=d>1?n*(l-1)+t*$:.5*(n+c)*(l-1);if(o<0||o>l-1){for(let e=0;e<u;e++)p.values[e+t*y[2]+a*y[1]+x*y[0]]=i;continue}const h=Math.floor(o),f=Math.ceil(o),g=o-h;for(let n=0;n<u;n++){let i=n+h*b[2]+e*b[1]+v*b[0];const o=m[i];i=n+f*b[2]+e*b[1]+v*b[0];const l=m[i];i=n+h*b[2]+r*b[1]+v*b[0];const u=m[i];i=n+f*b[2]+r*b[1]+v*b[0];const c=m[i],d=o+(l-o)*g;i=n+t*y[2]+a*y[1]+x*y[0],p.values[i]=d+(u+(c-u)*g-d)*s}}}else for(let e=0;e<d;++e){const r=d>1?n*(l-1)+e*$:.5*(n+c)*(l-1);if(r<0||r>l-1){for(let t=0;t<u;t++)p.values[t+e*y[2]+a*y[1]+x*y[0]]=i;continue}const s=Math.round(r),o=Math.round(t);for(let t=0;t<u;t++)p.values[t+e*y[2]+a*y[1]+x*y[0]]=m[t+s*b[2]+o*b[1]+v*b[0]]}}}return p.toTensor()}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,sliceSize:a,strides:o,outputSize:l}=Ho(0,t,n);return this.scatter(t,e,n,l,a,i,s,o,r,!1)}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,a,o]=uu(t,e);if(0===i)return Te([],s,t.dtype);const l=new $t([i,a],t.dtype),u=this.readSync(e.dataId),c=this.readSync(t.dataId);for(let h=0;h<i;h++){const e=[];let n=0;for(let t=0;t<r;t++){const s=u[h*r+t];n+=s*o[t],e.push(s)}if(n<0||n>=t.size/a)throw new Error(`Invalid indices: ${e} does not index into ${t.shape}`);for(let t=0;t<a;t++)l.values[h*a+t]=c[n*a+t]}return l.toTensor().reshape(s)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:a,outputSize:o}=Ho(0,t,n),l=Fe(0);return this.scatter(t,e,n,o,i,s,r,a,l,!0)}fill(t,e,n){const r=Y(n=n||et(e),P(t));return r.fill(e),Gi().makeTensor(r,t,n,this)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)}zerosLike(t){const e=Y(t.dtype,P(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return Ru(t,e,n)}scatter(t,e,n,r,s,i,a,o,l,u){const c=[r/s,s],h=this.readSync(t.dataId),d=this.readSync(e.dataId);if(0===r)return Te([],n,e.dtype);const p=new $t(c,e.dtype);p.values.fill(this.readSync(l.dataId)[0]);for(let f=0;f<i;f++){const t=[];let i=0;for(let e=0;e<a;e++){const n=h[f*a+e];t.push(n),i+=n*o[e]}if(i<0||i>=r/s)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[i*s+n]+=d[f*s+n]:p.values[i*s+n]=0===e.rank?d[0]:d[f*s+n]}return p.toTensor().reshape(n)}}function Jp(t,e){return{kernelName:t,backendName:"cpu",kernelFunc:({inputs:n,backend:r})=>{const{a:s,b:i}=n,a=r;Wp([s,i],t);const o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values,[u,c]=e(s.shape,i.shape,o,l,s.dtype);return{dataId:a.write(u,c,s.dtype),shape:c,dtype:s.dtype}}}}function Zp(t){return(e,n,r,s,i)=>{const a=be(e,n),o=a.length,l=st(a),u=X(i,P(a)),c=e.length,h=n.length,d=st(e),p=st(n),f=ge(e,a),g=ge(n,a);if(f.length+g.length===0)for(let m=0;m<u.length;++m)u[m]=t(r[m%r.length],s[m%s.length]);else for(let m=0;m<u.length;++m){const e=ft(m,o,l),n=e.slice(-c);f.forEach(t=>n[t]=0);const i=pt(n,c,d),a=e.slice(-h);g.forEach(t=>a[t]=0);const b=pt(a,h,p);u[m]=t(r[i],s[b])}return[u,a]}}const Qp=Zp((t,e)=>t/e),tf=Jp(Yt,Qp),ef={kernelName:ee,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s}=e,i=n;let a=r.shape;const o=a.length;let l=j(s,a);const u=fn(l,o);let c=i.data.get(r.dataId).values;if(null!=u){const t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a[u[e]];c=Pp(c,a,r.dtype,u,t),l=mn(l.length,o),a=t}Wp(r,"max"),pn("max",l,o);const[h,d]=hn(a,l),p=Bp(c,P(d),h,r.dtype);return{dataId:i.write(p,h,r.dtype),shape:h,dtype:r.dtype}}},nf={kernelName:ie,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;Wp(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=cr(r.shape,s,i,[1,1],a),[h,d]=function(t,e,n,r,s){const i=Up(t,0,n,st(e),s,"max"),a=Vp(t,e,n,s,!0,r);return[i.values,a.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},rf=kl,sf={kernelName:ue,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e;Wp(r,"NonMaxSuppressionWithScore");const c=u.data.get(r.dataId).values,h=u.data.get(s.dataId).values,d=i,p=a,f=o,g=l,{selectedIndices:m,selectedScores:b}=rf(c,h,d,p,f,g);return[m,b]}},af={kernelName:de,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;Wp(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let a=0;a<s.length;++a){const t=s[a];i[a]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},of=Zp((t,e)=>{const n=t-e;return n*n}),lf=[sf,af,Jp(he,of),tf,{kernelName:pe,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,i=n;Wp(r,"transpose");const a=new Array(r.shape.length);for(let l=0;l<a.length;l++)a[l]=r.shape[s[l]];const o=Pp(i.data.get(r.dataId).values,r.shape,r.dtype,s,a);return{dataId:i.write(o,a,r.dtype),shape:a,dtype:r.dtype}}},nf,ef];for(const tc of lf)N(tc);Xi("cpu",()=>new Yp,1);const uf={},cf={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function hf(t){t in uf||(uf[t]=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete uf[t]},!1),1===t?e.getContext("webgl",cf)||e.getContext("experimental-webgl",cf):e.getContext("webgl2",cf)}(t));const e=uf[t];return e.isContextLost()?(delete uf[t],hf(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),uf[t])}var df=(()=>(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(df||(df={})),df))(),pf=(()=>(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(pf||(pf={})),pf))(),ff=(()=>(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ff||(ff={})),ff))();function gf(t,e){return[e,t]}function mf(t){const e=P(t);return G(Math.ceil(e/4))}function bf(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function yf(t,e){const n=t;let r,s,i,a,o,l,u,c,h,d;return 2===v().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=t.RGBA,s=t.RGBA,i=t.RGBA,a=n.RGBA,o=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT),l=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function xf(t,e,n){const r=n();return e&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),r}function vf(t){return!!(v().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function wf(t,e,n){return Af(t,e,()=>t.getExtension(n),'Extension "'+n+'" not supported on this browser.')}const $f=/ERROR: [0-9]+:([0-9]+):/g;function Cf(t,e,n){if(xf(t,e,()=>t.validateProgram(n)),!1===t.getProgramParameter(n,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error("Shader program validation failed.")}function kf(t,e,n,r,s,i,a,o){const l=t.getAttribLocation(n,r);return-1!==l&&(xf(t,e,()=>t.bindBuffer(t.ARRAY_BUFFER,s)),xf(t,e,()=>t.vertexAttribPointer(l,i,t.FLOAT,!1,a,o)),xf(t,e,()=>t.enableVertexAttribArray(l)),!0)}function If(t,e,n,r,s,i){xf(t,e,()=>function(t,e,n,r){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,r),xf(t,e,()=>t.activeTexture(t.TEXTURE0+r)),xf(t,e,()=>t.bindTexture(t.TEXTURE_2D,n))}(t,e,r,i)),xf(t,e,()=>t.uniform1i(s,i))}function Sf(t,e,n,r){xf(t,e,()=>t.bindFramebuffer(t.FRAMEBUFFER,r)),xf(t,e,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0))}function Ef(t,e,n){xf(t,e,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),xf(t,e,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Rf(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function Af(t,e,n,r){const s=xf(t,e,()=>n());if(null==s)throw new Error(r);return s}function Nf(t,e=2){return P(t.slice(0,t.length-e))}function Tf(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Df(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Nf(t),...Tf(t)]),e}function Ff(t){return t%2==0}function _f(t,e){if(W(t=t.slice(-2),e=e.slice(-2))||!t.length||!e.length||0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r||Ff(n)&&Ff(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Ff(t[0])&&Ff(e[0])}let Of,Mf;function Lf(t,e){return null!=t.getExtension(e)}function zf(t){try{if(null!=hf(t))return!0}catch(e){return!1}return!1}function Bf(t){const e=yf(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}const Pf=v();Pf.registerFlag("HAS_WEBGL",()=>Pf.getNumber("WEBGL_VERSION")>0),Pf.registerFlag("WEBGL_VERSION",()=>zf(2)?2:zf(1)?1:0),Pf.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Pf.get("WEBGL_VERSION")),Pf.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Pf.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Pf.registerFlag("WEBGL_PACK",()=>Pf.getBool("HAS_WEBGL")),Pf.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Pf.getBool("WEBGL_PACK")),Pf.registerFlag("WEBGL_PACK_CLIP",()=>Pf.getBool("WEBGL_PACK")),Pf.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Pf.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Pf.getBool("WEBGL_PACK")),Pf.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Pf.getBool("WEBGL_PACK")),Pf.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Pf.getBool("WEBGL_PACK")),Pf.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Pf.getBool("WEBGL_PACK")),Pf.registerFlag("WEBGL_PACK_REDUCE",()=>Pf.getBool("WEBGL_PACK")),Pf.registerFlag("WEBGL_LAZILY_UNPACK",()=>Pf.getBool("WEBGL_PACK")),Pf.registerFlag("WEBGL_CONV_IM2COL",()=>Pf.getBool("WEBGL_PACK")),Pf.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==Of){const e=hf(t);Of=e.getParameter(e.MAX_TEXTURE_SIZE)}return Of}(Pf.getNumber("WEBGL_VERSION"))),Pf.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==Mf){const e=hf(t);Mf=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Mf)}(Pf.getNumber("WEBGL_VERSION"))),Pf.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Pf.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=hf(t);return e=Lf(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Lf(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),Pf.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Pf.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!function(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}()),Pf.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=hf(t);if(1===t){if(!Lf(e,"OES_texture_float"))return!1}else if(!Lf(e,"EXT_color_buffer_float"))return!1;return Bf(e)}(Pf.getNumber("WEBGL_VERSION"))),Pf.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Pf.getBool("WEBGL_FORCE_F16_TEXTURES")&&Pf.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Pf.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(t){if(0===t)return!1;const e=hf(t);if(1!==t){if(Lf(e,"EXT_color_buffer_float"))return Bf(e);const t="EXT_color_buffer_half_float";if(Lf(e,t)){const n=e.getExtension(t);return function(t,e){const n=yf(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),i}(e,n)}return!1}return!(!Lf(e,"OES_texture_float")||!Lf(e,"WEBGL_color_buffer_float"))&&Bf(e)}(Pf.getNumber("WEBGL_VERSION"))),Pf.registerFlag("WEBGL_FENCE_API_ENABLED",()=>function(t){return 2===t&&null!=hf(t).fenceSync}(Pf.getNumber("WEBGL_VERSION"))),Pf.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Pf.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);class Wf{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>`T${e}`);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>`v${t}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Uf{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>`T${e}`);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>`v${t}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class Vf{constructor(t,e,n){this.variableNames=["A"];const r=t.windowSize,s=t.batchSize,i=Math.ceil(t.inSize/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===e?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function Gf(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function Hf(t,e){return 1===e?[t]:Gf(t,e)}function qf(){let t,e,n,r,s,i,a,o,l,u;return 2===v().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function jf(t,e,n="index"){const r=st(e);return r.map((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`).join("")}function Kf(t){const e=st(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const Xf="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Yf}=h;function Jf(t,e,n,r){const s=[];t.forEach(t=>{const e=P(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))});const i=s.join("\n"),a=t.map(t=>function(t,e,n=!1){let r="";return r+=n?Qf(t):Zf(t),t.shapeInfo.logicalShape.length<=e.logicalShape.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=Yf(t.shapeInfo.logicalShape,e.logicalShape),l=ag(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map(t=>`coords.${h[t+u]} = 0;`).join("\n");let d="";d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>`coords.${h[e+u]}`).join(", ");let p="return outputValue;";const f=1===P(t.shapeInfo.logicalShape),g=1===P(e.logicalShape);if(1!==i||f||g){if(f&&!g)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=i-2,e=i-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,a=e.logicalShape.length;if(!t.shapeInfo.isUniform&&i===a&&null==t.shapeInfo.flatOffset&&W(t.shapeInfo.texShape,e.texShape))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const o=ag(a),l=Yf(t.shapeInfo.logicalShape,e.logicalShape),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&l.length>=1?"coords = 0;":l.map(t=>`coords.${h[t+u]} = 0;`).join("\n");let d="";return d=a<2&&i>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>`coords.${h[e+u]}`).join(", "),`\n    float ${s}() {\n      ${o} coords = getOutputCoords();\n      ${c}\n      return get${r}(${d});\n    }\n  `}(t,e)),r}(t,e,r)).join("\n"),o=e.texShape,l=qf(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${tg}\n    ${eg}\n    ${ng}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(W(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let i=s,a="",o="b, r, c";for(let l=2;l<t.length-1;l++)i*=t[t.length-l-1],a=`\n      int b${l} = index / ${i};\n      index -= b${l} * ${i};\n    `+a,o=`b${l}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${a}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){return 1===e[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `:1===e[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){return W(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=jf(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=jf(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=jf(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=jf(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,o),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=rg),[d,u,h,i,c,a,n].join("\n")}function Zf(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[i,a]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${i}, ${a}, ${sg(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${ig(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const a=sg(e);return 1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&W(e,s))return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${s[0]}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const{newShape:i,keptDims:a}=K(e);if(i.length<e.length){const e=["row","col"];return`\n      ${Zf(og(t,i))}\n      float ${r}(int row, int col) {\n        return ${r}(${lg(e,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${ig(t)}\n      }\n    `;const o=s[0],l=s[1],u=sg(n);return 1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${u}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${o}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===o?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${u}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${u};\n    vec2 uv = uvFromFlat(${o}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],i=e[2],{newShape:a,keptDims:o}=K(e);if(a.length<e.length){const e=["row","col","depth"];return`\n        ${Zf(og(t,a))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${lg(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${ig(t)}\n      }\n    `;const l=t.shapeInfo.texShape,u=l[0],c=l[1],h=t.shapeInfo.flatOffset;if(c===s&&null==h)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${c}.0, ${u}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(c===i&&null==h)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${sg(n)};\n        vec2 uv = uvFromFlat(${u}, ${c}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],i=e[2]*s,a=e[1]*i,{newShape:o,keptDims:l}=K(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${Zf(og(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${lg(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${i}, ${s}, 1)));\n        ${ig(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],d=c[1];if(d===a&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${sg(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=K(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${Zf(og(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${lg(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${ig(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${sg(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=K(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Zf(og(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${lg(e,i)});\n      }\n    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${ig(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${sg(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function Qf(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${qf().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=qf();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=s[0],a=s[1],o=qf();if(null!=s&&W(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${Qf(og(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${lg(s,n)});\n        }\n      `}const a=i[0],o=i[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${a}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${qf().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=a[0],l=a[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let p=2;p<n-1;p++)h=`int b${p}, `+h,c*=e[n-p-1],d=`b${p} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${qf().texture2D}(${r}, uv);\n    }\n  `}(t)}}const tg="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",eg="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ng="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rg="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function sg(t){return`offset${t}`}function ig(t){const e=t.name,n=P(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function ag(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function og(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function lg(t,e){return e.map(e=>t[e]).join(", ")}class ug{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,M(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=Math.ceil(t[t.length-1]/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,a=i.length,o=ag(a),l=Hf("coords",a);let u,c;if(1===s){c=a+1;const t=ag(c);u=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[a-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[a-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[a-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[a-2]};`}else c=a,u=`\n        ${o} sourceLocR = coords;\n        ++${l[a-1]};\n        ${o} sourceLocG = coords;\n        ++${l[a-2]};\n        ${o} sourceLocA = coords;\n        --${l[a-1]};\n        ${o} sourceLocB = coords;\n        --${l[a-2]};`;const h=["x","y","z","w","u","v"].slice(0,c),d="."+h[c-1],p=h.map(t=>"int "+t),f=Hf("sourceLocR",c-1).concat("inIdx.r"),g=Hf("sourceLocG",c-1).concat("inIdx.g"),m=Hf("sourceLocB",c-1).concat("inIdx.b"),b=Hf("sourceLocA",c-1).concat("inIdx.a"),y="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${f.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${m.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,w=r?"":`\n      float getBestIndicesAChannel(${p.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${p.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${o} coords = getOutputCoords();\n        bool hasNextCol = ${l[a-1]} < ${i[a-1]-1};\n        bool hasNextRow = ${l[a-2]} < ${i[a-2]-1};\n        ${u}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class cg{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.effectiveFilterHeight,n=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${n-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e};\n            wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${t.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hg{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.effectiveFilterDepth,n=t.effectiveFilterHeight,r=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${n-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterDepth*t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${e};\n            wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dg{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],be(t,e),be(t,n);let a="0.0";null!=r&&(be(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(be(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class pg{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],be(t,e),be(t,n);let a="vec4(0.0)";null!=r&&(be(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(be(t,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}class fg{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=be(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const gg="return a + b;",mg="return a - b;",bg="return a * b;",yg="return (a < 0.) ? b * a : a;";class xg{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=be(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const vg="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class wg{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=be(e,n);const s=this.outputShape.length;let i="";if(r)if(0===s||1===P(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${ag(s)} coords = getOutputCoords();\n        `,1===s)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=Hf("coords",s);i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}class $g{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Cg{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class kg{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class Ig{constructor(t){this.outputShape=[],this.outputShape=Ee(t,1),this.variableNames=t.map((t,e)=>`T${e}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let r=1;r<e.length;r++)e[r]=e[r-1]+t[r][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<e.length;r++)n.push(`else if (yC < ${e[r]}) setOutput(getT${r}(yR, yC-${e[r-1]}));`);n.push(`else setOutput(getT${e.length}(yR, yC-${e[e.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Sg{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ee(t,e);const n=this.outputShape,r=n.length,s=ag(r),i=Hf("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>`T${e}`);const o=new Array(t.length-1);o[0]=t[0][e];for(let p=1;p<o.length;p++)o[p]=o[p-1]+t[p][e];const l=a[e],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let p=1;p<o.length;p++){const t=o[p-1];h+=`\n        if (${l} < ${o[p]}  && ${l} >= ${o[p-1]}) {\n          return getChannel(\n            getT${p}(${Eg(a,l,t)}),\n            vec2(${Eg(u,l,t)}));\n        }`}const d=o[o.length-1];h+=`\n        return getChannel(\n          getT${o.length}(${Eg(a,l,d)}),\n          vec2(${Eg(u,l,d)}));`,this.userCode=`\n      float getValue(${a.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Eg(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}class Rg{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===t.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ag{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r="channelsLast"===t.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${n-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ng{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${t.strideDepth} - ${t.padInfo.front};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Tg{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${n-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${t.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Dg{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${t.outChannels/t.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fg{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${n-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _g{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,i=t.padInfo.left,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,g=f?1:2,m=f?2:3,b=f?3:1;let y="",x="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${m}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}class Og{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Mg{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let g="",m="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,m="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${m}\n        setOutput(result);\n      }\n    `}}class Lg{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,a=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=p;let g="int xR; int xC; int xCOffset;";for(let x=0;x<d;x++)for(let t=0;t<p;t++)g+=`\n          vec4 xTexelR${x}C${2*t} = vec4(0.);\n          vec4 wR${x}C${t} = vec4(0.);\n          vec4 xR${x}C${t} = vec4(0.);`;for(let x=0;x<d;x++)for(let t=0;t<f;t++){const e=2*t;if(g+=`\n          xR = xRCorner + ${x*c};\n          xC = xCCorner + ${e*h};\n        `,1===u){if(e<p&&(g+=o%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${x}C${e}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${x}C${e} = vec4(previous.zw, xTexelR${x}C${e}.xy);\n                } else {\n                  xR${x}C${e} = vec4(0, 0, xTexelR${x}C${e}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                xR${x}C${e} = xTexelR${x}C${e};\n              `,e+1<p)){const t=o%2==0?O(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(g+=`\n                  xCOffset = xC + ${o%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${x}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${x}C${e} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${x}C${e} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${x}C${e+1} = vec4(\n                    xTexelR${x}C${e}.zw, xTexelR${x}C${e+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${x}C${e+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${x}C${e+1} = xTexelR${x}C${e+2};\n                `}}else e<p&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,o%2==1?(g+=`\n                xCOffset = xC + 1 - ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${x}C${e+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${x}C${e+2} = vec4(0.);\n                }\n\n                xR${x}C${e} = vec4(\n                  xTexelR${x}C${e}.zw, xTexelR${x}C${e+2}.zw);\n              `,e+1<p&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${u};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${x}C${e+1} = vec4(xTexelR${x}C${e+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${x}C${e} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${x}C${e} = vec4(0.);\n                }\n\n                xCOffset = xC + ${u};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${x}C${e+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${x}C${e+2} = vec4(0.);\n                }\n\n                xR${x}C${e} = vec4(\n                  xTexelR${x}C${e}.xy, xTexelR${x}C${e+2}.xy);\n              `,e+1<p&&(g+=`\n                  xR${x}C${e+1} = vec4(\n                    xTexelR${x}C${e}.zw, xTexelR${x}C${e+2}.zw);\n                `)),g+="}");e<p&&(g+=`\n            vec4 wTexelR${x}C${e} = getW(${x}, ${e}, d1, q);\n            wR${x}C${e} = vec4(wTexelR${x}C${e}.xz, wTexelR${x}C${e}.xz);\n          `,e+1<p&&(g+=`\n              vec4 wTexelR${x}C${e+1} = getW(${x}, ${e+1}, d1, q);\n              wR${x}C${e+1} =\n                vec4(wTexelR${x}C${e+1}.xz, wTexelR${x}C${e+1}.xz);`))}for(let x=0;x<d;x++)for(let t=0;t<p;t++)g+=`dotProd += xR${x}C${t} * wR${x}C${t};`;let m="",b="";n&&(m=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,b="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class zg{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class Bg{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=t[t.length-1],i=n?"<":">";this.userCode=`\n      int getIndex(int i) {\n        ${n?`return ${s} -i - 1;`:"return i;"}\n      }\n\n      void main() {\n        ${ag(r)} coords = getOutputCoords();\n        int end = ${Pg(r,"coords")};\n        float val = 0.0;\n        for (int i = ${s} - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx ${i} end) {\n            continue;\n          }\n          if (idx == end && ${e}) {\n            continue;\n          }\n          ${Pg(r,"coords")} = idx;\n          val += getX(${function(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Pg(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class Wg{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=df.DENSE;const e=mf(t),n=qf();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${jf(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Ug{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=df.DENSE;const e=mf(t),n=qf();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${jf(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class Vg{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class Gg{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class Hg{constructor(t){this.variableNames=["A"],this.outTexUsage=pf.DOWNLOAD;const e=qf();this.outputShape=t,this.userCode=`\n      ${Xf}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class qg{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=pf.DOWNLOAD;const e=qf();this.outputShape=t,this.userCode=`\n      ${Xf}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class jg{constructor(t,e,n=!1){this.variableNames=["A"];const r=qf(),[s,i]=e;this.outputShape=t;let a="result";n&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Kf(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / ${i};\n        int c = imod(flatIndex, ${i});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class Kg{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=qf(),[s,i]=e;this.outputShape=t;let a="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let e=0;e<=1;e++){const n=2*l+e;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${t[2]}) {\n            localCoords[2] += ${e};\n            if(localCoords[1] + ${l} < ${t[1]}) {\n              localCoords[1] += ${l};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${i};\n              c = imod(flatIndex, ${i});\n              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Kf(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${a}\n\n        ${r.output} = ${o};\n      }\n    `}}class Xg{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`;this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${t}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${n?`${r}.0`:"1.0"};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}class Yg{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class Jg{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const s=ag(this.rank),i=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let i=0;i<t.length;i++)s.push(i===e?`int(getIndices(${r[i]}))`:`${r[i]}`);return s.join()}(t,n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}class Zg{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=ag(e.length),s=ag(n.length);this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function Qg(t,e,n,r,s,i,a){!function(t,e){const n=v().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(n,r);const o=function(t,e){return Af(t,e,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t,e),l=t.TEXTURE_2D;return xf(t,e,()=>t.bindTexture(l,o)),xf(t,e,()=>t.texParameteri(l,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),xf(t,e,()=>t.texParameteri(l,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),xf(t,e,()=>t.texParameteri(l,t.TEXTURE_MIN_FILTER,t.NEAREST)),xf(t,e,()=>t.texParameteri(l,t.TEXTURE_MAG_FILTER,t.NEAREST)),xf(t,e,()=>t.texImage2D(l,0,s,n,r,0,i,a,null)),xf(t,e,()=>t.bindTexture(t.TEXTURE_2D,null)),o}class tm{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=v().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){uf[t]=e}(e,t)):this.gl=hf(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===v().getNumber("WEBGL_VERSION")){const t="OES_texture_half_float";if(this.textureFloatExtension=wf(this.gl,this.debug,"OES_texture_float"),Lf(this.gl,t))this.textureHalfFloatExtension=wf(this.gl,this.debug,t);else if(v().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Lf(this.gl,r))this.colorBufferHalfFloatExtension=wf(this.gl,this.debug,r);else if(v().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Lf(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Lf(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t,e){return function(t,e,n){const r=Af(t,e,()=>t.createBuffer(),"Unable to create WebGLBuffer");return xf(t,e,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),xf(t,e,()=>t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW)),r}(t,e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl,this.debug),this.indexBuffer=function(t,e){return function(t,e,n){const r=Af(t,e,()=>t.createBuffer(),"Unable to create WebGLBuffer");return xf(t,e,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r)),xf(t,e,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,n,t.STATIC_DRAW)),r}(t,e,new Uint16Array([0,1,2,2,1,3]))}(this.gl,this.debug),this.framebuffer=function(t,e){return Af(t,e,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl,this.debug),this.textureConfig=yf(this.gl,this.textureHalfFloatExtension)}get debug(){return v().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;xf(t,this.debug,()=>t.finish()),xf(t,this.debug,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),xf(t,this.debug,()=>t.deleteFramebuffer(this.framebuffer)),xf(t,this.debug,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),xf(t,this.debug,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),xf(t,this.debug,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[i,a]=gf(n,r);return Qg(t,e,i,a,s.internalFormatFloat,s.textureFormatFloat,t.FLOAT)}(this.gl,this.debug,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[i,a]=gf(n,r);return Qg(t,e,i,a,s.internalFormatHalfFloat,s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,this.debug,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[i,a]=gf(n,r);return Qg(t,e,i,a,t.RGBA,t.RGBA,t.UNSIGNED_BYTE)}(this.gl,this.debug,t,e)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n,r){xf(t,e,()=>t.bindTexture(t.TEXTURE_2D,n)),r.data instanceof Uint8Array?xf(t,e,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,r.width,r.height,0,t.RGBA,t.UNSIGNED_BYTE,r.data)):xf(t,e,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r)),xf(t,e,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,this.debug,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,i,a){let o,l,u;xf(t,e,()=>t.bindTexture(t.TEXTURE_2D,n)),i instanceof Uint8Array?(o=new Uint8Array(r*s*4),l=t.UNSIGNED_BYTE,u=t.RGBA):(o=new Float32Array(r*s*4),l=t.FLOAT,u=a.internalFormatPackedFloat),o.set(i),xf(t,e,()=>t.texImage2D(t.TEXTURE_2D,0,u,r,s,0,t.RGBA,l,o)),xf(t,e,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,this.debug,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[i,a]=bf(n,r);return Qg(t,e,i,a,s.internalFormatPackedHalfFloat,t.RGBA,s.textureTypeHalfFloat)}(this.gl,this.debug,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r,s){const[i,a]=bf(n,r);return Qg(t,e,i,a,s.internalFormatPackedFloat,t.RGBA,t.FLOAT)}(this.gl,this.debug,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Ef(this.gl,this.debug,this.framebuffer),this.outputTexture=null),xf(this.gl,this.debug,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r,s){const[i,a]=gf(n,r),o=new Uint8Array(function(t,e){return 4*t}(n*r));return xf(t,e,()=>t.readPixels(0,0,i,a,s.downloadTextureFormat,t.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}(this.gl,this.debug,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,s,i){return function(t,e,n,r,s,i,a,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=bf(t,e);return n*r*4}(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,s,i)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r,s){const i=t.createBuffer();xf(t,e,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,i));const a=16*n*r;return xf(t,e,()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ)),xf(t,e,()=>t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,0)),xf(t,e,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),i}(this.gl,this.debug,e,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(v().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const s=new Float32Array(n*r*4);return xf(t,e,()=>t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,s)),s}(this.gl,this.debug,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e,n){const r=Af(t,e,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(xf(t,e,()=>t.shaderSource(r,n)),xf(t,e,()=>t.compileShader(r)),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw function(t,e){const n=$f.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,a=s.map((t,e)=>H((e+1).toString(),i)+t);let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${H(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(n,t.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}(e,this.debug,t),r=function(t,e){const n=qf();return function(t,e,n){const r=Af(t,e,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(xf(t,e,()=>t.shaderSource(r,n)),xf(t,e,()=>t.compileShader(r)),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}(t,e,`${n.version}\n    precision highp float;\n    ${n.attribute} vec3 clipSpacePos;\n    ${n.attribute} vec2 uv;\n    ${n.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e,this.debug),s=function(t,e){return Af(t,e,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e,this.debug);return xf(e,this.debug,()=>e.attachShader(s,r)),xf(e,this.debug,()=>e.attachShader(s,n)),function(t,e,n){if(xf(t,e,()=>t.linkProgram(n)),!1===t.getProgramParameter(n,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error("Failed to link vertex and fragment shaders.")}(e,this.debug,s),this.debug&&Cf(e,this.debug,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(t,e,n,r){return xf(t,e,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),kf(t,e,n,"clipSpacePos",r,3,20,0)&&kf(t,e,n,"uv",r,2,20,12)}(e,this.debug,this.program,this.vertexBuffer)),s}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&xf(this.gl,this.debug,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Cf(this.gl,this.debug,this.program),xf(this.gl,this.debug,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n,r){return Af(t,e,()=>t.getUniformLocation(n,r),'uniform "'+r+'" not present in program.')}(this.gl,this.debug,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),xf(this.gl,this.debug,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),If(this.gl,this.debug,0,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=bf(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Cf(this.gl,this.debug,this.program),Rf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),xf(t,this.debug,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),xf(this.gl,this.debug,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=wf(this.gl,this.debug,2===v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){var e=this;return b(function*(){return yield q(()=>e.disposed||e.isQueryAvailable(t,v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),e.getQueryTime(t,v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),!(this.itemsToPoll.length>1)&&q(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Sf(this.gl,this.debug,t,this.framebuffer),this.debug&&Rf(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Sf(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&Rf(this.gl)):Ef(this.gl,this.debug,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Sf(r,this.debug,t,this.framebuffer),this.debug&&Rf(r),this.outputTexture=t,xf(r,this.debug,()=>r.viewport(0,0,e,n)),xf(r,this.debug,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),xf(this.gl,this.debug,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function em(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!W(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const a=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!W(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)})}class nm{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:i,strideHeight:a,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,g=qf(),m="channelsLast"===h,b=m?0:1,y=m?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${v};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${a} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*v+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*v+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${g.output} = result;\n      }\n    `}}class rm{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class sm{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class im{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,a=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class am{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.effectiveFilterHeight,n=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${n-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e};\n          wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${e*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class om{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.effectiveFilterDepth,n=t.effectiveFilterHeight,r=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${n-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${e};\n           wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${e*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lm{constructor(t,e,n=!1,r=!1,s=!1,i=null,a=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const o=Math.ceil((n?t[1]:t[2])/2),l=n?"i * 2, rc.y":"rc.y, i * 2",u=r?"rc.z, i * 2":"i * 2, rc.z",c=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let d="",p="";i&&(d=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,p="result = activation(result);");const f=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${d}\n\n      const float sharedDimension = ${o}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${o}; i++) {\n          vec4 a = getMatrixA(rc.x, ${l});\n          vec4 b = getMatrixB(rc.x, ${u});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${h[0]});\n          result += (${c[1]} * ${h[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${f}\n\n        ${p}\n\n        setOutput(result);\n      }\n    `}}class um{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class cm{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class hm{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Hf("rc",e),r=ag(e),s=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),i=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),a=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)i=`${e[e.length-1-n]},`+i;n.push(i)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${i}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}}class dm{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=ag(r),i=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class pm{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,s=ag(r),i=e.map(t=>t[0]).join(","),a=e.map((e,n)=>e[0]+t[n]).join(","),o=Hf("rc",r),l=Hf("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===r?2:4;f<g;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(${n});\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class fm{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e;let g="0.0";if(f||(g="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`:`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let m=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(m="avgValue / count");const b=4*Math.floor(i/4),y=i%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===y}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${m});\n      }\n    `}}class gm{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,a=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,g=t.padInfo.front,m=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let v=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(v="avgValue / count");const w=4*Math.floor(i/4),$=i%4,C=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${C}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${2===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${3===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${C}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}class mm{constructor(t,e){this.variableNames=["x"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=Math.ceil(s/n);this.outputShape=[r,i];let a="0.0",o="";"prod"===e?a="1.0":"min"===e?(a="1.0 / 1e-20",o="min"):"max"===e&&(a="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}class bm{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let r=0;r<4;r++){let t="thisRC = rc;";r%2==1&&(t+="thisRC.z += 1;"),r>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${function(t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${jf(["r","c","d"],t)}\n      return ivec3(r, c, d);\n    }\n  `}(e)}\n      ${Kf(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class ym{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,i,a]=t.shape,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class xm{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,i,a,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?i-1:i,r&&n>1?a-1:a],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class vm{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,a,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?i-1:i,r&&n>1?a-1:a],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]},\n          ${l[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${a}.0,\n                                     ${a}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class wm{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,s]=e.shape,[,i,a]=t.shape,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class $m{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[s,i,a,o]=t;this.outputShape=[s,e,n,o];const l=[r&&e>1?i-1:i,r&&n>1?a-1:a],u=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${a}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Cm{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),s=ag(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class km{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=Hf("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=ag(n);var o;function l(n){const r=t.map((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",l(t)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",l(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",l(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class Im{constructor(t,e,n,r,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=ag(s.length),l=ag(i.length);let u="";1===n?u="i":2===n&&(u="i, j");let c="";1===r?c="i":2===r&&(c="i, coords[1]"),this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(getIndices(${u}));\n              flattenedIndex += index * ${e>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${c});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Sm{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Em{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<e.length;r++)a.push(`${n[r]}`),r<t&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=ag(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}class Rm{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ag(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return Am.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,e)=>`sourceLoc.${Am[e]} = start[${e}] + coords.${Am[e]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const Am=["x","y","z","w","u","v"];class Nm{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=ag(this.rank),n=Hf("coords",this.rank),r=Hf("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class Tm{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=ag(n.length),i=ag(n.length);let a="";if(1===r)a="coords * strides + begin";else{let t=0;a=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}class Dm{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=Fm(e,n),s=_m(t,r,n);if(s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]),this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let i;return this.numUsedTextures++,this.log(),r===ff.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===ff.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===ff.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===ff.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===ff.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=_m(e,Fm(n,r),r);s in this.freeTextures||(this.freeTextures[s]=[]),this.freeTextures[s].push(t),this.numFreeTextures++,this.numUsedTextures--;const i=this.usedTextures[s],a=i.indexOf(t);if(a<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(a,1),this.log()}log(){this.logEnabled&&console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`)}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}}}function Fm(t,e){if(t===pf.UPLOAD)return ff.PACKED_2X2_FLOAT32;if(t===pf.RENDER||null==t)return function(t){return v().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?ff.PACKED_2X2_FLOAT32:ff.UNPACKED_FLOAT32:t?ff.PACKED_2X2_FLOAT16:ff.UNPACKED_FLOAT16}(e);if(t===pf.DOWNLOAD||t===pf.PIXELS)return ff.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function _m(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class Om{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[i]*e[i];this.outputShape=n,this.rank=n.length;const r=ag(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<t.length;s++)r.push(`imod(${n[s]}, ${t[s]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class Mm{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Lm="if (isnan(x)) return x;",zm="return abs(x);",Bm=Lm+"\n  return (x < 0.0) ? 0.0 : x;\n",Pm=Lm+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Wm="return (x >= 0.0) ? x : (exp(x) - 1.0);",Um=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Ts};\n  float scale = ${Ds};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Vm="return -x;",Gm="return ceil(x);",Hm="return floor(x);",qm="return exp(x);",jm="return exp(x) - 1.0;",Km=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${cu};\n  float a1 = ${hu};\n  float a2 = ${du};\n  float a3 = ${pu};\n  float a4 = ${fu};\n  float a5 = ${gu};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Xm="return x;",Ym="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Jm="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Zm="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class Qm{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class tb{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=Hf("rc",e),r=ag(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const{segment_util:eb}=h,nb=Au,rb=Nu,sb=Tu,ib=ys,ab={};function ob(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?Ym:Bm;if("elu"===t)return e?Zm:Wm;if("relu6"===t)return e?Jm:Pm;if("prelu"===t)return e?vg:yg;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class lb extends Fu{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!v().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=hf(v().getNumber("WEBGL_VERSION"));this.binaryCache=function(t){return t in ab||(ab[t]={}),ab[t]}(v().getNumber("WEBGL_VERSION")),this.gpgpu=new tm(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;this.textureManager=new Dm(this.gpgpu),this.numMBBeforeWarning=null==v().global.screen?1024:v().global.screen.height*v().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Du(this,Gi())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if(v().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:pf.UPLOAD}),r}move(t,e,n,r){if(v().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:pf.UPLOAD})}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensors:s,slice:i,shape:a,isPacked:o}=e;if(null!=i){let e;e=o?new Qm(a,Xm):new Mm(a,Xm);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeData(n.dataId),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=ct()),c="complex64"===r?yu(s.real.dataSync(),s.imag.dataSync()):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=ct()-u),this.convertAndCacheOnCPU(t,c)}read(t){var e=this;return b(function*(){if(e.pendingRead.has(t)){const n=e.pendingRead.get(t);return new Promise(t=>n.push(t))}const n=e.texData.get(t),{values:r,shape:s,slice:i,dtype:a,complexTensors:o,isPacked:l}=n;if(null!=i){let n;n=l?new Qm(s,Xm):new Mm(s,Xm);const r=e.runWebGLProgram(n,[{dataId:t,shape:s,dtype:a}],a),i=e.read(r.dataId);return e.disposeData(r.dataId),i}if(null!=r)return e.convertAndCacheOnCPU(t);if(!v().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===v().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==a&&v().get("WEBGL_BUFFER_SUPPORTED")){u=e.decode(t);const n=e.texData.get(u.dataId);h=e.gpgpu.createBufferFromTexture(n.texture,...mf(s))}if(e.pendingRead.set(t,[]),"complex64"!==a&&(yield e.gpgpu.createAndWaitForFence()),"complex64"===a){const t=yield Promise.all([o.real.data(),o.imag.data()]);c=yu(t[0],t[1])}else if(null==h)c=e.getValuesFromTexture(t);else{const t=P(s);c=e.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}null!=u&&e.disposeData(u.dataId);const d=e.convertAndCacheOnCPU(t,c),p=e.pendingRead.get(t);return e.pendingRead.delete(t),p.forEach(t=>t(d)),e.pendingDisposal.has(t)&&(e.pendingDisposal.delete(t),e.disposeData(t),e.pendingDeletes--),d})()}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!vf(n))throw v().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=P(e);if(v().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...mf(e)).subarray(0,s);return this.disposeData(n.dataId),i}const i=v().getBool("WEBGL_PACK")&&!0===r,a=i?Df(e):e,o=i?new qg(a):new Hg(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeData(l.dataId),c}time(t){var e=this;return b(function*(){const n=e.activeTimers,r=[];let s=!1;null==e.programTimersStack?(e.programTimersStack=r,s=!0):e.activeTimers.push(r),e.activeTimers=r,t();const i=B(e.activeTimers.map(t=>t.query)).filter(t=>null!=t),a=B(e.activeTimers.map(t=>t.name)).filter(t=>null!=t);e.activeTimers=n,s&&(e.programTimersStack=null);const o={uploadWaitMs:e.uploadWaitMs,downloadWaitMs:e.downloadWaitMs,kernelMs:null,wallMs:null};if(v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=yield Promise.all(i);o.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),o.getExtraProfileInfo=()=>t.map((t,e)=>({name:a[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return e.uploadWaitMs=0,e.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}}startTimer(){return v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ct(),endMs:null}}endTimer(t){return v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=ct(),t)}getQueryTime(t){var e=this;return b(function*(){return v().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?e.gpgpu.waitForQueryAndGetTime(t):t.endMs-t.startMs})()}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;this.releaseGPUData(t);const{complexTensors:e}=this.texData.get(t);null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(t),o=a&&a.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,i)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return v().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Gi().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){return null!=this.getCPUBackend()&&t.every(t=>null==this.texData.get(t.dataId).texture&&P(t.shape)<e)}getGPGPUContext(){return this.gpgpu}complex(t,e){const n=this.makeOutput(t.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:Gi().keep(t.clone()),imag:Gi().keep(e.clone())},n}real(t){return this.texData.get(t.dataId).complexTensors.real.clone()}imag(t){return this.texData.get(t.dataId).complexTensors.imag.clone()}slice(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===P(n))return Te([],n,t.dtype);const{isPacked:r}=this.texData.get(t.dataId),s=qs(t.shape,e,n);if(r||!s){const r=v().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Nm(n):new Rm(n),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const r=this.texData.get(t.dataId),s=this.makeOutput(n,t.dtype),i=this.texData.get(s.dataId);Object.assign(i,r),i.shape=n,i.dtype=t.dtype;let a=js(e,t.strides);r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||t.dataId};const o=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,o+1),s}stridedSlice(t,e,n,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r);const s=Us(e,n,r);if(s.some(t=>0===t))return Te([],s);const i=new Tm(e,r,s);return this.compileAndRun(i,[t])}reverse(t,e){const n=v().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new km(t.shape,e):new Cm(t.shape,e);return this.compileAndRun(n,[t])}concat(t,e){if("complex64"===t[0].dtype){const n=t.map(t=>Ne(t)),r=t.map(t=>Ae(t));return Re(this.concat(n,e),this.concat(r,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>v().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const n=Math.floor(t.length/2),r=this.concat(t.slice(0,n),e),s=this.concat(t.slice(n),e);return this.concat([r,s],e)}if(v().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){const n=new Sg(t.map(t=>t.shape),e);return this.compileAndRun(n,t)}const n=Ee(t.map(t=>t.shape),e),r=t.map(t=>t.as2D(-1,P(t.shape.slice(e)))),s=new Ig(r.map(t=>t.shape));return this.compileAndRun(s,r).reshape(n)}neg(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(v().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Vm,t.dtype);const e=new Mm(t.shape,Vm);return this.compileAndRun(e,[t])}batchMatMul(t,e,n,r){const s=n?t.shape[2]:t.shape[1],i=r?e.shape[1]:e.shape[2],a=n?t.shape[1]:t.shape[2],[o,,]=t.shape;if((1===s||1===i)&&a>1e3){n&&(t=Wr(t,[0,2,1])),r&&(e=Wr(e,[0,2,1]));const s=1===i?t:t.as3D(o,a,1),l=1===i?2:1,u=1===i?e.as3D(o,1,a):e;return this.multiply(s,u).sum(l,!0)}const l=Ft(t.dtype,e.dtype),u=new lm(t.shape,[o,s,i],n,r);return this.compileAndRun(u,[t,e],l)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:s,activation:i,preluActivationWeights:a}){const o=n?t.shape[2]:t.shape[1],l=r?e.shape[1]:e.shape[2],[u,,]=t.shape,c=Ft(t.dtype,e.dtype),h=null!=s,d=null!=a,p=i?ob(i,!0):null,f=new lm(t.shape,[u,o,l],n,r,h,p,d),g=[t,e];return s&&g.push(s),a&&g.push(a),this.compileAndRun(f,g,c)}multiply(t,e){if("complex64"===t.dtype){const n=this.texData.get(t.dataId),r=this.texData.get(e.dataId),s=new fg("return areal * breal - aimag * bimag;",t.shape,e.shape),i=new fg("return areal * bimag + aimag * breal;",t.shape,e.shape),a=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag),this.makeComplexComponentTensorInfo(e,r.complexTensors.real),this.makeComplexComponentTensorInfo(e,r.complexTensors.imag)],o=this.compileAndRun(s,a),l=this.compileAndRun(i,a),u=this.complex(o,l);return o.dispose(),l.dispose(),u}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,bg,t.dtype);const n=new xg(bg,t.shape,e.shape);return this.compileAndRun(n,[t,e],t.dtype)}batchNorm(t,e,n,r,s,i){const a=[t,e,n];let o=null;null!=r&&(o=r.shape,a.push(r));let l=null;if(null!=s&&(l=s.shape,a.push(s)),v().getBool("WEBGL_PACK_NORMALIZATION")){const r=new pg(t.shape,e.shape,n.shape,o,l,i);return this.compileAndRun(r,a)}const u=new dg(t.shape,e.shape,n.shape,o,l,i);return this.compileAndRun(u,a)}localResponseNormalization4D(t,e,n,r,s){const i=v().getBool("WEBGL_PACK_NORMALIZATION")?new im(t.shape,e,n,r,s):new rm(t.shape,e,n,r,s);return this.compileAndRun(i,[t])}LRNGrad(t,e,n,r,s,i,a){const o=new sm(e.shape,r,s,i,a);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map(t=>dt(t)),r=Xe(t.shape,t.dtype,n);return rb(r,e)}const n=new Om(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const r=v().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pm(t.shape,e,n):new dm(t.shape,e,n);return this.compileAndRun(r,[t])}gather(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);const r=new Jg(t.shape,e.size,n);return this.compileAndRun(r,[t,e])}batchToSpaceND(t,e,n){M(t.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),s=su(t.shape,e,r),i=iu(s.length,e.length),a=au(t.shape,e,r),o=ou(n,e.length),l=lu(a,n,e.length);return Wr(t.reshape(s),i).reshape(a).slice(o,l)}spaceToBatchND(t,e,n){M(t.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const r=e.reduce((t,e)=>t*e),s=[[0,0]];s.push(...n);for(let u=1+e.length;u<t.shape.length;++u)s.push([0,0]);const i=t.pad(s),a=su(i.shape,e,r,!1),o=iu(a.length,e.length,!1),l=au(i.shape,e,r,!1);return Wr(i.reshape(a),o).reshape(l)}reduce(t,e,n){const r=t.shape[0],s=t.shape[1],i={windowSize:ro(s),inSize:s,batchSize:r},a=new mm(i,e),o=this.compileAndRun(a,[t],n);return 1===o.shape[1]?o:this.reduce(o,e,n)}argReduce(t,e,n=null){let r=t.shape[0],s=t.shape[1];null!=n&&(r=n.shape[0],s=n.shape[1]);const i={windowSize:ro(s),inSize:s,batchSize:r},a=new Vf(i,e,null==n),o=[t];null!=n&&o.push(n);const l=this.compileAndRun(a,o,"int32");return 1===l.shape[1]?l:this.argReduce(t,e,l)}argReducePacked(t,e,n=null){const r=null!=n?n.shape:t.shape,s=ro(r[r.length-1]),i=new ug(r,s,e,null==n),a=this.compileAndRun(i,null==n?[t]:[t,n],"int32");return a.rank===t.rank?this.argReducePacked(t,e,a):a}sum(t,e){pn("sum",e,t.rank);const[n,r]=hn(t.shape,e),s=P(r),i=t.as2D(-1,s),a=_t(t.dtype);return this.reduce(i,"sum",a).reshape(n)}prod(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);const[n,r]=hn(t.shape,e),s=P(r),i=t.as2D(-1,s),a=_t(t.dtype);return this.reduce(i,"prod",a).reshape(n)}unsortedSegmentSum(t,e,n){let r=0;const s=fn([r],t.rank);let i=t;null!=s&&(i=Wr(t,s),r=mn(1,t.rank)[0]);const a=eb.computeOutShape(i.shape,r,n),o=P([i.shape[r]]),l=i.as2D(-1,o),u=_t(t.dtype);let c=this.segOpCompute(l,"unsortedSegmentSum",e,u,n).reshape(a);return null!=s&&(c=Wr(c,gn(s))),c}segOpCompute(t,e,n,r,s){const i=t.shape[0],a=t.shape[1],o=eb.segOpComputeOptimalWindowSize(a,s),l=new Sm({windowSize:o,inSize:a,batchSize:i,numSegments:s},e),u=this.compileAndRun(l,[t,n],r);return u.shape[1]===s?u:(n=Ge(0,s).tile([a/o]),this.segOpCompute(u,e,n,r,s))}argMinMaxReduce(t,e,n){const r=[e];if(pn("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!v().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,s]=hn(t.shape,r),i=P(s),a=t.as2D(-1,i);return this.argReduce(a,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);const s=new Bg(t.shape,n,r);return this.compileAndRun(s,[t])}equal(t,e){if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new xg("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}notEqual(t,e){if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(notEqual(a, b));\n","bool");const n=new xg("return float(a != b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const n=new xg("return float(a < b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}lessEqual(t,e){if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new xg("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const n=new xg("return float(a > b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greaterEqual(t,e){if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new xg("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new Mm(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new xg("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new xg("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const r=new Em(t.rank,e.shape,e.rank);return this.compileAndRun(r,[t,e,n],Ft(e.dtype,n.dtype))}where(t){mu("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return ib(t.shape,e)}topk(t,e,n){const r=t.dataSync();return sb(r,t.shape,t.dtype,e,n)}min(t,e){pn("min",e,t.rank);const[n,r]=hn(t.shape,e),s=P(r),i=t.as2D(-1,s);return this.reduce(i,"min",i.dtype).reshape(n)}minimum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);const n=v().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wg("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new xg("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}mod(t,e){const n=v().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wg("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new xg("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);const n=v().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wg("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new xg("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}all(t,e){pn("all",e,t.rank);const[n,r]=hn(t.shape,e),s=P(r),i=t.as2D(-1,s);return this.reduce(i,"all",i.dtype).reshape(n)}any(t,e){pn("any",e,t.rank);const[n,r]=hn(t.shape,e),s=P(r),i=t.as2D(-1,s);return this.reduce(i,"any",i.dtype).reshape(n)}floorDiv(t,e){const n="int32";if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new xg("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}add(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,gg);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.add(t,e);const n=Ft(t.dtype,e.dtype);if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,gg,n);const r=new xg(gg,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}packedUnaryOp(t,e,n){const r=new Qm(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,s=!1){const i=new wg(n,t.shape,e.shape,s);return this.compileAndRun(i,[t,e],r)}complexSeparableBinaryOp(t,e,n){const r=this.texData.get(t.dataId),s=this.texData.get(e.dataId),[i,a]=[[r.complexTensors.real,s.complexTensors.real],[r.complexTensors.imag,s.complexTensors.imag]].map(r=>{const[s,i]=r,a=this.makeComplexComponentTensorInfo(t,s),o=this.makeComplexComponentTensorInfo(e,i),l=new xg(n,t.shape,e.shape);return this.compileAndRun(l,[a,o],Ft(s.dtype,i.dtype))}),o=this.complex(i,a);return i.dispose(),a.dispose(),o}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>v().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map(t=>t.dtype).reduce((t,e)=>Ft(t,e)),n=t.map(t=>t.shape),r=v().getBool("WEBGL_PACK")?new Uf(t[0].shape,n):new Wf(t[0].shape,n);return this.compileAndRun(r,t,e)}subtract(t,e){if("complex64"===t.dtype&&"complex64"===e.dtype)return this.complexSeparableBinaryOp(t,e,mg);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);const n=Ft(t.dtype,e.dtype);if(v().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,mg,t.dtype);const r=new xg(mg,t.shape,e.shape);return this.compileAndRun(r,[t,e],n)}pow(t,e){const n=v().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wg("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new xg("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),r=Ft(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],r)}ceil(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(v().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Gm,t.dtype);const e=new Mm(t.shape,Gm);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(v().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Hm,t.dtype);const e=new Mm(t.shape,Hm);return this.compileAndRun(e,[t])}sign(t){const e=new Mm(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new Mm(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new Mm(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new Mm(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new Mm(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(v().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,qm,t.dtype);const e=new Mm(t.shape,qm);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(v().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,jm,t.dtype);const e=new Mm(t.shape,jm);return this.compileAndRun(e,[t])}softmax(t,e){const n=j([e],t.shape),r=Ea(t,n),s=dn(r.shape,n),i=this.subtract(t,r.reshape(s)),a=this.exp(i),o=this.sum(a,n).reshape(s);return an(a,o)}log(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(v().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new Mm(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new Mm(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new Mm(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);const e=new Mm(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new Mm(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=v().getBool("WEBGL_PACK")?new Qm(t.shape,Ym):new Mm(t.shape,Bm),this.compileAndRun(e,[t])}relu6(t){let e;return e=v().getBool("WEBGL_PACK")?new Qm(t.shape,Jm):new Mm(t.shape,Pm),this.compileAndRun(e,[t])}prelu(t,e){const n=v().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wg(vg,t.shape,e.shape):new xg(yg,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if(v().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Zm,t.dtype);const e=new Mm(t.shape,Wm);return this.compileAndRun(e,[t])}eluDer(t,e){const n=v().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wg("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new xg("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new Mm(t.shape,Um);return this.compileAndRun(e,[t])}int(t){const e=new Mm(t.shape,"return float(int(x));");return this.compileAndRun(e,[t],"int32")}clip(t,e,n){let r;r=v().getBool("WEBGL_PACK_CLIP")?new Cg(t.shape):new $g(t.shape);const s=r.getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,s)}abs(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(v().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,zm,t.dtype);const e=new Mm(t.shape,zm);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new kg(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensors.real),this.makeComplexComponentTensorInfo(t,e.complexTensors.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new Mm(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new Mm(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}sin(t){const e=new Mm(t.shape,"if (isnan(x)) return x;\n  return sin(x);\n");return this.compileAndRun(e,[t])}cos(t){const e=new Mm(t.shape,"if (isnan(x)) return x;\n  return cos(x);\n");return this.compileAndRun(e,[t])}tan(t){const e=new Mm(t.shape,"return tan(x);");return this.compileAndRun(e,[t])}asin(t){const e=new Mm(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new Mm(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new Mm(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}atan2(t,e){const n=v().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wg("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new xg("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",t.shape,e.shape);return this.compileAndRun(n,[t,e])}sinh(t){const e=new Mm(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new Mm(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new Mm(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new Mm(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new Mm(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new Mm(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new Mm(t.shape,Km);return this.compileAndRun(e,[t])}step(t,e){const n=new Mm(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,r,s,i){const a=t.shape,o=this.texData.get(t.dataId),l="channelsLast"===n.dataFormat,u=a[2]%2!=0&&!!o.isPacked;if((1==a[0]*a[1]*a[2]||1===n.outChannels)&&n.inChannels>1e3||!v().getBool("WEBGL_LAZILY_UNPACK")||!v().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!u){const o=this.reshape(t,[1,l?a[0]*a[1]*a[2]:a[0]*a[2]*a[3],n.inChannels]),u=this.reshape(e,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:o,b:u,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:i}),n.outShape)}const c={dataId:t.dataId,shape:[1,l?a[0]*a[1]*(a[2]+1):a[0]*a[2]*(a[3]+1),n.inChannels],dtype:t.dtype},h=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,M(_f(o.shape,c.shape),()=>`packed reshape ${o.shape} to ${c.shape} isn't free`);const d=this.reshape(e,[1,n.inChannels,n.outChannels]),p=this.fusedBatchMatMul({a:c,b:d,transposeA:!1,transposeB:!1,bias:r,activation:s,preluActivationWeights:i}),f=this.texData.get(p.dataId);return M(f.isPacked,()=>"batchMatMul result is expected to be packed"),o.shape=h,f.shape=n.outShape,Gi().makeTensorFromDataId(p.dataId,n.outShape,p.dtype)}conv2dWithIm2Row(t,e,n,r,s,i){const{filterWidth:a,filterHeight:o,inChannels:l,outWidth:u,outHeight:c,dataFormat:h}=n,d="channelsLast"===h,p=a*o*l,f=c*u,g=[p,f],m=t.squeeze([0]),b=e.reshape([1,p,-1]),y=new nm(g,m.shape,n),x=this.compileAndRun(y,[m]).reshape([1,g[0],g[1]]),v=null!=r,w=null!=i,$=s?ob(s,!0):null,C=new lm(x.shape,[1,f,n.outChannels],!0,!1,v,$,w),k=[x,b];r&&k.push(r),w&&k.push(i);return this.compileAndRun(C,k).reshape(d?[1,c,u,n.outChannels]:[1,n.outChannels,c,u])}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,s,i);if(v().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,s,i);const a=null!=r,o=null!=i,l=s?ob(s,!1):null,u=new _g(n,a,l,o),c=[t,e];return r&&c.push(r),i&&c.push(i),this.compileAndRun(u,c)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(v().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const r=new _g(n);return this.compileAndRun(r,[t,e])}conv2dDerInput(t,e,n){const r=new Ag(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new Rg(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:s,preluActivationWeights:i}){const a=v().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,o=s?ob(s,a):null,l=[t,e],u=null!=r,c=null!=i;let h;return u&&l.push(r),c&&l.push(i),a?(h=new Lg(n,u,o,c),this.compileAndRun(h,l)):(h=new Mg(n,u,o,c),this.compileAndRun(h,l))}depthwiseConv2D(t,e,n){let r;return v().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Lg(n),this.compileAndRun(r,[t,e])):(r=new Mg(n),this.compileAndRun(r,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new Fg(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new Dg(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new Og(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new Tg(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new Ng(n);return this.compileAndRun(r,[t,e])}maxPool(t,e){const n=new fm(e,"max",!1);return this.compileAndRun(n,[t])}avgPool(t,e){const n=new fm(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}maxPoolBackprop(t,e,n,r){const s=new fm(r,"max",!0),i=this.compileAndRun(s,[e]),a=new am(r),o=this.compileAndRun(a,[t,i],e.dtype);return i.dispose(),o}avgPoolBackprop(t,e,n){const r=new cg(n);return this.compileAndRun(r,[t],e.dtype)}cast(t,e){return Su(t,e,this)}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let s=0;for(let l=0;l<t.rank;l++)l!==e&&(r[s++]=t.shape[l]);const i=new Array(t.rank).fill(0),a=t.shape.slice();a[e]=1;const o=new Array(n);for(let l=0;l<o.length;l++)i[e]=l,o[l]=this.slice(t,i,a).reshape(r);return o}avgPool3d(t,e){const n=new gm(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new hg(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new gm(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const s=new gm(r,"max",!0),i=this.compileAndRun(s,[e]),a=new om(r),o=this.compileAndRun(a,[t,i],e.dtype);return i.dispose(),o}reshape(t,e){const n=this.texData.get(t.dataId);if(n.isPacked&&!_f(t.shape,e)&&(null===n.texture||!_f(n.shape,e))){const n=this.packedReshape(t,e);return Gi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}return Eu(t,e)}resizeBilinear(t,e,n,r){const s=v().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vm(t.shape,e,n,r):new xm(t.shape,e,n,r);return this.compileAndRun(s,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new ym(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const s=new $m(t.shape,e,n,r);return this.compileAndRun(s,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new wm(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,r){const s=e?t:_o(t),i=new um(s.shape[0],s.shape[1],n),a=i.getCustomSetupFunc(r);return this.compileAndRun(i,[s],"int32",a)}oneHot(t,e,n,r){const s=new cm(t.size,e,n,r);return this.compileAndRun(s,[t])}diag(t){const e=new Gg(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,s,i){const a=new zg(t.shape,e.shape,r,s,i);return this.compileAndRun(a,[t,e,n],"float32")}depthToSpace(t,e,n){M(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`);const r=t.shape[0],s=("NHWC"===n?t.shape[1]:t.shape[2])*e,i=("NHWC"===n?t.shape[2]:t.shape[3])*e,a=("NHWC"===n?t.shape[3]:t.shape[1])/(e*e),o=new Vg("NHWC"===n?[r,s,i,a]:[r,a,s,i],e,n);return this.compileAndRun(o,[t])}split(t,e,n){return nb(t,e,n)}scatterND(t,e,n){const{sliceRank:r,numUpdates:s,sliceSize:i,strides:a,outputSize:o}=Ho(0,t,n),l=[o/i,i],u=t.reshape([s,r]),c=e.reshape([s,i]);if(0===o)return Eu(Te([]),n);const h=Fe(0),d=new Im(s,r,u.rank,c.rank,a,l);return this.compileAndRun(d,[c,u,h]).reshape(n)}sparseToDense(t,e,n,r){const{sliceRank:s,numUpdates:i,strides:a,outputSize:o}=Ho(0,t,n),l=new Im(i,s,t.rank,e.rank,a,[o,1],!1);return this.compileAndRun(l,[e,t,r]).reshape(n)}fft(t){return this.fftImpl(t,!1)}ifft(t){return this.fftImpl(t,!0)}fftImpl(t,e){const n=this.texData.get(t.dataId),r=new Xg("return real * expR - imag * expI;",t.shape,e),s=new Xg("return real * expI + imag * expR;",t.shape,e),i=[this.makeComplexComponentTensorInfo(t,n.complexTensors.real),this.makeComplexComponentTensorInfo(t,n.complexTensors.imag)],a=this.compileAndRun(r,i),o=this.compileAndRun(s,i),l=this.complex(a,o).as2D(t.shape[0],t.shape[1]);return a.dispose(),o.dispose(),l}gatherND(t,e){const n=e.shape,r=n[n.length-1],[s,i,a,o]=uu(t,e),l=e.reshape([i,r]),u=t.reshape([t.size/a,a]),c=new Zg(r,o,[i,a]);return this.compileAndRun(c,[u,l]).reshape(s)}fill(t,e,n){if("string"===(n=n||et(e))){const r=Y(n,P(t));return r.fill(e),Gi().makeTensor(r,t,n,this)}{const r=new Yg(t,e),s=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,s)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return Ru(t,e,n)}makeTensorInfo(t,e){const n=this.write(null,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e){const{dataId:n}=this.makeTensorInfo(t,e);return Gi().makeTensorFromDataId(n,t,e,this)}unpackTensor(t){const e=new tb(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new hm(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Nf(t.shape),...Tf(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[Nf(e),...Tf(e)],i=new bm(s,n),a=this.runWebGLProgram(i,[r],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,i=Df(r);let a;return a=n?new Ug(i):new Wg(i),{dtype:s,shape:r,dataId:this.runWebGLProgram(a,[{shape:i,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const i=this.makeTensorInfo(t.outputShape,n),a=this.texData.get(i.dataId);if(t.packedOutput&&(a.isPacked=!0),t.outPackingScheme===df.DENSE){const e=mf(t.outputShape);a.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(a.usage=t.outTexUsage),0===P(i.shape))return a.values=X(i.dtype,0),i;const o=[],l=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&P(e.shape)<=v().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!_f(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const u={shape:i.shape,texData:a,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach(t=>{r+=`${t.shape}_${t.isUniform?"uniform":t.texData.texShape}_${null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0}`});let s=t.constructor.name;return s+="_"+r+"_"+t.userCode,s}(t,l,u),h=this.getAndSaveBinary(c,()=>function(t,e,n,r){const s=e.userCode,i=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),a=i.map(t=>t.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Jf(i,o,s,e.packedInputs),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===v().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const d={};for(let p=0;p<e.variableNames.length;p++){const n=e.variableNames[p],r=!1;d[n]=t.getUniformLocation(u,n,r),d[`offset${n}`]=t.getUniformLocation(u,`offset${n}`,r)}return{program:e,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:a,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,t,l,u)),d=null!=this.activeTimers;let p;if(d&&(p=this.startTimer()),function(t,e,n,r,s){em(e.inShapeInfos,n),em([e.outShapeInfo],[r]);const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i,a[0],a[1]):t.setOutputMatrixTexture(i,a[0],a[1]),t.setProgram(e.webGLProgram),1===v().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],a=e.uniformLocations[`offset${s}`];if(null!=i){if(n.isUniform){if(P(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}return}null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,r)}}),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach(t=>this.disposeData(t.dataId)),d&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)})),!v().getBool("WEBGL_LAZILY_UNPACK")&&a.isPacked&&!1===s){const t=this.unpackTensor(i);return this.disposeData(i.dataId),t}return i}compileAndRun(t,e,n,r,s=!1){const i=this.runWebGLProgram(t,e,n=n||e[0].dtype,r,s);return Gi().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(v().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=qi(()=>{if(!v().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=v().getBool("DEBUG");v().set("DEBUG",!1);const e=this.abs(Fe(1e-8)).dataSync()[0];if(v().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=e;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=ct());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=v().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?O(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length&&(t=K(t).newShape);let r=P(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Nf(t);let n=2,s=2;return t.length&&([n,s]=Tf(t)),r=e*(n/2)*(s/2),G(r).map(t=>2*t)}return G(r)}(n,o),e.texShape=c),null!=s){const t=Df(n);let i,a=c[1],h=c[0];const d=s instanceof Uint8Array;o?([a,h]=bf(c[0],c[1]),i=new Kg(t,[h,a],d)):i=new jg(t,[h,a],d);const p=this.makeTensorInfo([h,a],r);this.texData.get(p.dataId).usage=d?pf.PIXELS:pf.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),a,h,s);const f=this.runWebGLProgram(i,[p],r,null,!0),g=this.texData.get(f.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeData(p.dataId),this.texData.delete(f.dataId),e.values=null,l&&(this.uploadWaitMs+=ct()-u)}else{const t=this.acquireTexture(c,a,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Z(e)}}const ub={kernelName:Yt,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t;return function(t,e,n){let r=new xg("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",t.shape,e.shape);return v().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new wg("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",t.shape,e.shape,!0)),n.runWebGLProgram(r,[t,e],"float32")}(n,r,e)}};class cb{constructor(t){this.variableNames=["A"];const e=qf(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class hb{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=qf(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const db={kernelName:fe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,i];(o||a)&&(null==pb&&(pb=document.createElement("canvas").getContext("2d")),pb.canvas.width=l,pb.canvas.height=u,pb.drawImage(s,0,0,l,u),s=pb.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=pf.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=v().getBool("WEBGL_PACK")?new hb(h):new cb(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let pb;const{maxImpl:fb,transposeImpl:gb}=d;function mb(t,e,n,r){const[s,i]=t.shape,a={windowSize:ro(i),inSize:i,batchSize:s},o=new mm(a,n),l=r.runWebGLProgram(o,[t],e);return 1===l.shape[1]?l:mb(l,e,n,r)}function bb(t,e,n){const r=n.texData.get(t.dataId);return!r.isPacked||_f(t.shape,e)||null!==r.texture&&_f(r.shape,e)?{dataId:t.dataId,shape:e,dtype:t.dtype}:function(t,e,n){const r=[Nf(t.shape),...Tf(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},i=[Nf(e),...Tf(e)],a=new bm(i,r),o=n.runWebGLProgram(a,[s],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(t,e,n)}function yb(t,e,n,r){const s=P(e),i=bb(t,[P(t.shape)/s,s],r),a=mb(i,t.dtype,"max",r);return i.dataId!==t.dataId&&r.disposeData(i.dataId),bb(a,n,r)}class xb{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[e[i]];this.outputShape=n,this.rank=n.length;const r=ag(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<t.length;s++)r[t[s]]=n[s];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class vb{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ag(this.rank),s=Gf("rc",this.rank),i=new Array(this.rank);for(let u=0;u<e.length;u++)i[e[u]]=s[u];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function wb(t,e,n){const r=v().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vb(t.shape,e):new xb(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}const $b=kl,Cb=[{kernelName:ee,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{reductionIndices:s}=e,i=n,a=r.shape.length;let o=j(s,r.shape);const l=fn(o,a),u=null!=l,c=i.shouldExecuteOnCPU([r]);let h=r;if(u){if(c){const t=i.texData.get(h.dataId).values,e=new Array(a);for(let s=0;s<e.length;s++)e[s]=r.shape[l[s]];const n=gb(t,r.shape,r.dtype,l,e);h=i.makeTensorInfo(e,r.dtype),i.texData.get(h.dataId).values=n}else h=wb(r,l,i);o=mn(o.length,a)}pn("max",o,a);const[d,p]=hn(h.shape,o);let f;if(c){const t=i.texData.get(h.dataId).values,e=fb(t,P(p),d,r.dtype);f=i.makeTensorInfo(d,r.dtype),i.texData.get(f.dataId).values=e}else f=yb(h,p,d,i);return u&&i.disposeData(h.dataId),f}},db,ub,{kernelName:le,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{mu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o}=n,l=e;return Cl(l.readSync(r.dataId),l.readSync(s.dataId),i,a,o)}},{kernelName:ue,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{mu("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}=n,u=e,c=u.readSync(r.dataId),h=u.readSync(s.dataId),d=i,p=a,f=o,g=l,{selectedIndices:m,selectedScores:b}=$b(c,h,d,p,f,g);return[m,b]}},{kernelName:de,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e,s=new Mm(n.shape,"return x * x;");return r.runWebGLProgram(s,[n],n.dtype)}},{kernelName:he,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{a:n,b:r}=t,s="return (a - b) * (a - b);",i=e,a=v().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wg(s,n.shape,r.shape):new xg(s,n.shape,r.shape);return i.compileAndRun(a,[n,r])}},{kernelName:pe,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:s}=e,i=n,a=new Array(r.shape.length);for(let l=0;l<a.length;l++)a[l]=r.shape[s[l]];let o;if(i.shouldExecuteOnCPU([r])){const t=i.texData.get(r.dataId).values,e=gb(t,r.shape,r.dtype,s,a);o=i.makeTensorInfo(a,r.dtype),i.texData.get(o.dataId).values=e}else o=wb(r,s,i);return o}},{kernelName:ie,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=n;M(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];M(vr(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const c=cr(r.shape,s,i,u,a),[h,d]=function(t,e,n,r){let s=new fm(n,"max",!1);const i=r.runWebGLProgram(s,[t],"float32");return s=new fm(n,"max",!0,!0,e),[i,r.runWebGLProgram(s,[t],"float32")]}(r,o,c,l);return[h,d]}}];for(const tc of Cb)N(tc);Wt()&&Xi("webgl",()=>new lb,2);var kb=n(26215),Ib=n(80628),Sb=n(88002),Eb=n(87519),Rb=n(28642),Ab=n(75965),Nb=n(54242),Tb=n(37716),Db=n(34904),Fb=n(27606),_b=function(t,e,n,r){return new(n||(n=Promise))(function(s,i){function a(t){try{l(r.next(t))}catch(e){i(e)}}function o(t){try{l(r.throw(t))}catch(e){i(e)}}function l(t){t.done?s(t.value):function(t){return t instanceof n?t:new n(function(e){e(t)})}(t.value).then(a,o)}l((r=r.apply(t,e||[])).next())})};const Ob=["article"],Mb=["canvas"],Lb=function(t,e){return[t,e]},zb=(t,e,n,r,s)=>(t-e)*(s-r)/(n-e)+r,Bb=[{path:"",component:(()=>{class t extends Nb.H{constructor(t,e,n){super(e),this.canvasDraw=n,this.modelSubject=new kb.X({a:NaN,b:NaN}),this.model$=this.modelSubject.pipe((0,Ib.e)(1e3),(0,Sb.U)(({a:t,b:e})=>({a:t.toFixed(3),b:e.toFixed(3)})),(0,Sb.U)(({a:t,b:e})=>`Y = ${t}X + ${e}`),(0,Eb.x)()),this.costSubject=new kb.X(NaN),this.cost$=this.costSubject.pipe((0,Ib.e)(1e3),(0,Sb.U)(t=>t.toFixed(3)),(0,Eb.x)()),this.xs=[],this.ys=[],this._a=Pe(Fe(Math.random())),this._b=Pe(Fe(Math.random())),t.setTitle("Linear Regression with TensorFlow")}get a(){return this._a.dataSync()[0]}get b(){return this._b.dataSync()[0]}get Ys(){return this.ys}ngOnInit(){this.canvas=this.canvasRef.nativeElement,this.canvasDraw.setCanvas(this.canvas)}onMouseClick(t){return _b(this,void 0,void 0,function*(){const e=this.normalizeX(t.offsetX),n=this.normalizeY(t.offsetY);this.canvasDraw.setPointOnCanvas(this.denormalizeX(e),this.denormalizeY(n),255,0,0,255),this.xs.push(e),this.ys.push(n),yield this.train(75),yield this.updateCanvas()})}predict(t){return qi(()=>this._a.mul(_e(t)).add(this._b))}typeset(){this.mathJax.MathJaxTypeset()}normalizeX(t){return zb(t,0,this.canvas.clientWidth,0,1)}denormalizeX(t){return zb(t,0,1,0,this.canvas.clientWidth)}normalizeY(t){return zb(t,0,this.canvas.clientHeight,1,0)}denormalizeY(t){return zb(t,0,1,this.canvas.clientHeight,0)}drawPredictions(t,e){return new Promise(n=>{for(let r=0;r<t.length;r++)this.canvasDraw.setPointOnCanvas(t[r],e[r],255,0,0,255);n()})}drawPoint(){for(let t=0;t<this.xs.length;t++){const e=this.denormalizeX(this.xs[t]),n=this.denormalizeY(this.ys[t]);this.canvasDraw.setPointOnCanvas(e,n,255,0,0,255)}}updateCanvas(){return _b(this,void 0,void 0,function*(){this.canvasDraw.cleanCanvas(),this.drawPoint();const t=Array.from(Array(this.canvas.clientWidth).keys()).filter(t=>t%2==0),e=this.predict(t.map(this.normalizeX,this)).dataSync().map(this.denormalizeY,this);yield this.drawPredictions(t,e)})}train(t=50){return _b(this,void 0,void 0,function*(){const e=eu.sgd(.5);this._a.assign(Fe(Math.random())),this._b.assign(Fe(Math.random()));for(let n=0;n<t;n++)e.minimize(()=>{const t=_e(this.ys),e=this.predict(this.xs),n=fl(t,e);return this.costSubject.next(n.dataSync()[0]),this.modelSubject.next({a:this._a.dataSync()[0],b:this._b.dataSync()[0]}),n}),yield ru()})}}return t.\u0275fac=function(e){return new(e||t)(Tb.Y36(Db.y),Tb.Y36(Ab.O),Tb.Y36(Fb.X))},t.\u0275cmp=Tb.Xpm({type:t,selectors:[["app-tfjs-linear-regression"]],viewQuery:function(t,e){if(1&t&&(Tb.Gf(Ob,7,Rb.Dm),Tb.Gf(Mb,7)),2&t){let t;Tb.iGM(t=Tb.CRH())&&(e.mathJax=t.first),Tb.iGM(t=Tb.CRH())&&(e.canvasRef=t.first)}},features:[Tb._Bn([Ab.O]),Tb.qOj],decls:13,vars:10,consts:[[1,"markdown-container"],["mathjax","","src","assets/blogs/tf-linear-regression.md",3,"load"],["article",""],[3,"mathjax"],[1,"fixed-height"],[3,"click"],["canvas",""]],template:function(t,e){1&t&&(Tb.TgZ(0,"div",0),Tb.TgZ(1,"markdown",1,2),Tb.NdJ("load",function(){return e.typeset()}),Tb.qZA(),Tb.qZA(),Tb.TgZ(3,"div",3),Tb.ALo(4,"async"),Tb.ALo(5,"async"),Tb.TgZ(6,"div",4),Tb._uU(7),Tb.qZA(),Tb.TgZ(8,"div",4),Tb._uU(9),Tb.qZA(),Tb.qZA(),Tb.TgZ(10,"div"),Tb.TgZ(11,"canvas",5,6),Tb.NdJ("click",function(t){return e.onMouseClick(t)}),Tb.qZA(),Tb.qZA()),2&t&&(Tb.xp6(3),Tb.Q6J("mathjax",Tb.WLB(7,Lb,Tb.lcZ(4,3,e.model$),Tb.lcZ(5,5,e.cost$))),Tb.xp6(4),Tb.hij("model: \\( ","{}"," \\)"),Tb.xp6(2),Tb.hij("cost = \\( ","{}"," \\)"))},directives:[f.lF,Rb.Dm],pipes:[p.Ov],styles:[".markdown-container[_ngcontent-%COMP%]{padding:2em}canvas[_ngcontent-%COMP%]{width:400px;height:400px;border:black solid}div.fixed-height[_ngcontent-%COMP%]{height:25px}"],changeDetection:0}),t})()}];let Pb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Tb.oAB({type:t}),t.\u0275inj=Tb.cJS({imports:[[g.Bz.forChild(Bb)],g.Bz]}),t})(),Wb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Tb.oAB({type:t}),t.\u0275inj=Tb.cJS({imports:[[p.ez,Pb,Rb.fO.forChild(),f.JP.forChild()]]}),t})()},75410:function(){},48628:function(){},31601:function(){},67792:function(){},75042:function(){}}]);